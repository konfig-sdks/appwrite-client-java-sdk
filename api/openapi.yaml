openapi: 3.0.0
info:
  contact:
    email: team@appwrite.io
    name: Appwrite Team
    url: https://appwrite.io/support
  description: "Appwrite backend as a service cuts up to 70% of the time and costs\
    \ required for building a modern application. We abstract and simplify common\
    \ development tasks behind a REST APIs, to help you develop your app in a fast\
    \ and secure way. For full API documentation and tutorials go to [https://appwrite.io/docs](https://appwrite.io/docs)"
  license:
    name: BSD-3-Clause
    url: https://raw.githubusercontent.com/appwrite/appwrite/master/LICENSE
  termsOfService: https://appwrite.io/policy/terms
  title: Appwrite
  version: 1.5.0
  x-konfig-has-globally-required-security: true
  x-konfig-uses-multipart-form-data: true
externalDocs:
  description: "Full API docs, specs and tutorials"
  url: https://appwrite.io/docs
servers:
- url: https://cloud.appwrite.io/v1
tags:
- description: The Account service allows you to authenticate and manage a user account.
  name: account
  x-globalAttributes: []
- description: The Teams service allows you to group users of your project and to
    enable them to share read and write access to your project resources
  name: teams
  x-globalAttributes: []
- description: The Locale service allows you to customize your app based on your users'
    location.
  name: locale
  x-globalAttributes: []
- description: The Storage service allows you to manage your project files.
  name: storage
  x-globalAttributes: []
- description: "The Avatars service aims to help you complete everyday tasks related\
    \ to your app image, icons, and avatars."
  name: avatars
  x-globalAttributes: []
- description: "The Databases service allows you to create structured collections\
    \ of documents, query and filter lists of documents"
  name: databases
  x-globalAttributes:
  - databaseId
- description: "The Functions Service allows you view, create and manage your Cloud\
    \ Functions."
  name: functions
  x-globalAttributes: []
- description: The GraphQL API allows you to query and mutate your Appwrite server
    using GraphQL.
  name: graphql
  x-globalAttributes: []
- description: "The Messaging service allows you to send messages to any provider\
    \ type (SMTP, push notification, SMS, etc.)."
  name: messaging
  x-globalAttributes: []
- description: The Health service allows you to both validate and monitor your Appwrite
    server's health.
  name: health
  x-globalAttributes: []
- description: The Project service allows you to manage all the projects in your Appwrite
    server.
  name: projects
  x-globalAttributes: []
- description: The Project service allows you to manage all the projects in your Appwrite
    server.
  name: project
  x-globalAttributes: []
- description: The Users service allows you to manage your project users.
  name: users
  x-globalAttributes: []
- description: The Proxy Service allows you to configure actions for your domains
    beyond DNS configuration.
  name: proxy
  x-globalAttributes: []
- description: The Console service allows you to interact with console relevant informations.
  name: console
  x-globalAttributes: []
- description: The Migrations service allows you to migrate third-party data to your
    Appwrite project.
  name: migrations
  x-globalAttributes: []
paths:
  /account:
    get:
      description: Get the currently logged in user.
      operationId: Account_getCurrentUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: User
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Get account
      tags:
      - account
      x-appwrite:
        method: get
        weight: 8
        cookies: false
        type: ""
        deprecated: false
        demo: account/get.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/get.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: /account
        offline-key: current
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--account
      x-accepts: application/json
    post:
      description: "Use this endpoint to allow a new user to register a new account\
        \ in your project. After the user registration completes successfully, you\
        \ can use the [/account/verfication](https://appwrite.io/docs/references/cloud/client-web/account#createVerification)\
        \ route to start verifying the user email address. To allow the new user to\
        \ login to their new account, you need to create a new [account session](https://appwrite.io/docs/references/cloud/client-web/account#createEmailSession)."
      operationId: Account_registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRegisterUserRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: User
      security:
      - Project: []
      summary: Create account
      tags:
      - account
      x-appwrite:
        method: create
        weight: 7
        cookies: false
        type: ""
        deprecated: false
        demo: account/create.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/create.md
        rate-limit: 10
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: sessions.write
        platforms:
        - server
        - client
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--account
      x-content-type: application/json
      x-accepts: application/json
  /account/email:
    patch:
      description: |
        Update currently logged in user account email address. After changing user address, the user confirmation status will get reset. A new confirmation email is not sent automatically however you can use the send confirmation email endpoint again to send the confirmation email. For security measures, user password is required to complete this request.
        This endpoint can also be used to convert an anonymous account to a normal one, by passing an email address and a new password.
      operationId: Account_updateUserEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateUserEmailRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: User
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Update email
      tags:
      - account
      x-appwrite:
        method: updateEmail
        weight: 33
        cookies: false
        type: ""
        deprecated: false
        demo: account/update-email.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/update-email.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: /account
        offline-key: current
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--account-email
      x-content-type: application/json
      x-accepts: application/json
  /account/identities:
    get:
      description: Get the list of identities for the currently logged in user.
      operationId: Account_listIdentities
      parameters:
      - description: "Array of query strings generated using the Query class provided\
          \ by the SDK. [Learn more about queries](https://appwrite.io/docs/queries).\
          \ Maximum of 100 queries are allowed, each 4096 characters long. You may\
          \ filter on the following attributes: userId, provider, providerUid, providerEmail,\
          \ providerAccessTokenExpiry"
        explode: true
        in: query
        name: queries
        required: false
        schema:
          default: []
          example: []
          items:
            type: string
          type: array
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-paths--account-identities-get-parameters-0-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityList'
          description: Identities List
      security:
      - Project: []
        Session: []
        JWT: []
      summary: List Identities
      tags:
      - account
      x-appwrite:
        method: listIdentities
        weight: 56
        cookies: false
        type: ""
        deprecated: false
        demo: account/list-identities.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/list-identities.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: /account/identities
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--account-identities
      x-accepts: application/json
  /account/identities/{identityId}:
    delete:
      description: Delete an identity by its unique ID.
      operationId: Account_deleteIdentityById
      parameters:
      - description: Identity ID.
        explode: false
        in: path
        name: identityId
        required: true
        schema:
          type: string
          x-example: <IDENTITY_ID>
        style: simple
      responses:
        "204":
          description: No content
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Delete identity
      tags:
      - account
      x-appwrite:
        method: deleteIdentity
        weight: 57
        cookies: false
        type: ""
        deprecated: false
        demo: account/delete-identity.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/delete-identity.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--account-identities-identityId
      x-accepts: application/json
  /account/jwt:
    post:
      description: Use this endpoint to create a JSON Web Token. You can use the resulting
        JWT to authenticate on behalf of the current user when working with the Appwrite
        server-side API and SDKs. The JWT secret is valid for 15 minutes from its
        creation and will be invalid if the user will logout in that time frame.
      operationId: Account_createJwt
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jwt'
          description: JWT
      security:
      - Project: []
      summary: Create JWT
      tags:
      - account
      x-appwrite:
        method: createJWT
        weight: 28
        cookies: false
        type: ""
        deprecated: false
        demo: account/create-j-w-t.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/create-jwt.md
        rate-limit: 100
        rate-time: 3600
        rate-key: "url:{url},userId:{userId}"
        scope: account
        platforms:
        - server
        - client
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--account-jwt
      x-accepts: application/json
  /account/logs:
    get:
      description: "Get the list of latest security activity logs for the currently\
        \ logged in user. Each log returns user IP address, location and date and\
        \ time of log."
      operationId: Account_listLogs
      parameters:
      - description: "Array of query strings generated using the Query class provided\
          \ by the SDK. [Learn more about queries](https://appwrite.io/docs/queries).\
          \ Only supported methods are limit and offset"
        explode: true
        in: query
        name: queries
        required: false
        schema:
          default: []
          example: []
          items:
            type: string
          type: array
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-paths--account-logs-get-parameters-0-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logList'
          description: Logs List
      security:
      - Project: []
        Session: []
        JWT: []
      summary: List logs
      tags:
      - account
      x-appwrite:
        method: listLogs
        weight: 30
        cookies: false
        type: ""
        deprecated: false
        demo: account/list-logs.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/list-logs.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--account-logs
      x-accepts: application/json
  /account/mfa:
    patch:
      description: Enable or disable MFA on an account.
      operationId: Account_updateMfaStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateMfaStatusRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: User
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Update MFA
      tags:
      - account
      x-appwrite:
        method: updateMFA
        weight: 43
        cookies: false
        type: ""
        deprecated: false
        demo: account/update-m-f-a.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/update-mfa.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: /account
        offline-key: current
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--account-mfa
      x-content-type: application/json
      x-accepts: application/json
  /account/mfa/authenticators/{type}:
    delete:
      description: Delete an authenticator for a user by ID.
      operationId: Account_deleteAuthenticator
      parameters:
      - description: Type of authenticator.
        explode: false
        in: path
        name: type
        required: true
        schema:
          enum:
          - totp
          type: string
          x-example: totp
          x-enum-name: AuthenticatorType
          x-enum-keys: []
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDeleteAuthenticatorRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: User
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Delete Authenticator
      tags:
      - account
      x-appwrite:
        method: deleteMfaAuthenticator
        weight: 50
        cookies: false
        type: ""
        deprecated: false
        demo: account/delete-mfa-authenticator.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/delete-mfa-authenticator.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--account-mfa-authenticators-type
      x-content-type: application/json
      x-accepts: application/json
    post:
      description: "Add an authenticator app to be used as an MFA factor. Verify the\
        \ authenticator using the [verify authenticator](/docs/references/cloud/client-web/account#verifyAuthenticator)\
        \ method."
      operationId: Account_addAuthenticator
      parameters:
      - description: Type of authenticator. Must be `totp`
        explode: false
        in: path
        name: type
        required: true
        schema:
          enum:
          - totp
          type: string
          x-example: totp
          x-enum-name: AuthenticatorType
          x-enum-keys: []
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mfaType'
          description: MFAType
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Add Authenticator
      tags:
      - account
      x-appwrite:
        method: createMfaAuthenticator
        weight: 45
        cookies: false
        type: ""
        deprecated: false
        demo: account/create-mfa-authenticator.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/create-mfa-authenticator.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: /account
        offline-key: current
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--account-mfa-authenticators-type
      x-accepts: application/json
    put:
      description: "Verify an authenticator app after adding it using the [add authenticator](/docs/references/cloud/client-web/account#addAuthenticator)\
        \ method."
      operationId: Account_verifyAuthenticator
      parameters:
      - description: Type of authenticator.
        explode: false
        in: path
        name: type
        required: true
        schema:
          enum:
          - totp
          type: string
          x-example: totp
          x-enum-name: AuthenticatorType
          x-enum-keys: []
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountVerifyAuthenticatorRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: User
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Verify Authenticator
      tags:
      - account
      x-appwrite:
        method: updateMfaAuthenticator
        weight: 46
        cookies: false
        type: ""
        deprecated: false
        demo: account/update-mfa-authenticator.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/update-mfa-authenticator.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: /account
        offline-key: current
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--account-mfa-authenticators-type
      x-content-type: application/json
      x-accepts: application/json
  /account/mfa/challenge:
    post:
      description: "Begin the process of MFA verification after sign-in. Finish the\
        \ flow with [updateMfaChallenge](/docs/references/cloud/client-web/account#updateMfaChallenge)\
        \ method."
      operationId: Account_createMfaChallenge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreateMfaChallengeRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mfaChallenge'
          description: MFA Challenge
      security:
      - Project: []
      summary: Create 2FA Challenge
      tags:
      - account
      x-appwrite:
        method: createMfaChallenge
        weight: 51
        cookies: false
        type: ""
        deprecated: false
        demo: account/create-mfa-challenge.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/create-mfa-challenge.md
        rate-limit: 10
        rate-time: 3600
        rate-key: "url:{url},token:{param-token}"
        scope: account
        platforms:
        - server
        - client
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--account-mfa-challenge
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: "Complete the MFA challenge by providing the one-time password.\
        \ Finish the process of MFA verification by providing the one-time password.\
        \ To begin the flow, use [createMfaChallenge](/docs/references/cloud/client-web/account#createMfaChallenge)\
        \ method."
      operationId: Account_completeMfaChallenge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCompleteMfaChallengeRequest'
      responses:
        "204":
          content:
            ? ""
            : schema:
                $ref: '#/components/schemas/session'
          description: No content
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Create MFA Challenge (confirmation)
      tags:
      - account
      x-appwrite:
        method: updateMfaChallenge
        weight: 52
        cookies: false
        type: ""
        deprecated: false
        demo: account/update-mfa-challenge.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/update-mfa-challenge.md
        rate-limit: 10
        rate-time: 3600
        rate-key: "userId:{param-userId}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--account-mfa-challenge
      x-content-type: application/json
      x-accepts: ""
  /account/mfa/factors:
    get:
      description: List the factors available on the account to be used as a MFA challange.
      operationId: Account_listMfaFactors
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mfaFactors'
          description: MFAFactors
      security:
      - Project: []
        Session: []
        JWT: []
      summary: List Factors
      tags:
      - account
      x-appwrite:
        method: listMfaFactors
        weight: 44
        cookies: false
        type: ""
        deprecated: false
        demo: account/list-mfa-factors.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/list-mfa-factors.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: /account
        offline-key: current
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--account-mfa-factors
      x-accepts: application/json
  /account/mfa/recovery-codes:
    get:
      description: "Get recovery codes that can be used as backup for MFA flow. Before\
        \ getting codes, they must be generated using [createMfaRecoveryCodes](/docs/references/cloud/client-web/account#createMfaRecoveryCodes)\
        \ method. An OTP challenge is required to read recovery codes."
      operationId: Account_getMfaRecoveryCodes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mfaRecoveryCodes'
          description: MFA Recovery Codes
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Get MFA Recovery Codes
      tags:
      - account
      x-appwrite:
        method: getMfaRecoveryCodes
        weight: 49
        cookies: false
        type: ""
        deprecated: false
        demo: account/get-mfa-recovery-codes.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/get-mfa-recovery-codes.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: /account
        offline-key: current
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--account-mfa-recovery-codes
      x-accepts: application/json
    patch:
      description: "Regenerate recovery codes that can be used as backup for MFA flow.\
        \ Before regenerating codes, they must be first generated using [createMfaRecoveryCodes](/docs/references/cloud/client-web/account#createMfaRecoveryCodes)\
        \ method. An OTP challenge is required to regenreate recovery codes."
      operationId: Account_regenerateMfaRecoveryCodes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mfaRecoveryCodes'
          description: MFA Recovery Codes
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Regenerate MFA Recovery Codes
      tags:
      - account
      x-appwrite:
        method: updateMfaRecoveryCodes
        weight: 48
        cookies: false
        type: ""
        deprecated: false
        demo: account/update-mfa-recovery-codes.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/update-mfa-recovery-codes.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: /account
        offline-key: current
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--account-mfa-recovery-codes
      x-accepts: application/json
    post:
      description: "Generate recovery codes as backup for MFA flow. It's recommended\
        \ to generate and show then immediately after user successfully adds their\
        \ authehticator. Recovery codes can be used as a MFA verification type in\
        \ [createMfaChallenge](/docs/references/cloud/client-web/account#createMfaChallenge)\
        \ method."
      operationId: Account_createMfaRecoveryCodes
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mfaRecoveryCodes'
          description: MFA Recovery Codes
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Create MFA Recovery Codes
      tags:
      - account
      x-appwrite:
        method: createMfaRecoveryCodes
        weight: 47
        cookies: false
        type: ""
        deprecated: false
        demo: account/create-mfa-recovery-codes.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/create-mfa-recovery-codes.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: /account
        offline-key: current
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--account-mfa-recovery-codes
      x-accepts: application/json
  /account/name:
    patch:
      description: Update currently logged in user account name.
      operationId: Account_updateNameOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateNameOperationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: User
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Update name
      tags:
      - account
      x-appwrite:
        method: updateName
        weight: 31
        cookies: false
        type: ""
        deprecated: false
        demo: account/update-name.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/update-name.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: /account
        offline-key: current
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--account-name
      x-content-type: application/json
      x-accepts: application/json
  /account/password:
    patch:
      description: "Update currently logged in user password. For validation, user\
        \ is required to pass in the new password, and the old password. For users\
        \ created with OAuth, Team Invites and Magic URL, oldPassword is optional."
      operationId: Account_updatePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdatePasswordRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: User
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Update password
      tags:
      - account
      x-appwrite:
        method: updatePassword
        weight: 32
        cookies: false
        type: ""
        deprecated: false
        demo: account/update-password.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/update-password.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: /account
        offline-key: current
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--account-password
      x-content-type: application/json
      x-accepts: application/json
  /account/phone:
    patch:
      description: "Update the currently logged in user's phone number. After updating\
        \ the phone number, the phone verification status will be reset. A confirmation\
        \ SMS is not sent automatically, however you can use the [POST /account/verification/phone](https://appwrite.io/docs/references/cloud/client-web/account#createPhoneVerification)\
        \ endpoint to send a confirmation SMS."
      operationId: Account_updatePhone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdatePhoneRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: User
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Update phone
      tags:
      - account
      x-appwrite:
        method: updatePhone
        weight: 34
        cookies: false
        type: ""
        deprecated: false
        demo: account/update-phone.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/update-phone.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: /account
        offline-key: current
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--account-phone
      x-content-type: application/json
      x-accepts: application/json
  /account/prefs:
    get:
      description: Get the preferences as a key-value object for the currently logged
        in user.
      operationId: Account_getPrefs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/preferences'
          description: Preferences
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Get account preferences
      tags:
      - account
      x-appwrite:
        method: getPrefs
        weight: 29
        cookies: false
        type: ""
        deprecated: false
        demo: account/get-prefs.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/get-prefs.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: /account/prefs
        offline-key: current
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--account-prefs
      x-accepts: application/json
    patch:
      description: "Update currently logged in user account preferences. The object\
        \ you pass is stored as is, and replaces any previous value. The maximum allowed\
        \ prefs size is 64kB and throws error if exceeded."
      operationId: Account_updatePreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdatePreferencesRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: User
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Update preferences
      tags:
      - account
      x-appwrite:
        method: updatePrefs
        weight: 35
        cookies: false
        type: ""
        deprecated: false
        demo: account/update-prefs.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/update-prefs.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: /account/prefs
        offline-key: current
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--account-prefs
      x-content-type: application/json
      x-accepts: application/json
  /account/recovery:
    post:
      description: "Sends the user an email with a temporary secret key for password\
        \ reset. When the user clicks the confirmation link he is redirected back\
        \ to your app password reset URL with the secret key and email address values\
        \ attached to the URL query string. Use the query string params to submit\
        \ a request to the [PUT /account/recovery](https://appwrite.io/docs/references/cloud/client-web/account#updateRecovery)\
        \ endpoint to complete the process. The verification link sent to the user's\
        \ email address is valid for 1 hour."
      operationId: Account_createPasswordRecovery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreatePasswordRecoveryRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token'
          description: Token
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Create password recovery
      tags:
      - account
      x-appwrite:
        method: createRecovery
        weight: 37
        cookies: false
        type: ""
        deprecated: false
        demo: account/create-recovery.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/create-recovery.md
        rate-limit: 10
        rate-time: 3600
        rate-key:
        - "url:{url},email:{param-email}"
        - "url:{url},ip:{ip}"
        scope: sessions.write
        platforms:
        - client
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--account-recovery
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: |-
        Use this endpoint to complete the user account password reset. Both the **userId** and **secret** arguments will be passed as query parameters to the redirect URL you have provided when sending your request to the [POST /account/recovery](https://appwrite.io/docs/references/cloud/client-web/account#createRecovery) endpoint.

        Please note that in order to avoid a [Redirect Attack](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.md) the only valid redirect URLs are the ones from domains you have set when adding your platforms in the console interface.
      operationId: Account_completePasswordRecovery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCompletePasswordRecoveryRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token'
          description: Token
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Create password recovery (confirmation)
      tags:
      - account
      x-appwrite:
        method: updateRecovery
        weight: 38
        cookies: false
        type: ""
        deprecated: false
        demo: account/update-recovery.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/update-recovery.md
        rate-limit: 10
        rate-time: 3600
        rate-key: "url:{url},userId:{param-userId}"
        scope: sessions.write
        platforms:
        - client
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--account-recovery
      x-content-type: application/json
      x-accepts: application/json
  /account/sessions:
    delete:
      description: Delete all sessions from the user account and remove any sessions
        cookies from the end client.
      operationId: Account_removeSessions
      responses:
        "204":
          description: No content
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Delete sessions
      tags:
      - account
      x-appwrite:
        method: deleteSessions
        weight: 11
        cookies: false
        type: ""
        deprecated: false
        demo: account/delete-sessions.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/delete-sessions.md
        rate-limit: 100
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--account-sessions
      x-accepts: application/json
    get:
      description: Get the list of active sessions across different devices for the
        currently logged in user.
      operationId: Account_listSessions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessionList'
          description: Sessions List
      security:
      - Project: []
        Session: []
        JWT: []
      summary: List sessions
      tags:
      - account
      x-appwrite:
        method: listSessions
        weight: 10
        cookies: false
        type: ""
        deprecated: false
        demo: account/list-sessions.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/list-sessions.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: /account/sessions
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--account-sessions
      x-accepts: application/json
  /account/sessions/anonymous:
    post:
      description: "Use this endpoint to allow a new user to register an anonymous\
        \ account in your project. This route will also create a new session for the\
        \ user. To allow the new user to convert an anonymous account to a normal\
        \ account, you need to update its [email and password](https://appwrite.io/docs/references/cloud/client-web/account#updateEmail)\
        \ or create an [OAuth2 session](https://appwrite.io/docs/references/cloud/client-web/account#CreateOAuth2Session)."
      operationId: Account_createAnonymousSession
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session'
          description: Session
      security:
      - Project: []
      summary: Create anonymous session
      tags:
      - account
      x-appwrite:
        method: createAnonymousSession
        weight: 16
        cookies: false
        type: ""
        deprecated: false
        demo: account/create-anonymous-session.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/create-session-anonymous.md
        rate-limit: 50
        rate-time: 3600
        rate-key: "ip:{ip}"
        scope: sessions.write
        platforms:
        - server
        - client
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--account-sessions-anonymous
      x-accepts: application/json
  /account/sessions/email:
    post:
      description: |-
        Allow the user to login into their account by providing a valid email and password combination. This route will create a new session for the user.

        A user is limited to 10 active sessions at a time by default. [Learn more about session limits](https://appwrite.io/docs/authentication-security#limits).
      operationId: Account_createEmailPasswordSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreateEmailPasswordSessionRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session'
          description: Session
      security:
      - Project: []
      summary: Create email password session
      tags:
      - account
      x-appwrite:
        method: createEmailPasswordSession
        weight: 15
        cookies: false
        type: ""
        deprecated: false
        demo: account/create-email-password-session.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/create-session-email-password.md
        rate-limit: 10
        rate-time: 3600
        rate-key: "url:{url},email:{param-email}"
        scope: sessions.write
        platforms:
        - server
        - client
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--account-sessions-email
      x-content-type: application/json
      x-accepts: application/json
  /account/sessions/magic-url:
    put:
      description: "Use this endpoint to create a session from token. Provide the\
        \ **userId** and **secret** parameters from the successful response of authentication\
        \ flows initiated by token creation. For example, magic URL and phone login."
      operationId: Account_updateMagicUrlSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateMagicUrlSessionRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session'
          description: Session
      security:
      - Project: []
      summary: Update magic URL session
      tags:
      - account
      x-appwrite:
        method: updateMagicURLSession
        weight: 25
        cookies: false
        type: ""
        deprecated: true
        demo: account/update-magic-u-r-l-session.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/create-session.md
        rate-limit: 10
        rate-time: 3600
        rate-key: "ip:{ip},userId:{param-userId}"
        scope: sessions.write
        platforms:
        - server
        - client
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--account-sessions-magic-url
      x-content-type: application/json
      x-accepts: application/json
  /account/sessions/oauth2/{provider}:
    get:
      description: |
        Allow the user to login to their account using the OAuth2 provider of their choice. Each OAuth2 provider should be enabled from the Appwrite console first. Use the success and failure arguments to provide a redirect URL's back to your app when login is completed.

        If there is already an active session, the new session will be attached to the logged-in account. If there are no active sessions, the server will attempt to look for a user with the same email address as the email received from the OAuth2 provider and attach the new session to the existing user. If no matching user is found - the server will create a new user.

        A user is limited to 10 active sessions at a time by default. [Learn more about session limits](https://appwrite.io/docs/authentication-security#limits).
      operationId: Account_createOAuth2Session
      parameters:
      - description: "OAuth2 Provider. Currently, supported providers are: amazon,\
          \ apple, auth0, authentik, autodesk, bitbucket, bitly, box, dailymotion,\
          \ discord, disqus, dropbox, etsy, facebook, github, gitlab, google, linkedin,\
          \ microsoft, notion, oidc, okta, paypal, paypalSandbox, podio, salesforce,\
          \ slack, spotify, stripe, tradeshift, tradeshiftBox, twitch, wordpress,\
          \ yahoo, yammer, yandex, zoho, zoom."
        explode: false
        in: path
        name: provider
        required: true
        schema:
          enum:
          - amazon
          - apple
          - auth0
          - authentik
          - autodesk
          - bitbucket
          - bitly
          - box
          - dailymotion
          - discord
          - disqus
          - dropbox
          - etsy
          - facebook
          - github
          - gitlab
          - google
          - linkedin
          - microsoft
          - notion
          - oidc
          - okta
          - paypal
          - paypalSandbox
          - podio
          - salesforce
          - slack
          - spotify
          - stripe
          - tradeshift
          - tradeshiftBox
          - twitch
          - wordpress
          - yahoo
          - yammer
          - yandex
          - zoho
          - zoom
          - mock
          type: string
          x-example: amazon
          x-enum-name: OAuthProvider
          x-enum-keys: []
        style: simple
      - description: "URL to redirect back to your app after a successful login attempt.\
          \  Only URLs from hostnames in your project's platform list are allowed.\
          \ This requirement helps to prevent an [open redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html)\
          \ attack against your project API."
        explode: true
        in: query
        name: success
        required: false
        schema:
          default: ""
          example: ""
          format: url
          type: string
          x-example: https://example.com
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--account-sessions-oauth2-provider-get-parameters-1-schema
        style: form
      - description: "URL to redirect back to your app after a failed login attempt.\
          \  Only URLs from hostnames in your project's platform list are allowed.\
          \ This requirement helps to prevent an [open redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html)\
          \ attack against your project API."
        explode: true
        in: query
        name: failure
        required: false
        schema:
          default: ""
          example: ""
          format: url
          type: string
          x-example: https://example.com
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--account-sessions-oauth2-provider-get-parameters-2-schema
        style: form
      - description: "A list of custom OAuth2 scopes. Check each provider internal\
          \ docs for a list of supported scopes. Maximum of 100 scopes are allowed,\
          \ each 4096 characters long."
        explode: true
        in: query
        name: scopes
        required: false
        schema:
          default: []
          example: []
          items:
            type: string
          type: array
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-paths--account-sessions-oauth2-provider-get-parameters-3-schema
        style: form
      responses:
        default:
          description: File
      security:
      - Project: []
      summary: Create OAuth2 session
      tags:
      - account
      x-appwrite:
        method: createOAuth2Session
        weight: 18
        cookies: false
        type: webAuth
        deprecated: false
        demo: account/create-o-auth2session.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/create-session-oauth2.md
        rate-limit: 50
        rate-time: 3600
        rate-key: "ip:{ip}"
        scope: sessions.write
        platforms:
        - server
        - client
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--account-sessions-oauth2-provider
      x-accepts: application/json
  /account/sessions/phone:
    put:
      description: "Use this endpoint to create a session from token. Provide the\
        \ **userId** and **secret** parameters from the successful response of authentication\
        \ flows initiated by token creation. For example, magic URL and phone login."
      operationId: Account_updatePhoneSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdatePhoneSessionRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session'
          description: Session
      security:
      - Project: []
      summary: Update phone session
      tags:
      - account
      x-appwrite:
        method: updatePhoneSession
        weight: 26
        cookies: false
        type: ""
        deprecated: true
        demo: account/update-phone-session.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/create-session.md
        rate-limit: 10
        rate-time: 3600
        rate-key: "ip:{ip},userId:{param-userId}"
        scope: sessions.write
        platforms:
        - server
        - client
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--account-sessions-phone
      x-content-type: application/json
      x-accepts: application/json
  /account/sessions/token:
    post:
      description: "Use this endpoint to create a session from token. Provide the\
        \ **userId** and **secret** parameters from the successful response of authentication\
        \ flows initiated by token creation. For example, magic URL and phone login."
      operationId: Account_createSessionFromToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreateSessionFromTokenRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session'
          description: Session
      security:
      - Project: []
      summary: Create session
      tags:
      - account
      x-appwrite:
        method: createSession
        weight: 17
        cookies: false
        type: ""
        deprecated: false
        demo: account/create-session.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/create-session.md
        rate-limit: 10
        rate-time: 3600
        rate-key: "ip:{ip},userId:{param-userId}"
        scope: sessions.write
        platforms:
        - server
        - client
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--account-sessions-token
      x-content-type: application/json
      x-accepts: application/json
  /account/sessions/{sessionId}:
    delete:
      description: "Logout the user. Use 'current' as the session ID to logout on\
        \ this device, use a session ID to logout on another device. If you're looking\
        \ to logout the user on all devices, use [Delete Sessions](https://appwrite.io/docs/references/cloud/client-web/account#deleteSessions)\
        \ instead."
      operationId: Account_logoutSessionById
      parameters:
      - description: Session ID. Use the string 'current' to delete the current device
          session.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
          x-example: <SESSION_ID>
        style: simple
      responses:
        "204":
          description: No content
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Delete session
      tags:
      - account
      x-appwrite:
        method: deleteSession
        weight: 13
        cookies: false
        type: ""
        deprecated: false
        demo: account/delete-session.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/delete-session.md
        rate-limit: 100
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--account-sessions-sessionId
      x-accepts: application/json
    get:
      description: Use this endpoint to get a logged in user's session using a Session
        ID. Inputting 'current' will return the current session being used.
      operationId: Account_getSession
      parameters:
      - description: Session ID. Use the string 'current' to get the current device
          session.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
          x-example: <SESSION_ID>
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session'
          description: Session
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Get session
      tags:
      - account
      x-appwrite:
        method: getSession
        weight: 12
        cookies: false
        type: ""
        deprecated: false
        demo: account/get-session.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/get-session.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: /account/sessions
        offline-key: "{sessionId}"
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--account-sessions-sessionId
      x-accepts: application/json
    patch:
      description: "Use this endpoint to extend a session's length. Extending a session\
        \ is useful when session expiry is short. If the session was created using\
        \ an OAuth provider, this endpoint refreshes the access token from the provider."
      operationId: Account_extendSessionLength
      parameters:
      - description: Session ID. Use the string 'current' to update the current device
          session.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
          x-example: <SESSION_ID>
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session'
          description: Session
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Update session
      tags:
      - account
      x-appwrite:
        method: updateSession
        weight: 14
        cookies: false
        type: ""
        deprecated: false
        demo: account/update-session.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/update-session.md
        rate-limit: 10
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--account-sessions-sessionId
      x-accepts: application/json
  /account/status:
    patch:
      description: "Block the currently logged in user account. Behind the scene,\
        \ the user record is not deleted but permanently blocked from any access.\
        \ To completely delete a user, use the Users API instead."
      operationId: Account_blockUserStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: User
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Update status
      tags:
      - account
      x-appwrite:
        method: updateStatus
        weight: 36
        cookies: false
        type: ""
        deprecated: false
        demo: account/update-status.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/update-status.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--account-status
      x-accepts: application/json
  /account/targets/push:
    post:
      description: ""
      operationId: Account_createPushTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreatePushTargetRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/target'
          description: Target
      security:
      - Project: []
        Session: []
      summary: Create push target
      tags:
      - account
      x-appwrite:
        method: createPushTarget
        weight: 53
        cookies: false
        type: ""
        deprecated: false
        demo: account/create-push-target.md
        edit: https://github.com/appwrite/appwrite/edit/master
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: targets.write
        platforms:
        - client
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--account-targets-push
      x-content-type: application/json
      x-accepts: application/json
  /account/targets/{targetId}/push:
    delete:
      description: ""
      operationId: Account_deletePushTarget
      parameters:
      - description: Target ID.
        explode: false
        in: path
        name: targetId
        required: true
        schema:
          type: string
          x-example: <TARGET_ID>
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/target'
          description: No content
      security:
      - Project: []
        Session: []
      summary: Delete push target
      tags:
      - account
      x-appwrite:
        method: deletePushTarget
        weight: 55
        cookies: false
        type: ""
        deprecated: false
        demo: account/delete-push-target.md
        edit: https://github.com/appwrite/appwrite/edit/master
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: targets.write
        platforms:
        - client
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--account-targets-targetId-push
      x-accepts: application/json
    put:
      description: ""
      operationId: Account_updatePushTarget
      parameters:
      - description: Target ID.
        explode: false
        in: path
        name: targetId
        required: true
        schema:
          type: string
          x-example: <TARGET_ID>
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdatePushTargetRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/target'
          description: Target
      security:
      - Project: []
        Session: []
      summary: Update push target
      tags:
      - account
      x-appwrite:
        method: updatePushTarget
        weight: 54
        cookies: false
        type: ""
        deprecated: false
        demo: account/update-push-target.md
        edit: https://github.com/appwrite/appwrite/edit/master
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: targets.write
        platforms:
        - client
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--account-targets-targetId-push
      x-content-type: application/json
      x-accepts: application/json
  /account/tokens/email:
    post:
      description: |-
        Sends the user an email with a secret key for creating a session. If the provided user ID has not be registered, a new user will be created. Use the returned user ID and secret and submit a request to the [POST /v1/account/sessions/token](https://appwrite.io/docs/references/cloud/client-web/account#createSession) endpoint to complete the login process. The secret sent to the user's email is valid for 15 minutes.

        A user is limited to 10 active sessions at a time by default. [Learn more about session limits](https://appwrite.io/docs/authentication-security#limits).
      operationId: Account_createEmailToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreateEmailTokenRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token'
          description: Token
      security:
      - Project: []
      summary: Create email token (OTP)
      tags:
      - account
      x-appwrite:
        method: createEmailToken
        weight: 24
        cookies: false
        type: ""
        deprecated: false
        demo: account/create-email-token.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/create-token-email.md
        rate-limit: 10
        rate-time: 3600
        rate-key: "url:{url},email:{param-email}"
        scope: sessions.write
        platforms:
        - server
        - client
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--account-tokens-email
      x-content-type: application/json
      x-accepts: application/json
  /account/tokens/magic-url:
    post:
      description: |
        Sends the user an email with a secret key for creating a session. If the provided user ID has not been registered, a new user will be created. When the user clicks the link in the email, the user is redirected back to the URL you provided with the secret key and userId values attached to the URL query string. Use the query string parameters to submit a request to the [POST /v1/account/sessions/token](https://appwrite.io/docs/references/cloud/client-web/account#createSession) endpoint to complete the login process. The link sent to the user's email address is valid for 1 hour. If you are on a mobile device you can leave the URL parameter empty, so that the login completion will be handled by your Appwrite instance by default.

        A user is limited to 10 active sessions at a time by default. [Learn more about session limits](https://appwrite.io/docs/authentication-security#limits).
      operationId: Account_createMagicUrlToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreateMagicUrlTokenRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token'
          description: Token
      security:
      - Project: []
      summary: Create magic URL token
      tags:
      - account
      x-appwrite:
        method: createMagicURLToken
        weight: 23
        cookies: false
        type: ""
        deprecated: false
        demo: account/create-magic-u-r-l-token.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/create-token-magic-url.md
        rate-limit: 60
        rate-time: 3600
        rate-key:
        - "url:{url},email:{param-email}"
        - "url:{url},ip:{ip}"
        scope: sessions.write
        platforms:
        - server
        - client
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--account-tokens-magic-url
      x-content-type: application/json
      x-accepts: application/json
  /account/tokens/oauth2/{provider}:
    get:
      description: "Allow the user to login to their account using the OAuth2 provider\
        \ of their choice. Each OAuth2 provider should be enabled from the Appwrite\
        \ console first. Use the success and failure arguments to provide a redirect\
        \ URL's back to your app when login is completed. \n\nIf authentication succeeds,\
        \ `userId` and `secret` of a token will be appended to the success URL as\
        \ query parameters. These can be used to create a new session using the [Create\
        \ session](https://appwrite.io/docs/references/cloud/client-web/account#createSession)\
        \ endpoint.\n\nA user is limited to 10 active sessions at a time by default.\
        \ [Learn more about session limits](https://appwrite.io/docs/authentication-security#limits)."
      operationId: Account_createOAuth2Token
      parameters:
      - description: "OAuth2 Provider. Currently, supported providers are: amazon,\
          \ apple, auth0, authentik, autodesk, bitbucket, bitly, box, dailymotion,\
          \ discord, disqus, dropbox, etsy, facebook, github, gitlab, google, linkedin,\
          \ microsoft, notion, oidc, okta, paypal, paypalSandbox, podio, salesforce,\
          \ slack, spotify, stripe, tradeshift, tradeshiftBox, twitch, wordpress,\
          \ yahoo, yammer, yandex, zoho, zoom."
        explode: false
        in: path
        name: provider
        required: true
        schema:
          enum:
          - amazon
          - apple
          - auth0
          - authentik
          - autodesk
          - bitbucket
          - bitly
          - box
          - dailymotion
          - discord
          - disqus
          - dropbox
          - etsy
          - facebook
          - github
          - gitlab
          - google
          - linkedin
          - microsoft
          - notion
          - oidc
          - okta
          - paypal
          - paypalSandbox
          - podio
          - salesforce
          - slack
          - spotify
          - stripe
          - tradeshift
          - tradeshiftBox
          - twitch
          - wordpress
          - yahoo
          - yammer
          - yandex
          - zoho
          - zoom
          - mock
          type: string
          x-example: amazon
          x-enum-name: OAuthProvider
          x-enum-keys: []
        style: simple
      - description: "URL to redirect back to your app after a successful login attempt.\
          \  Only URLs from hostnames in your project's platform list are allowed.\
          \ This requirement helps to prevent an [open redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html)\
          \ attack against your project API."
        explode: true
        in: query
        name: success
        required: false
        schema:
          default: ""
          example: ""
          format: url
          type: string
          x-example: https://example.com
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--account-tokens-oauth2-provider-get-parameters-1-schema
        style: form
      - description: "URL to redirect back to your app after a failed login attempt.\
          \  Only URLs from hostnames in your project's platform list are allowed.\
          \ This requirement helps to prevent an [open redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html)\
          \ attack against your project API."
        explode: true
        in: query
        name: failure
        required: false
        schema:
          default: ""
          example: ""
          format: url
          type: string
          x-example: https://example.com
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--account-tokens-oauth2-provider-get-parameters-2-schema
        style: form
      - description: "A list of custom OAuth2 scopes. Check each provider internal\
          \ docs for a list of supported scopes. Maximum of 100 scopes are allowed,\
          \ each 4096 characters long."
        explode: true
        in: query
        name: scopes
        required: false
        schema:
          default: []
          example: []
          items:
            type: string
          type: array
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-paths--account-tokens-oauth2-provider-get-parameters-3-schema
        style: form
      responses:
        default:
          description: File
      security:
      - Project: []
      summary: Create OAuth2 token
      tags:
      - account
      x-appwrite:
        method: createOAuth2Token
        weight: 22
        cookies: false
        type: webAuth
        deprecated: false
        demo: account/create-o-auth2token.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/create-token-oauth2.md
        rate-limit: 50
        rate-time: 3600
        rate-key: "ip:{ip}"
        scope: sessions.write
        platforms:
        - server
        - client
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--account-tokens-oauth2-provider
      x-accepts: application/json
  /account/tokens/phone:
    post:
      description: |-
        Sends the user an SMS with a secret key for creating a session. If the provided user ID has not be registered, a new user will be created. Use the returned user ID and secret and submit a request to the [POST /v1/account/sessions/token](https://appwrite.io/docs/references/cloud/client-web/account#createSession) endpoint to complete the login process. The secret sent to the user's phone is valid for 15 minutes.

        A user is limited to 10 active sessions at a time by default. [Learn more about session limits](https://appwrite.io/docs/authentication-security#limits).
      operationId: Account_createPhoneToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreatePhoneTokenRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token'
          description: Token
      security:
      - Project: []
      summary: Create phone token
      tags:
      - account
      x-appwrite:
        method: createPhoneToken
        weight: 27
        cookies: false
        type: ""
        deprecated: false
        demo: account/create-phone-token.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/create-token-phone.md
        rate-limit: 10
        rate-time: 3600
        rate-key:
        - "url:{url},phone:{param-phone}"
        - "url:{url},ip:{ip}"
        scope: sessions.write
        platforms:
        - server
        - client
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--account-tokens-phone
      x-content-type: application/json
      x-accepts: application/json
  /account/verification:
    post:
      description: |
        Use this endpoint to send a verification message to your user email address to confirm they are the valid owners of that address. Both the **userId** and **secret** arguments will be passed as query parameters to the URL you have provided to be attached to the verification email. The provided URL should redirect the user back to your app and allow you to complete the verification process by verifying both the **userId** and **secret** parameters. Learn more about how to [complete the verification process](https://appwrite.io/docs/references/cloud/client-web/account#updateVerification). The verification link sent to the user's email address is valid for 7 days.

        Please note that in order to avoid a [Redirect Attack](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.md), the only valid redirect URLs are the ones from domains you have set when adding your platforms in the console interface.
      operationId: Account_createEmailVerification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreateEmailVerificationRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token'
          description: Token
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Create email verification
      tags:
      - account
      x-appwrite:
        method: createVerification
        weight: 39
        cookies: false
        type: ""
        deprecated: false
        demo: account/create-verification.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/create-email-verification.md
        rate-limit: 10
        rate-time: 3600
        rate-key: "url:{url},userId:{userId}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--account-verification
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Use this endpoint to complete the user email verification process.
        Use both the **userId** and **secret** parameters that were attached to your
        app URL to verify the user email ownership. If confirmed this route will return
        a 200 status code.
      operationId: Account_createEmailVerification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreateEmailVerificationRequest1'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token'
          description: Token
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Create email verification (confirmation)
      tags:
      - account
      x-appwrite:
        method: updateVerification
        weight: 40
        cookies: false
        type: ""
        deprecated: false
        demo: account/update-verification.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/update-email-verification.md
        rate-limit: 10
        rate-time: 3600
        rate-key: "url:{url},userId:{param-userId}"
        scope: public
        platforms:
        - client
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--account-verification
      x-content-type: application/json
      x-accepts: application/json
  /account/verification/phone:
    post:
      description: "Use this endpoint to send a verification SMS to the currently\
        \ logged in user. This endpoint is meant for use after updating a user's phone\
        \ number using the [accountUpdatePhone](https://appwrite.io/docs/references/cloud/client-web/account#updatePhone)\
        \ endpoint. Learn more about how to [complete the verification process](https://appwrite.io/docs/references/cloud/client-web/account#updatePhoneVerification).\
        \ The verification code sent to the user's phone number is valid for 15 minutes."
      operationId: Account_createPhoneVerification
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token'
          description: Token
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Create phone verification
      tags:
      - account
      x-appwrite:
        method: createPhoneVerification
        weight: 41
        cookies: false
        type: ""
        deprecated: false
        demo: account/create-phone-verification.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/create-phone-verification.md
        rate-limit: 10
        rate-time: 3600
        rate-key:
        - "url:{url},userId:{userId}"
        - "url:{url},ip:{ip}"
        scope: account
        platforms:
        - client
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--account-verification-phone
      x-accepts: application/json
    put:
      description: Use this endpoint to complete the user phone verification process.
        Use the **userId** and **secret** that were sent to your user's phone number
        to verify the user email ownership. If confirmed this route will return a
        200 status code.
      operationId: Account_confirmPhoneVerification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountConfirmPhoneVerificationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token'
          description: Token
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Create phone verification (confirmation)
      tags:
      - account
      x-appwrite:
        method: updatePhoneVerification
        weight: 42
        cookies: false
        type: ""
        deprecated: false
        demo: account/update-phone-verification.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/account/update-phone-verification.md
        rate-limit: 10
        rate-time: 3600
        rate-key: "userId:{param-userId}"
        scope: public
        platforms:
        - client
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--account-verification-phone
      x-content-type: application/json
      x-accepts: application/json
  /avatars/browsers/{code}:
    get:
      description: |-
        You can use this endpoint to show different browser icons to your users. The code argument receives the browser code as it appears in your user [GET /account/sessions](https://appwrite.io/docs/references/cloud/client-web/account#getSessions) endpoint. Use width, height and quality arguments to change the output settings.

        When one dimension is specified and the other is 0, the image is scaled with preserved aspect ratio. If both dimensions are 0, the API provides an image at source quality. If dimensions are not specified, the default size of image returned is 100x100px.
      operationId: Avatars_getBrowserIconByCode
      parameters:
      - description: Browser Code.
        explode: false
        in: path
        name: code
        required: true
        schema:
          enum:
          - aa
          - an
          - ch
          - ci
          - cm
          - cr
          - ff
          - sf
          - mf
          - ps
          - oi
          - om
          - op
          - "true"
          type: string
          x-example: aa
          x-enum-name: Browser
          x-enum-keys:
          - Avant Browser
          - Android WebView Beta
          - Google Chrome
          - Google Chrome (iOS)
          - Google Chrome (Mobile)
          - Chromium
          - Mozilla Firefox
          - Safari
          - Mobile Safari
          - Microsoft Edge
          - Microsoft Edge (iOS)
          - Opera Mini
          - Opera
          - Opera (Next)
        style: simple
      - description: Image width. Pass an integer between 0 to 2000. Defaults to 100.
        explode: true
        in: query
        name: width
        required: false
        schema:
          default: 100
          example: 100
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-browsers-code-get-parameters-1-schema
        style: form
      - description: Image height. Pass an integer between 0 to 2000. Defaults to
          100.
        explode: true
        in: query
        name: height
        required: false
        schema:
          default: 100
          example: 100
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-browsers-code-get-parameters-2-schema
        style: form
      - description: Image quality. Pass an integer between 0 to 100. Defaults to
          100.
        explode: true
        in: query
        name: quality
        required: false
        schema:
          default: 100
          example: 100
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-browsers-code-get-parameters-3-schema
        style: form
      responses:
        "200":
          description: Image
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Get browser icon
      tags:
      - avatars
      x-appwrite:
        method: getBrowser
        weight: 59
        cookies: false
        type: location
        deprecated: false
        demo: avatars/get-browser.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/avatars/get-browser.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: avatars.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--avatars-browsers-code
      x-accepts: application/json
  /avatars/credit-cards/{code}:
    get:
      description: |
        The credit card endpoint will return you the icon of the credit card provider you need. Use width, height and quality arguments to change the output settings.

        When one dimension is specified and the other is 0, the image is scaled with preserved aspect ratio. If both dimensions are 0, the API provides an image at source quality. If dimensions are not specified, the default size of image returned is 100x100px.
      operationId: Avatars_getCreditCardIcon
      parameters:
      - description: "Credit Card Code. Possible values: amex, argencard, cabal, censosud,\
          \ diners, discover, elo, hipercard, jcb, mastercard, naranja, targeta-shopping,\
          \ union-china-pay, visa, mir, maestro."
        explode: false
        in: path
        name: code
        required: true
        schema:
          enum:
          - amex
          - argencard
          - cabal
          - censosud
          - diners
          - discover
          - elo
          - hipercard
          - jcb
          - mastercard
          - naranja
          - targeta-shopping
          - union-china-pay
          - visa
          - mir
          - maestro
          type: string
          x-example: amex
          x-enum-name: CreditCard
          x-enum-keys:
          - American Express
          - Argencard
          - Cabal
          - Consosud
          - Diners Club
          - Discover
          - Elo
          - Hipercard
          - JCB
          - Mastercard
          - Naranja
          - Tarjeta Shopping
          - Union China Pay
          - Visa
          - MIR
          - Maestro
        style: simple
      - description: Image width. Pass an integer between 0 to 2000. Defaults to 100.
        explode: true
        in: query
        name: width
        required: false
        schema:
          default: 100
          example: 100
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-credit-cards-code-get-parameters-1-schema
        style: form
      - description: Image height. Pass an integer between 0 to 2000. Defaults to
          100.
        explode: true
        in: query
        name: height
        required: false
        schema:
          default: 100
          example: 100
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-credit-cards-code-get-parameters-2-schema
        style: form
      - description: Image quality. Pass an integer between 0 to 100. Defaults to
          100.
        explode: true
        in: query
        name: quality
        required: false
        schema:
          default: 100
          example: 100
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-credit-cards-code-get-parameters-3-schema
        style: form
      responses:
        "200":
          description: Image
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Get credit card icon
      tags:
      - avatars
      x-appwrite:
        method: getCreditCard
        weight: 58
        cookies: false
        type: location
        deprecated: false
        demo: avatars/get-credit-card.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/avatars/get-credit-card.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: avatars.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--avatars-credit-cards-code
      x-accepts: application/json
  /avatars/favicon:
    get:
      description: |
        Use this endpoint to fetch the favorite icon (AKA favicon) of any remote website URL.
      operationId: Avatars_getFavicon
      parameters:
      - description: Website URL which you want to fetch the favicon from.
        explode: true
        in: query
        name: url
        required: true
        schema:
          format: url
          type: string
          x-example: https://example.com
        style: form
      responses:
        "200":
          description: Image
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Get favicon
      tags:
      - avatars
      x-appwrite:
        method: getFavicon
        weight: 62
        cookies: false
        type: location
        deprecated: false
        demo: avatars/get-favicon.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/avatars/get-favicon.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: avatars.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--avatars-favicon
      x-accepts: application/json
  /avatars/flags/{code}:
    get:
      description: |
        You can use this endpoint to show different country flags icons to your users. The code argument receives the 2 letter country code. Use width, height and quality arguments to change the output settings. Country codes follow the [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1) standard.

        When one dimension is specified and the other is 0, the image is scaled with preserved aspect ratio. If both dimensions are 0, the API provides an image at source quality. If dimensions are not specified, the default size of image returned is 100x100px.
      operationId: Avatars_getCountryFlagByCode
      parameters:
      - description: Country Code. ISO Alpha-2 country code format.
        explode: false
        in: path
        name: code
        required: true
        schema:
          enum:
          - af
          - ao
          - al
          - ad
          - ae
          - ar
          - am
          - ag
          - au
          - at
          - az
          - bi
          - be
          - bj
          - bf
          - bd
          - bg
          - bh
          - bs
          - ba
          - by
          - bz
          - bo
          - br
          - bb
          - bn
          - bt
          - bw
          - cf
          - ca
          - ch
          - cl
          - cn
          - ci
          - cm
          - cd
          - cg
          - co
          - km
          - cv
          - cr
          - cu
          - cy
          - cz
          - de
          - dj
          - dm
          - dk
          - do
          - dz
          - ec
          - eg
          - er
          - es
          - ee
          - et
          - fi
          - fj
          - fr
          - fm
          - ga
          - gb
          - ge
          - gh
          - gn
          - gm
          - gw
          - gq
          - gr
          - gd
          - gt
          - gy
          - hn
          - hr
          - ht
          - hu
          - id
          - in
          - ie
          - ir
          - iq
          - is
          - il
          - it
          - jm
          - jo
          - jp
          - kz
          - ke
          - kg
          - kh
          - ki
          - kn
          - kr
          - kw
          - la
          - lb
          - lr
          - ly
          - lc
          - li
          - lk
          - ls
          - lt
          - lu
          - lv
          - ma
          - mc
          - md
          - mg
          - mv
          - mx
          - mh
          - mk
          - ml
          - mt
          - mm
          - me
          - mn
          - mz
          - mr
          - mu
          - mw
          - my
          - na
          - ne
          - ng
          - ni
          - nl
          - "false"
          - np
          - nr
          - nz
          - om
          - pk
          - pa
          - pe
          - ph
          - pw
          - pg
          - pl
          - kp
          - pt
          - py
          - qa
          - ro
          - ru
          - rw
          - sa
          - sd
          - sn
          - sg
          - sb
          - sl
          - sv
          - sm
          - so
          - rs
          - ss
          - st
          - sr
          - sk
          - si
          - se
          - sz
          - sc
          - sy
          - td
          - tg
          - th
          - tj
          - tm
          - tl
          - to
          - tt
          - tn
          - tr
          - tv
          - tz
          - ug
          - ua
          - uy
          - us
          - uz
          - va
          - vc
          - ve
          - vn
          - vu
          - ws
          - ye
          - za
          - zm
          - zw
          type: string
          x-example: af
          x-enum-name: Flag
          x-enum-keys:
          - Afghanistan
          - Angola
          - Albania
          - Andorra
          - United Arab Emirates
          - Argentina
          - Armenia
          - Antigua and Barbuda
          - Australia
          - Austria
          - Azerbaijan
          - Burundi
          - Belgium
          - Benin
          - Burkina Faso
          - Bangladesh
          - Bulgaria
          - Bahrain
          - Bahamas
          - Bosnia and Herzegovina
          - Belarus
          - Belize
          - Bolivia
          - Brazil
          - Barbados
          - Brunei Darussalam
          - Bhutan
          - Botswana
          - Central African Republic
          - Canada
          - Switzerland
          - Chile
          - China
          - Côte d'Ivoire
          - Cameroon
          - Democratic Republic of the Congo
          - Republic of the Congo
          - Colombia
          - Comoros
          - Cape Verde
          - Costa Rica
          - Cuba
          - Cyprus
          - Czech Republic
          - Germany
          - Djibouti
          - Dominica
          - Denmark
          - Dominican Republic
          - Algeria
          - Ecuador
          - Egypt
          - Eritrea
          - Spain
          - Estonia
          - Ethiopia
          - Finland
          - Fiji
          - France
          - Micronesia (Federated States of)
          - Gabon
          - United Kingdom
          - Georgia
          - Ghana
          - Guinea
          - Gambia
          - Guinea-Bissau
          - Equatorial Guinea
          - Greece
          - Grenada
          - Guatemala
          - Guyana
          - Honduras
          - Croatia
          - Haiti
          - Hungary
          - Indonesia
          - India
          - Ireland
          - Iran (Islamic Republic of)
          - Iraq
          - Iceland
          - Israel
          - Italy
          - Jamaica
          - Jordan
          - Japan
          - Kazakhstan
          - Kenya
          - Kyrgyzstan
          - Cambodia
          - Kiribati
          - Saint Kitts and Nevis
          - South Korea
          - Kuwait
          - Lao People's Democratic Republic
          - Lebanon
          - Liberia
          - Libya
          - Saint Lucia
          - Liechtenstein
          - Sri Lanka
          - Lesotho
          - Lithuania
          - Luxembourg
          - Latvia
          - Morocco
          - Monaco
          - Moldova
          - Madagascar
          - Maldives
          - Mexico
          - Marshall Islands
          - North Macedonia
          - Mali
          - Malta
          - Myanmar
          - Montenegro
          - Mongolia
          - Mozambique
          - Mauritania
          - Mauritius
          - Malawi
          - Malaysia
          - Namibia
          - Niger
          - Nigeria
          - Nicaragua
          - Netherlands
          - Norway
          - Nepal
          - Nauru
          - New Zealand
          - Oman
          - Pakistan
          - Panama
          - Peru
          - Philippines
          - Palau
          - Papua New Guinea
          - Poland
          - North Korea
          - Portugal
          - Paraguay
          - Qatar
          - Romania
          - Russia
          - Rwanda
          - Saudi Arabia
          - Sudan
          - Senegal
          - Singapore
          - Solomon Islands
          - Sierra Leone
          - El Salvador
          - San Marino
          - Somalia
          - Serbia
          - South Sudan
          - Sao Tome and Principe
          - Suriname
          - Slovakia
          - Slovenia
          - Sweden
          - Eswatini
          - Seychelles
          - Syria
          - Chad
          - Togo
          - Thailand
          - Tajikistan
          - Turkmenistan
          - Timor-Leste
          - Tonga
          - Trinidad and Tobago
          - Tunisia
          - Turkey
          - Tuvalu
          - Tanzania
          - Uganda
          - Ukraine
          - Uruguay
          - United States
          - Uzbekistan
          - Vatican City
          - Saint Vincent and the Grenadines
          - Venezuela
          - Vietnam
          - Vanuatu
          - Samoa
          - Yemen
          - South Africa
          - Zambia
          - Zimbabwe
        style: simple
      - description: Image width. Pass an integer between 0 to 2000. Defaults to 100.
        explode: true
        in: query
        name: width
        required: false
        schema:
          default: 100
          example: 100
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-flags-code-get-parameters-1-schema
        style: form
      - description: Image height. Pass an integer between 0 to 2000. Defaults to
          100.
        explode: true
        in: query
        name: height
        required: false
        schema:
          default: 100
          example: 100
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-flags-code-get-parameters-2-schema
        style: form
      - description: Image quality. Pass an integer between 0 to 100. Defaults to
          100.
        explode: true
        in: query
        name: quality
        required: false
        schema:
          default: 100
          example: 100
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-flags-code-get-parameters-3-schema
        style: form
      responses:
        "200":
          description: Image
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Get country flag
      tags:
      - avatars
      x-appwrite:
        method: getFlag
        weight: 60
        cookies: false
        type: location
        deprecated: false
        demo: avatars/get-flag.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/avatars/get-flag.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: avatars.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--avatars-flags-code
      x-accepts: application/json
  /avatars/image:
    get:
      description: |
        Use this endpoint to fetch a remote image URL and crop it to any image size you want. This endpoint is very useful if you need to crop and display remote images in your app or in case you want to make sure a 3rd party image is properly served using a TLS protocol.

        When one dimension is specified and the other is 0, the image is scaled with preserved aspect ratio. If both dimensions are 0, the API provides an image at source quality. If dimensions are not specified, the default size of image returned is 400x400px.
      operationId: Avatars_getRemoteImage
      parameters:
      - description: Image URL which you want to crop.
        explode: true
        in: query
        name: url
        required: true
        schema:
          format: url
          type: string
          x-example: https://example.com
        style: form
      - description: "Resize preview image width, Pass an integer between 0 to 2000.\
          \ Defaults to 400."
        explode: true
        in: query
        name: width
        required: false
        schema:
          default: 400
          example: 400
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 400
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-image-get-parameters-1-schema
        style: form
      - description: "Resize preview image height, Pass an integer between 0 to 2000.\
          \ Defaults to 400."
        explode: true
        in: query
        name: height
        required: false
        schema:
          default: 400
          example: 400
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 400
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-image-get-parameters-2-schema
        style: form
      responses:
        "200":
          description: Image
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Get image from URL
      tags:
      - avatars
      x-appwrite:
        method: getImage
        weight: 61
        cookies: false
        type: location
        deprecated: false
        demo: avatars/get-image.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/avatars/get-image.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: avatars.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--avatars-image
      x-accepts: application/json
  /avatars/initials:
    get:
      description: |
        Use this endpoint to show your user initials avatar icon on your website or app. By default, this route will try to print your logged-in user name or email initials. You can also overwrite the user name if you pass the 'name' parameter. If no name is given and no user is logged, an empty avatar will be returned.

        You can use the color and background params to change the avatar colors. By default, a random theme will be selected. The random theme will persist for the user's initials when reloading the same theme will always return for the same initials.

        When one dimension is specified and the other is 0, the image is scaled with preserved aspect ratio. If both dimensions are 0, the API provides an image at source quality. If dimensions are not specified, the default size of image returned is 100x100px.
      operationId: Avatars_getUserInitials
      parameters:
      - description: "Full Name. When empty, current user name or email will be used.\
          \ Max length: 128 chars."
        explode: true
        in: query
        name: name
        required: false
        schema:
          default: ""
          example: ""
          type: string
          x-example: <NAME>
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-initials-get-parameters-0-schema
        style: form
      - description: Image width. Pass an integer between 0 to 2000. Defaults to 100.
        explode: true
        in: query
        name: width
        required: false
        schema:
          default: 500
          example: 500
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 500
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-initials-get-parameters-1-schema
        style: form
      - description: Image height. Pass an integer between 0 to 2000. Defaults to
          100.
        explode: true
        in: query
        name: height
        required: false
        schema:
          default: 500
          example: 500
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 500
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-initials-get-parameters-2-schema
        style: form
      - description: Changes background color. By default a random color will be picked
          and stay will persistent to the given name.
        explode: true
        in: query
        name: background
        required: false
        schema:
          default: ""
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-initials-get-parameters-3-schema
        style: form
      responses:
        "200":
          description: Image
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Get user initials
      tags:
      - avatars
      x-appwrite:
        method: getInitials
        weight: 64
        cookies: false
        type: location
        deprecated: false
        demo: avatars/get-initials.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/avatars/get-initials.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: avatars.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--avatars-initials
      x-accepts: application/json
  /avatars/qr:
    get:
      description: |
        Converts a given plain text to a QR code image. You can use the query parameters to change the size and style of the resulting image.
      operationId: Avatars_generateQrCodeImage
      parameters:
      - description: Plain text to be converted to QR code image.
        explode: true
        in: query
        name: text
        required: true
        schema:
          type: string
          x-example: <TEXT>
        style: form
      - description: QR code size. Pass an integer between 1 to 1000. Defaults to
          400.
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 400
          example: 400
          format: int32
          type: integer
          x-example: 1
          x-konfig-original-example: 400
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-qr-get-parameters-1-schema
        style: form
      - description: Margin from edge. Pass an integer between 0 to 10. Defaults to
          1.
        explode: true
        in: query
        name: margin
        required: false
        schema:
          default: 1
          example: 1
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-qr-get-parameters-2-schema
        style: form
      - description: "Return resulting image with 'Content-Disposition: attachment\
          \ ' headers for the browser to start downloading it. Pass 0 for no header,\
          \ or 1 for otherwise. Default value is set to 0."
        explode: true
        in: query
        name: download
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-example: false
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-qr-get-parameters-3-schema
        style: form
      responses:
        "200":
          description: Image
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Get QR code
      tags:
      - avatars
      x-appwrite:
        method: getQR
        weight: 63
        cookies: false
        type: location
        deprecated: false
        demo: avatars/get-q-r.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/avatars/get-qr.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: avatars.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--avatars-qr
      x-accepts: application/json
  /databases/{databaseId}/collections/{collectionId}/documents:
    get:
      description: Get a list of all the user's documents in a given collection. You
        can use the query params to filter your results.
      operationId: Databases_listUserDocuments
      parameters:
      - description: Database ID.
        explode: false
        in: path
        name: databaseId
        required: true
        schema:
          type: string
          x-example: <DATABASE_ID>
        style: simple
      - description: "Collection ID. You can create a new collection using the Database\
          \ service [server integration](https://appwrite.io/docs/server/databases#databasesCreateCollection)."
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          type: string
          x-example: <COLLECTION_ID>
        style: simple
      - description: "Array of query strings generated using the Query class provided\
          \ by the SDK. [Learn more about queries](https://appwrite.io/docs/queries).\
          \ Maximum of 100 queries are allowed, each 4096 characters long."
        explode: true
        in: query
        name: queries
        required: false
        schema:
          default: []
          example: []
          items:
            type: string
          type: array
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-paths--databases-databaseId-collections-collectionId-documents-get-parameters-2-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/documentList'
          description: Documents List
      security:
      - Project: []
        Session: []
        JWT: []
      summary: List documents
      tags:
      - databases
      x-appwrite:
        method: listDocuments
        weight: 108
        cookies: false
        type: ""
        deprecated: false
        demo: databases/list-documents.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/databases/list-documents.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: documents.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: "/databases/{databaseId}/collections/{collectionId}/documents"
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--databases-databaseId-collections-collectionId-documents
      x-accepts: application/json
    post:
      description: "Create a new Document. Before using this route, you should create\
        \ a new collection resource using either a [server integration](https://appwrite.io/docs/server/databases#databasesCreateCollection)\
        \ API or directly from your database console."
      operationId: Databases_createDocument
      parameters:
      - description: Database ID.
        explode: false
        in: path
        name: databaseId
        required: true
        schema:
          type: string
          x-example: <DATABASE_ID>
        style: simple
      - description: "Collection ID. You can create a new collection using the Database\
          \ service [server integration](https://appwrite.io/docs/server/databases#databasesCreateCollection).\
          \ Make sure to define attributes before creating documents."
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          type: string
          x-example: <COLLECTION_ID>
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabasesCreateDocumentRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/document'
          description: Document
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Create document
      tags:
      - databases
      x-appwrite:
        method: createDocument
        weight: 107
        cookies: false
        type: ""
        deprecated: false
        demo: databases/create-document.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/databases/create-document.md
        rate-limit: 120
        rate-time: 60
        rate-key: "ip:{ip},method:{method},url:{url},userId:{userId}"
        scope: documents.write
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: "/databases/{databaseId}/collections/{collectionId}/documents"
        offline-key: "{documentId}"
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--databases-databaseId-collections-collectionId-documents
      x-content-type: application/json
      x-accepts: application/json
  /databases/{databaseId}/collections/{collectionId}/documents/{documentId}:
    delete:
      description: Delete a document by its unique ID.
      operationId: Databases_deleteDocumentById
      parameters:
      - description: Database ID.
        explode: false
        in: path
        name: databaseId
        required: true
        schema:
          type: string
          x-example: <DATABASE_ID>
        style: simple
      - description: "Collection ID. You can create a new collection using the Database\
          \ service [server integration](https://appwrite.io/docs/server/databases#databasesCreateCollection)."
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          type: string
          x-example: <COLLECTION_ID>
        style: simple
      - description: Document ID.
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
          x-example: <DOCUMENT_ID>
        style: simple
      responses:
        "204":
          description: No content
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Delete document
      tags:
      - databases
      x-appwrite:
        method: deleteDocument
        weight: 112
        cookies: false
        type: ""
        deprecated: false
        demo: databases/delete-document.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/databases/delete-document.md
        rate-limit: 60
        rate-time: 60
        rate-key: "ip:{ip},method:{method},url:{url},userId:{userId}"
        scope: documents.write
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: "/databases/{databaseId}/collections/{collectionId}/documents"
        offline-key: "{documentId}"
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--databases-databaseId-collections-collectionId-documents-documentId
      x-accepts: application/json
    get:
      description: Get a document by its unique ID. This endpoint response returns
        a JSON object with the document data.
      operationId: Databases_getDocumentById
      parameters:
      - description: Database ID.
        explode: false
        in: path
        name: databaseId
        required: true
        schema:
          type: string
          x-example: <DATABASE_ID>
        style: simple
      - description: "Collection ID. You can create a new collection using the Database\
          \ service [server integration](https://appwrite.io/docs/server/databases#databasesCreateCollection)."
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          type: string
          x-example: <COLLECTION_ID>
        style: simple
      - description: Document ID.
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
          x-example: <DOCUMENT_ID>
        style: simple
      - description: "Array of query strings generated using the Query class provided\
          \ by the SDK. [Learn more about queries](https://appwrite.io/docs/queries).\
          \ Maximum of 100 queries are allowed, each 4096 characters long."
        explode: true
        in: query
        name: queries
        required: false
        schema:
          default: []
          example: []
          items:
            type: string
          type: array
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-paths--databases-databaseId-collections-collectionId-documents-documentId-get-parameters-3-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/document'
          description: Document
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Get document
      tags:
      - databases
      x-appwrite:
        method: getDocument
        weight: 109
        cookies: false
        type: ""
        deprecated: false
        demo: databases/get-document.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/databases/get-document.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: documents.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: "/databases/{databaseId}/collections/{collectionId}/documents"
        offline-key: "{documentId}"
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--databases-databaseId-collections-collectionId-documents-documentId
      x-accepts: application/json
    patch:
      description: Update a document by its unique ID. Using the patch method you
        can pass only specific fields that will get updated.
      operationId: Databases_updateDocumentById
      parameters:
      - description: Database ID.
        explode: false
        in: path
        name: databaseId
        required: true
        schema:
          type: string
          x-example: <DATABASE_ID>
        style: simple
      - description: Collection ID.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          type: string
          x-example: <COLLECTION_ID>
        style: simple
      - description: Document ID.
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
          x-example: <DOCUMENT_ID>
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabasesUpdateDocumentByIdRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/document'
          description: Document
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Update document
      tags:
      - databases
      x-appwrite:
        method: updateDocument
        weight: 111
        cookies: false
        type: ""
        deprecated: false
        demo: databases/update-document.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/databases/update-document.md
        rate-limit: 120
        rate-time: 60
        rate-key: "ip:{ip},method:{method},url:{url},userId:{userId}"
        scope: documents.write
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: "/databases/{databaseId}/collections/{collectionId}/documents"
        offline-key: "{documentId}"
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--databases-databaseId-collections-collectionId-documents-documentId
      x-content-type: application/json
      x-accepts: application/json
  /functions/{functionId}/executions:
    get:
      description: Get a list of all the current user function execution logs. You
        can use the query params to filter your results.
      operationId: Functions_listExecutions
      parameters:
      - description: Function ID.
        explode: false
        in: path
        name: functionId
        required: true
        schema:
          type: string
          x-example: <FUNCTION_ID>
        style: simple
      - description: "Array of query strings generated using the Query class provided\
          \ by the SDK. [Learn more about queries](https://appwrite.io/docs/queries).\
          \ Maximum of 100 queries are allowed, each 4096 characters long. You may\
          \ filter on the following attributes: trigger, status, responseStatusCode,\
          \ duration"
        explode: true
        in: query
        name: queries
        required: false
        schema:
          default: []
          example: []
          items:
            type: string
          type: array
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-paths--functions-functionId-executions-get-parameters-1-schema
        style: form
      - description: "Search term to filter your list results. Max length: 256 chars."
        explode: true
        in: query
        name: search
        required: false
        schema:
          default: ""
          example: ""
          type: string
          x-example: <SEARCH>
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--functions-functionId-executions-get-parameters-2-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/executionList'
          description: Executions List
      security:
      - Project: []
        Session: []
        JWT: []
      summary: List executions
      tags:
      - functions
      x-appwrite:
        method: listExecutions
        weight: 297
        cookies: false
        type: ""
        deprecated: false
        demo: functions/list-executions.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/functions/list-executions.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: execution.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--functions-functionId-executions
      x-accepts: application/json
    post:
      description: "Trigger a function execution. The returned object will return\
        \ you the current execution status. You can ping the `Get Execution` endpoint\
        \ to get updates on the current execution status. Once this endpoint is called,\
        \ your function execution process will start asynchronously."
      operationId: Functions_triggerFunctionExecution
      parameters:
      - description: Function ID.
        explode: false
        in: path
        name: functionId
        required: true
        schema:
          type: string
          x-example: <FUNCTION_ID>
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FunctionsTriggerFunctionExecutionRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/execution'
          description: Execution
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Create execution
      tags:
      - functions
      x-appwrite:
        method: createExecution
        weight: 296
        cookies: false
        type: ""
        deprecated: false
        demo: functions/create-execution.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/functions/create-execution.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: execution.write
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--functions-functionId-executions
      x-content-type: application/json
      x-accepts: application/json
  /functions/{functionId}/executions/{executionId}:
    get:
      description: Get a function execution log by its unique ID.
      operationId: Functions_getExecutionLog
      parameters:
      - description: Function ID.
        explode: false
        in: path
        name: functionId
        required: true
        schema:
          type: string
          x-example: <FUNCTION_ID>
        style: simple
      - description: Execution ID.
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
          x-example: <EXECUTION_ID>
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/execution'
          description: Execution
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Get execution
      tags:
      - functions
      x-appwrite:
        method: getExecution
        weight: 298
        cookies: false
        type: ""
        deprecated: false
        demo: functions/get-execution.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/functions/get-execution.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: execution.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--functions-functionId-executions-executionId
      x-accepts: application/json
  /graphql:
    post:
      description: Execute a GraphQL mutation.
      operationId: Graphql_executeMutation
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/any'
          description: Any
      security:
      - Project: []
        Session: []
        JWT: []
      summary: GraphQL endpoint
      tags:
      - graphql
      x-appwrite:
        method: query
        weight: 318
        cookies: false
        type: graphql
        deprecated: false
        demo: graphql/query.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/graphql/post.md
        rate-limit: 60
        rate-time: 60
        rate-key: "url:{url},ip:{ip}"
        scope: graphql
        platforms:
        - server
        - client
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--graphql
      x-accepts: application/json
  /graphql/mutation:
    post:
      description: Execute a GraphQL mutation.
      operationId: Graphql_executeMutationOperation
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/any'
          description: Any
      security:
      - Project: []
        Session: []
        JWT: []
      summary: GraphQL endpoint
      tags:
      - graphql
      x-appwrite:
        method: mutation
        weight: 317
        cookies: false
        type: graphql
        deprecated: false
        demo: graphql/mutation.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/graphql/post.md
        rate-limit: 60
        rate-time: 60
        rate-key: "url:{url},ip:{ip}"
        scope: graphql
        platforms:
        - server
        - client
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--graphql-mutation
      x-accepts: application/json
  /locale:
    get:
      description: |-
        Get the current user location based on IP. Returns an object with user country code, country name, continent name, continent code, ip address and suggested currency. You can use the locale header to get the data in a supported language.

        ([IP Geolocation by DB-IP](https://db-ip.com))
      operationId: Locale_getUserLocale
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/locale'
          description: Locale
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Get user locale
      tags:
      - locale
      x-appwrite:
        method: get
        weight: 116
        cookies: false
        type: ""
        deprecated: false
        demo: locale/get.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/locale/get-locale.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: locale.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: /localed
        offline-key: current
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--locale
      x-accepts: application/json
  /locale/codes:
    get:
      description: "List of all locale codes in [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)."
      operationId: Locale_listCodes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/localeCodeList'
          description: Locale codes list
      security:
      - Project: []
        Session: []
        JWT: []
      summary: List Locale Codes
      tags:
      - locale
      x-appwrite:
        method: listCodes
        weight: 117
        cookies: false
        type: ""
        deprecated: false
        demo: locale/list-codes.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/locale/list-locale-codes.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: locale.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: /locale/localeCode
        offline-key: current
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--locale-codes
      x-accepts: application/json
  /locale/continents:
    get:
      description: List of all continents. You can use the locale header to get the
        data in a supported language.
      operationId: Locale_listContinents
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/continentList'
          description: Continents List
      security:
      - Project: []
        Session: []
        JWT: []
      summary: List continents
      tags:
      - locale
      x-appwrite:
        method: listContinents
        weight: 121
        cookies: false
        type: ""
        deprecated: false
        demo: locale/list-continents.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/locale/list-continents.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: locale.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: /locale/continents
        offline-key: ""
        offline-response-key: code
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--locale-continents
      x-accepts: application/json
  /locale/countries:
    get:
      description: List of all countries. You can use the locale header to get the
        data in a supported language.
      operationId: Locale_listCountries
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/countryList'
          description: Countries List
      security:
      - Project: []
        Session: []
        JWT: []
      summary: List countries
      tags:
      - locale
      x-appwrite:
        method: listCountries
        weight: 118
        cookies: false
        type: ""
        deprecated: false
        demo: locale/list-countries.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/locale/list-countries.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: locale.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: /locale/countries
        offline-key: ""
        offline-response-key: code
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--locale-countries
      x-accepts: application/json
  /locale/countries/eu:
    get:
      description: List of all countries that are currently members of the EU. You
        can use the locale header to get the data in a supported language.
      operationId: Locale_getEUCountries
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/countryList'
          description: Countries List
      security:
      - Project: []
        Session: []
        JWT: []
      summary: List EU countries
      tags:
      - locale
      x-appwrite:
        method: listCountriesEU
        weight: 119
        cookies: false
        type: ""
        deprecated: false
        demo: locale/list-countries-e-u.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/locale/list-countries-eu.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: locale.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: /locale/countries/eu
        offline-key: ""
        offline-response-key: code
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--locale-countries-eu
      x-accepts: application/json
  /locale/countries/phones:
    get:
      description: List of all countries phone codes. You can use the locale header
        to get the data in a supported language.
      operationId: Locale_listCountriesPhones
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/phoneList'
          description: Phones List
      security:
      - Project: []
        Session: []
        JWT: []
      summary: List countries phone codes
      tags:
      - locale
      x-appwrite:
        method: listCountriesPhones
        weight: 120
        cookies: false
        type: ""
        deprecated: false
        demo: locale/list-countries-phones.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/locale/list-countries-phones.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: locale.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: /locale/countries/phones
        offline-key: ""
        offline-response-key: countryCode
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--locale-countries-phones
      x-accepts: application/json
  /locale/currencies:
    get:
      description: "List of all currencies, including currency symbol, name, plural,\
        \ and decimal digits for all major and minor currencies. You can use the locale\
        \ header to get the data in a supported language."
      operationId: Locale_getCurrencies
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/currencyList'
          description: Currencies List
      security:
      - Project: []
        Session: []
        JWT: []
      summary: List currencies
      tags:
      - locale
      x-appwrite:
        method: listCurrencies
        weight: 122
        cookies: false
        type: ""
        deprecated: false
        demo: locale/list-currencies.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/locale/list-currencies.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: locale.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: /locale/currencies
        offline-key: ""
        offline-response-key: code
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--locale-currencies
      x-accepts: application/json
  /locale/languages:
    get:
      description: "List of all languages classified by ISO 639-1 including 2-letter\
        \ code, name in English, and name in the respective language."
      operationId: Locale_listLanguages
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/languageList'
          description: Languages List
      security:
      - Project: []
        Session: []
        JWT: []
      summary: List languages
      tags:
      - locale
      x-appwrite:
        method: listLanguages
        weight: 123
        cookies: false
        type: ""
        deprecated: false
        demo: locale/list-languages.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/locale/list-languages.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: locale.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: /locale/languages
        offline-key: ""
        offline-response-key: code
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--locale-languages
      x-accepts: application/json
  /messaging/topics/{topicId}/subscribers:
    post:
      description: Create a new subscriber.
      operationId: Messaging_addNewSubscriber
      parameters:
      - description: Topic ID. The topic ID to subscribe to.
        explode: false
        in: path
        name: topicId
        required: true
        schema:
          type: string
          x-example: <TOPIC_ID>
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessagingAddNewSubscriberRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscriber'
          description: Subscriber
      security:
      - Project: []
        JWT: []
        Session: []
      summary: Create subscriber
      tags:
      - messaging
      x-appwrite:
        method: createSubscriber
        weight: 369
        cookies: false
        type: ""
        deprecated: false
        demo: messaging/create-subscriber.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/messaging/create-subscriber.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: subscribers.write
        platforms:
        - server
        - client
        - console
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--messaging-topics-topicId-subscribers
      x-content-type: application/json
      x-accepts: application/json
  /messaging/topics/{topicId}/subscribers/{subscriberId}:
    delete:
      description: Delete a subscriber by its unique ID.
      operationId: Messaging_deleteSubscriberById
      parameters:
      - description: Topic ID. The topic ID subscribed to.
        explode: false
        in: path
        name: topicId
        required: true
        schema:
          type: string
          x-example: <TOPIC_ID>
        style: simple
      - description: Subscriber ID.
        explode: false
        in: path
        name: subscriberId
        required: true
        schema:
          type: string
          x-example: <SUBSCRIBER_ID>
        style: simple
      responses:
        "204":
          description: No content
      security:
      - Project: []
        JWT: []
        Session: []
      summary: Delete subscriber
      tags:
      - messaging
      x-appwrite:
        method: deleteSubscriber
        weight: 373
        cookies: false
        type: ""
        deprecated: false
        demo: messaging/delete-subscriber.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/messaging/delete-subscriber.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: subscribers.write
        platforms:
        - server
        - client
        - console
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--messaging-topics-topicId-subscribers-subscriberId
      x-accepts: application/json
  /storage/buckets/{bucketId}/files:
    get:
      description: Get a list of all the user files. You can use the query params
        to filter your results.
      operationId: Storage_listFiles
      parameters:
      - description: "Storage bucket unique ID. You can create a new storage bucket\
          \ using the Storage service [server integration](https://appwrite.io/docs/server/storage#createBucket)."
        explode: false
        in: path
        name: bucketId
        required: true
        schema:
          type: string
          x-example: <BUCKET_ID>
        style: simple
      - description: "Array of query strings generated using the Query class provided\
          \ by the SDK. [Learn more about queries](https://appwrite.io/docs/queries).\
          \ Maximum of 100 queries are allowed, each 4096 characters long. You may\
          \ filter on the following attributes: name, signature, mimeType, sizeOriginal,\
          \ chunksTotal, chunksUploaded"
        explode: true
        in: query
        name: queries
        required: false
        schema:
          default: []
          example: []
          items:
            type: string
          type: array
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-get-parameters-1-schema
        style: form
      - description: "Search term to filter your list results. Max length: 256 chars."
        explode: true
        in: query
        name: search
        required: false
        schema:
          default: ""
          example: ""
          type: string
          x-example: <SEARCH>
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-get-parameters-2-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fileList'
          description: Files List
      security:
      - Project: []
        Session: []
        JWT: []
      summary: List files
      tags:
      - storage
      x-appwrite:
        method: listFiles
        weight: 203
        cookies: false
        type: ""
        deprecated: false
        demo: storage/list-files.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/storage/list-files.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: files.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--storage-buckets-bucketId-files
      x-accepts: application/json
    post:
      description: |
        Create a new file. Before using this route, you should create a new bucket resource using either a [server integration](https://appwrite.io/docs/server/storage#storageCreateBucket) API or directly from your Appwrite console.

        Larger files should be uploaded using multiple requests with the [content-range](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Range) header to send a partial request with a maximum supported chunk of `5MB`. The `content-range` header values should always be in bytes.

        When the first request is sent, the server will return the **File** object, and the subsequent part request must include the file's **id** in `x-appwrite-id` header to allow the server to know that the partial upload is for the existing file and not for a new one.

        If you're creating a new file using one of the Appwrite SDKs, all the chunking logic will be managed by the SDK internally.
      operationId: Storage_createFile
      parameters:
      - description: "Storage bucket unique ID. You can create a new storage bucket\
          \ using the Storage service [server integration](https://appwrite.io/docs/server/storage#createBucket)."
        explode: false
        in: path
        name: bucketId
        required: true
        schema:
          type: string
          x-example: <BUCKET_ID>
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StorageCreateFileRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file'
          description: File
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Create file
      tags:
      - storage
      x-appwrite:
        method: createFile
        weight: 202
        cookies: false
        type: upload
        deprecated: false
        demo: storage/create-file.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/storage/create-file.md
        rate-limit: 60
        rate-time: 60
        rate-key: "ip:{ip},method:{method},url:{url},userId:{userId}"
        scope: files.write
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--storage-buckets-bucketId-files
      x-content-type: multipart/form-data
      x-accepts: application/json
  /storage/buckets/{bucketId}/files/{fileId}:
    delete:
      description: Delete a file by its unique ID. Only users with write permissions
        have access to delete this resource.
      operationId: Storage_deleteFileById
      parameters:
      - description: "Storage bucket unique ID. You can create a new storage bucket\
          \ using the Storage service [server integration](https://appwrite.io/docs/server/storage#createBucket)."
        explode: false
        in: path
        name: bucketId
        required: true
        schema:
          type: string
          x-example: <BUCKET_ID>
        style: simple
      - description: File ID.
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
          x-example: <FILE_ID>
        style: simple
      responses:
        "204":
          description: No content
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Delete File
      tags:
      - storage
      x-appwrite:
        method: deleteFile
        weight: 210
        cookies: false
        type: ""
        deprecated: false
        demo: storage/delete-file.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/storage/delete-file.md
        rate-limit: 60
        rate-time: 60
        rate-key: "ip:{ip},method:{method},url:{url},userId:{userId}"
        scope: files.write
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--storage-buckets-bucketId-files-fileId
      x-accepts: application/json
    get:
      description: Get a file by its unique ID. This endpoint response returns a JSON
        object with the file metadata.
      operationId: Storage_getFileById
      parameters:
      - description: "Storage bucket unique ID. You can create a new storage bucket\
          \ using the Storage service [server integration](https://appwrite.io/docs/server/storage#createBucket)."
        explode: false
        in: path
        name: bucketId
        required: true
        schema:
          type: string
          x-example: <BUCKET_ID>
        style: simple
      - description: File ID.
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
          x-example: <FILE_ID>
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file'
          description: File
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Get file
      tags:
      - storage
      x-appwrite:
        method: getFile
        weight: 204
        cookies: false
        type: ""
        deprecated: false
        demo: storage/get-file.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/storage/get-file.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: files.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--storage-buckets-bucketId-files-fileId
      x-accepts: application/json
    put:
      description: Update a file by its unique ID. Only users with write permissions
        have access to update this resource.
      operationId: Storage_updateFileById
      parameters:
      - description: "Storage bucket unique ID. You can create a new storage bucket\
          \ using the Storage service [server integration](https://appwrite.io/docs/server/storage#createBucket)."
        explode: false
        in: path
        name: bucketId
        required: true
        schema:
          type: string
          x-example: <BUCKET_ID>
        style: simple
      - description: File unique ID.
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
          x-example: <FILE_ID>
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageUpdateFileByIdRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file'
          description: File
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Update file
      tags:
      - storage
      x-appwrite:
        method: updateFile
        weight: 209
        cookies: false
        type: ""
        deprecated: false
        demo: storage/update-file.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/storage/update-file.md
        rate-limit: 60
        rate-time: 60
        rate-key: "ip:{ip},method:{method},url:{url},userId:{userId}"
        scope: files.write
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--storage-buckets-bucketId-files-fileId
      x-content-type: application/json
      x-accepts: application/json
  /storage/buckets/{bucketId}/files/{fileId}/download:
    get:
      description: "Get a file content by its unique ID. The endpoint response return\
        \ with a 'Content-Disposition: attachment' header that tells the browser to\
        \ start downloading the file to user downloads directory."
      operationId: Storage_getFileDownload
      parameters:
      - description: "Storage bucket ID. You can create a new storage bucket using\
          \ the Storage service [server integration](https://appwrite.io/docs/server/storage#createBucket)."
        explode: false
        in: path
        name: bucketId
        required: true
        schema:
          type: string
          x-example: <BUCKET_ID>
        style: simple
      - description: File ID.
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
          x-example: <FILE_ID>
        style: simple
      responses:
        "200":
          description: File
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Get file for download
      tags:
      - storage
      x-appwrite:
        method: getFileDownload
        weight: 206
        cookies: false
        type: location
        deprecated: false
        demo: storage/get-file-download.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/storage/get-file-download.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: files.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--storage-buckets-bucketId-files-fileId-download
      x-accepts: application/json
  /storage/buckets/{bucketId}/files/{fileId}/preview:
    get:
      description: "Get a file preview image. Currently, this method supports preview\
        \ for image files (jpg, png, and gif), other supported formats, like pdf,\
        \ docs, slides, and spreadsheets, will return the file icon image. You can\
        \ also pass query string arguments for cutting and resizing your preview image.\
        \ Preview is supported only for image files smaller than 10MB."
      operationId: Storage_getFilePreviewImage
      parameters:
      - description: "Storage bucket unique ID. You can create a new storage bucket\
          \ using the Storage service [server integration](https://appwrite.io/docs/server/storage#createBucket)."
        explode: false
        in: path
        name: bucketId
        required: true
        schema:
          type: string
          x-example: <BUCKET_ID>
        style: simple
      - description: File ID
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
          x-example: <FILE_ID>
        style: simple
      - description: "Resize preview image width, Pass an integer between 0 to 4000."
        explode: true
        in: query
        name: width
        required: false
        schema:
          default: 0
          example: 0
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-2-schema
        style: form
      - description: "Resize preview image height, Pass an integer between 0 to 4000."
        explode: true
        in: query
        name: height
        required: false
        schema:
          default: 0
          example: 0
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-3-schema
        style: form
      - description: "Image crop gravity. Can be one of center,top-left,top,top-right,left,right,bottom-left,bottom,bottom-right"
        explode: true
        in: query
        name: gravity
        required: false
        schema:
          default: center
          enum:
          - center
          - top-left
          - top
          - top-right
          - left
          - right
          - bottom-left
          - bottom
          - bottom-right
          example: center
          type: string
          x-example: center
          x-enum-name: ImageGravity
          x-enum-keys: []
          x-konfig-original-example: center
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-4-schema
        style: form
      - description: Preview image quality. Pass an integer between 0 to 100. Defaults
          to 100.
        explode: true
        in: query
        name: quality
        required: false
        schema:
          default: 100
          example: 100
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-5-schema
        style: form
      - description: Preview image border in pixels. Pass an integer between 0 to
          100. Defaults to 0.
        explode: true
        in: query
        name: borderWidth
        required: false
        schema:
          default: 0
          example: 0
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-6-schema
        style: form
      - description: "Preview image border color. Use a valid HEX color, no # is needed\
          \ for prefix."
        explode: true
        in: query
        name: borderColor
        required: false
        schema:
          default: ""
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-7-schema
        style: form
      - description: Preview image border radius in pixels. Pass an integer between
          0 to 4000.
        explode: true
        in: query
        name: borderRadius
        required: false
        schema:
          default: 0
          example: 0
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-8-schema
        style: form
      - description: Preview image opacity. Only works with images having an alpha
          channel (like png). Pass a number between 0 to 1.
        explode: true
        in: query
        name: opacity
        required: false
        schema:
          default: 1
          example: 1
          format: float
          type: number
          x-example: 0
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-9-schema
        style: form
      - description: Preview image rotation in degrees. Pass an integer between -360
          and 360.
        explode: true
        in: query
        name: rotation
        required: false
        schema:
          default: 0
          example: 0
          format: int32
          type: integer
          x-example: -360
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-10-schema
        style: form
      - description: "Preview image background color. Only works with transparent\
          \ images (png). Use a valid HEX color, no # is needed for prefix."
        explode: true
        in: query
        name: background
        required: false
        schema:
          default: ""
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-11-schema
        style: form
      - description: "Output format type (jpeg, jpg, png, gif and webp)."
        explode: true
        in: query
        name: output
        required: false
        schema:
          default: ""
          enum:
          - jpg
          - jpeg
          - gif
          - png
          - webp
          example: ""
          type: string
          x-example: jpg
          x-enum-name: ImageFormat
          x-enum-keys: []
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-12-schema
        style: form
      responses:
        "200":
          description: Image
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Get file preview
      tags:
      - storage
      x-appwrite:
        method: getFilePreview
        weight: 205
        cookies: false
        type: location
        deprecated: false
        demo: storage/get-file-preview.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/storage/get-file-preview.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: files.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--storage-buckets-bucketId-files-fileId-preview
      x-accepts: application/json
  /storage/buckets/{bucketId}/files/{fileId}/view:
    get:
      description: "Get a file content by its unique ID. This endpoint is similar\
        \ to the download method but returns with no  'Content-Disposition: attachment'\
        \ header."
      operationId: Storage_getFileForView
      parameters:
      - description: "Storage bucket unique ID. You can create a new storage bucket\
          \ using the Storage service [server integration](https://appwrite.io/docs/server/storage#createBucket)."
        explode: false
        in: path
        name: bucketId
        required: true
        schema:
          type: string
          x-example: <BUCKET_ID>
        style: simple
      - description: File ID.
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          type: string
          x-example: <FILE_ID>
        style: simple
      responses:
        "200":
          description: File
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Get file for view
      tags:
      - storage
      x-appwrite:
        method: getFileView
        weight: 207
        cookies: false
        type: location
        deprecated: false
        demo: storage/get-file-view.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/storage/get-file-view.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: files.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--storage-buckets-bucketId-files-fileId-view
      x-accepts: application/json
  /teams:
    get:
      description: Get a list of all the teams in which the current user is a member.
        You can use the parameters to filter your results.
      operationId: Teams_getUserMemberships
      parameters:
      - description: "Array of query strings generated using the Query class provided\
          \ by the SDK. [Learn more about queries](https://appwrite.io/docs/queries).\
          \ Maximum of 100 queries are allowed, each 4096 characters long. You may\
          \ filter on the following attributes: name, total, billingPlan"
        explode: true
        in: query
        name: queries
        required: false
        schema:
          default: []
          example: []
          items:
            type: string
          type: array
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-paths--teams-get-parameters-0-schema
        style: form
      - description: "Search term to filter your list results. Max length: 256 chars."
        explode: true
        in: query
        name: search
        required: false
        schema:
          default: ""
          example: ""
          type: string
          x-example: <SEARCH>
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--teams-get-parameters-1-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teamList'
          description: Teams List
      security:
      - Project: []
        Session: []
        JWT: []
      summary: List teams
      tags:
      - teams
      x-appwrite:
        method: list
        weight: 214
        cookies: false
        type: ""
        deprecated: false
        demo: teams/list.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/teams/list-teams.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: teams.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: /teams
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--teams
      x-accepts: application/json
    post:
      description: "Create a new team. The user who creates the team will automatically\
        \ be assigned as the owner of the team. Only the users with the owner role\
        \ can invite new members, add new owners and delete or update the team."
      operationId: Teams_createNewTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamsCreateNewTeamRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team'
          description: Team
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Create team
      tags:
      - teams
      x-appwrite:
        method: create
        weight: 213
        cookies: false
        type: ""
        deprecated: false
        demo: teams/create.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/teams/create-team.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: teams.write
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--teams
      x-content-type: application/json
      x-accepts: application/json
  /teams/{teamId}:
    delete:
      description: Delete a team using its ID. Only team members with the owner role
        can delete the team.
      operationId: Teams_removeTeam
      parameters:
      - description: Team ID.
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
          x-example: <TEAM_ID>
        style: simple
      responses:
        "204":
          description: No content
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Delete team
      tags:
      - teams
      x-appwrite:
        method: delete
        weight: 219
        cookies: false
        type: ""
        deprecated: false
        demo: teams/delete.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/teams/delete-team.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: teams.write
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--teams-teamId
      x-accepts: application/json
    get:
      description: Get a team by its ID. All team members have read access for this
        resource.
      operationId: Teams_getById
      parameters:
      - description: Team ID.
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
          x-example: <TEAM_ID>
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team'
          description: Team
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Get team
      tags:
      - teams
      x-appwrite:
        method: get
        weight: 215
        cookies: false
        type: ""
        deprecated: false
        demo: teams/get.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/teams/get-team.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: teams.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: /teams
        offline-key: "{teamId}"
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--teams-teamId
      x-accepts: application/json
    put:
      description: Update the team's name by its unique ID.
      operationId: Teams_updateNameById
      parameters:
      - description: Team ID.
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
          x-example: <TEAM_ID>
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamsUpdateNameByIdRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team'
          description: Team
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Update name
      tags:
      - teams
      x-appwrite:
        method: updateName
        weight: 217
        cookies: false
        type: ""
        deprecated: false
        demo: teams/update-name.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/teams/update-team-name.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: teams.write
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: /teams
        offline-key: "{teamId}"
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--teams-teamId
      x-content-type: application/json
      x-accepts: application/json
  /teams/{teamId}/memberships:
    get:
      description: Use this endpoint to list a team's members using the team's ID.
        All team members have read access to this endpoint.
      operationId: Teams_listMemberships
      parameters:
      - description: Team ID.
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
          x-example: <TEAM_ID>
        style: simple
      - description: "Array of query strings generated using the Query class provided\
          \ by the SDK. [Learn more about queries](https://appwrite.io/docs/queries).\
          \ Maximum of 100 queries are allowed, each 4096 characters long. You may\
          \ filter on the following attributes: userId, teamId, invited, joined, confirm"
        explode: true
        in: query
        name: queries
        required: false
        schema:
          default: []
          example: []
          items:
            type: string
          type: array
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-paths--teams-teamId-memberships-get-parameters-1-schema
        style: form
      - description: "Search term to filter your list results. Max length: 256 chars."
        explode: true
        in: query
        name: search
        required: false
        schema:
          default: ""
          example: ""
          type: string
          x-example: <SEARCH>
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--teams-teamId-memberships-get-parameters-2-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/membershipList'
          description: Memberships List
      security:
      - Project: []
        Session: []
        JWT: []
      summary: List team memberships
      tags:
      - teams
      x-appwrite:
        method: listMemberships
        weight: 221
        cookies: false
        type: ""
        deprecated: false
        demo: teams/list-memberships.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/teams/list-team-members.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: teams.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: "/teams/{teamId}/memberships"
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--teams-teamId-memberships
      x-accepts: application/json
    post:
      description: "Invite a new member to join your team. Provide an ID for existing\
        \ users, or invite unregistered users using an email or phone number. If initiated\
        \ from a Client SDK, Appwrite will send an email or sms with a link to join\
        \ the team to the invited user, and an account will be created for them if\
        \ one doesn't exist. If initiated from a Server SDK, the new member will be\
        \ added automatically to the team.\n\nYou only need to provide one of a user\
        \ ID, email, or phone number. Appwrite will prioritize accepting the user\
        \ ID > email > phone number if you provide more than one of these parameters.\n\
        \nUse the `url` parameter to redirect the user from the invitation email to\
        \ your app. After the user is redirected, use the [Update Team Membership\
        \ Status](https://appwrite.io/docs/references/cloud/client-web/teams#updateMembershipStatus)\
        \ endpoint to allow the user to accept the invitation to the team. \n\nPlease\
        \ note that to avoid a [Redirect Attack](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.md)\
        \ Appwrite will accept the only redirect URLs under the domains you have added\
        \ as a platform on the Appwrite Console.\n"
      operationId: Teams_createMembership
      parameters:
      - description: Team ID.
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
          x-example: <TEAM_ID>
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamsCreateMembershipRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/membership'
          description: Membership
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Create team membership
      tags:
      - teams
      x-appwrite:
        method: createMembership
        weight: 220
        cookies: false
        type: ""
        deprecated: false
        demo: teams/create-membership.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/teams/create-team-membership.md
        rate-limit: 10
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: teams.write
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--teams-teamId-memberships
      x-content-type: application/json
      x-accepts: application/json
  /teams/{teamId}/memberships/{membershipId}:
    delete:
      description: This endpoint allows a user to leave a team or for a team owner
        to delete the membership of any other team member. You can also use this endpoint
        to delete a user membership even if it is not accepted.
      operationId: Teams_deleteMembership
      parameters:
      - description: Team ID.
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
          x-example: <TEAM_ID>
        style: simple
      - description: Membership ID.
        explode: false
        in: path
        name: membershipId
        required: true
        schema:
          type: string
          x-example: <MEMBERSHIP_ID>
        style: simple
      responses:
        "204":
          description: No content
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Delete team membership
      tags:
      - teams
      x-appwrite:
        method: deleteMembership
        weight: 225
        cookies: false
        type: ""
        deprecated: false
        demo: teams/delete-membership.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/teams/delete-team-membership.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: teams.write
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--teams-teamId-memberships-membershipId
      x-accepts: application/json
    get:
      description: Get a team member by the membership unique id. All team members
        have read access for this resource.
      operationId: Teams_getMembership
      parameters:
      - description: Team ID.
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
          x-example: <TEAM_ID>
        style: simple
      - description: Membership ID.
        explode: false
        in: path
        name: membershipId
        required: true
        schema:
          type: string
          x-example: <MEMBERSHIP_ID>
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/membership'
          description: Membership
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Get team membership
      tags:
      - teams
      x-appwrite:
        method: getMembership
        weight: 222
        cookies: false
        type: ""
        deprecated: false
        demo: teams/get-membership.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/teams/get-team-member.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: teams.read
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: "/teams/{teamId}/memberships"
        offline-key: "{membershipId}"
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--teams-teamId-memberships-membershipId
      x-accepts: application/json
    patch:
      description: |
        Modify the roles of a team member. Only team members with the owner role have access to this endpoint. Learn more about [roles and permissions](https://appwrite.io/docs/permissions).
      operationId: Teams_updateMembershipRoles
      parameters:
      - description: Team ID.
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
          x-example: <TEAM_ID>
        style: simple
      - description: Membership ID.
        explode: false
        in: path
        name: membershipId
        required: true
        schema:
          type: string
          x-example: <MEMBERSHIP_ID>
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamsUpdateMembershipRolesRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/membership'
          description: Membership
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Update membership
      tags:
      - teams
      x-appwrite:
        method: updateMembership
        weight: 223
        cookies: false
        type: ""
        deprecated: false
        demo: teams/update-membership.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/teams/update-team-membership.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: teams.write
        platforms:
        - client
        - server
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--teams-teamId-memberships-membershipId
      x-content-type: application/json
      x-accepts: application/json
  /teams/{teamId}/memberships/{membershipId}/status:
    patch:
      description: |
        Use this endpoint to allow a user to accept an invitation to join a team after being redirected back to your app from the invitation email received by the user.

        If the request is successful, a session for the user is automatically created.
      operationId: Teams_updateMembershipStatus
      parameters:
      - description: Team ID.
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
          x-example: <TEAM_ID>
        style: simple
      - description: Membership ID.
        explode: false
        in: path
        name: membershipId
        required: true
        schema:
          type: string
          x-example: <MEMBERSHIP_ID>
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamsUpdateMembershipStatusRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/membership'
          description: Membership
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Update team membership status
      tags:
      - teams
      x-appwrite:
        method: updateMembershipStatus
        weight: 224
        cookies: false
        type: ""
        deprecated: false
        demo: teams/update-membership-status.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/teams/update-team-membership-status.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: public
        platforms:
        - client
        - server
        packaging: false
        offline-model: ""
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--teams-teamId-memberships-membershipId-status
      x-content-type: application/json
      x-accepts: application/json
  /teams/{teamId}/prefs:
    get:
      description: "Get the team's shared preferences by its unique ID. If a preference\
        \ doesn't need to be shared by all team members, prefer storing them in [user\
        \ preferences](https://appwrite.io/docs/references/cloud/client-web/account#getPrefs)."
      operationId: Teams_getPrefs
      parameters:
      - description: Team ID.
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
          x-example: <TEAM_ID>
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/preferences'
          description: Preferences
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Get team preferences
      tags:
      - teams
      x-appwrite:
        method: getPrefs
        weight: 216
        cookies: false
        type: ""
        deprecated: false
        demo: teams/get-prefs.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/teams/get-team-prefs.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: teams.read
        platforms:
        - client
        - server
        packaging: false
        offline-model: "/teams/{teamId}/prefs"
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--teams-teamId-prefs
      x-accepts: application/json
    put:
      description: Update the team's preferences by its unique ID. The object you
        pass is stored as is and replaces any previous value. The maximum allowed
        prefs size is 64kB and throws an error if exceeded.
      operationId: Teams_updatePrefsById
      parameters:
      - description: Team ID.
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
          x-example: <TEAM_ID>
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamsUpdatePrefsByIdRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/preferences'
          description: Preferences
      security:
      - Project: []
        Session: []
        JWT: []
      summary: Update preferences
      tags:
      - teams
      x-appwrite:
        method: updatePrefs
        weight: 218
        cookies: false
        type: ""
        deprecated: false
        demo: teams/update-prefs.md
        edit: https://github.com/appwrite/appwrite/edit/master/docs/references/teams/update-team-prefs.md
        rate-limit: 0
        rate-time: 3600
        rate-key: "url:{url},ip:{ip}"
        scope: teams.write
        platforms:
        - client
        - server
        packaging: false
        offline-model: "/teams/{teamId}/prefs"
        offline-key: ""
        offline-response-key: $id
        auth:
          Project: []
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--teams-teamId-prefs
      x-content-type: application/json
      x-accepts: application/json
components:
  schemas:
    any:
      additionalProperties: true
      description: Any
      type: object
      x-konfig-is-used-in-successful-response: true
    error:
      description: Error
      properties:
        version:
          description: Server version number.
          type: string
          x-example: "1.0"
        message:
          description: Error message.
          type: string
          x-example: Not found
        code:
          description: Error code.
          type: string
          x-example: "404"
        type:
          description: Error type. You can learn more about all the error types at
            https://appwrite.io/docs/error-codes#errorTypes
          type: string
          x-example: not_found
      required:
      - code
      - message
      - type
      - version
      type: object
    documentList:
      description: Documents List
      example:
        total: 0
        documents:
        - $databaseId: $databaseId
          $createdAt: $createdAt
          $collectionId: $collectionId
          $permissions:
          - $permissions
          - $permissions
          $id: $id
          $updatedAt: $updatedAt
        - $databaseId: $databaseId
          $createdAt: $createdAt
          $collectionId: $collectionId
          $permissions:
          - $permissions
          - $permissions
          $id: $id
          $updatedAt: $updatedAt
      properties:
        total:
          description: Total number of documents documents that matched your query.
          format: int32
          type: integer
          x-example: 5
        documents:
          description: List of documents.
          items:
            $ref: '#/components/schemas/document'
          type: array
          x-example: ""
      required:
      - documents
      - total
      type: object
      x-konfig-is-used-in-successful-response: true
    sessionList:
      description: Sessions List
      example:
        total: 0
        sessions:
        - clientName: clientName
          secret: secret
          clientVersion: clientVersion
          deviceName: deviceName
          providerUid: providerUid
          clientEngineVersion: clientEngineVersion
          current: true
          providerAccessToken: providerAccessToken
          clientType: clientType
          osVersion: osVersion
          provider: provider
          countryCode: countryCode
          mfaUpdatedAt: mfaUpdatedAt
          providerRefreshToken: providerRefreshToken
          ip: ip
          $createdAt: $createdAt
          osName: osName
          userId: userId
          providerAccessTokenExpiry: providerAccessTokenExpiry
          osCode: osCode
          factors:
          - factors
          - factors
          clientEngine: clientEngine
          clientCode: clientCode
          expire: expire
          deviceModel: deviceModel
          countryName: countryName
          deviceBrand: deviceBrand
          $id: $id
        - clientName: clientName
          secret: secret
          clientVersion: clientVersion
          deviceName: deviceName
          providerUid: providerUid
          clientEngineVersion: clientEngineVersion
          current: true
          providerAccessToken: providerAccessToken
          clientType: clientType
          osVersion: osVersion
          provider: provider
          countryCode: countryCode
          mfaUpdatedAt: mfaUpdatedAt
          providerRefreshToken: providerRefreshToken
          ip: ip
          $createdAt: $createdAt
          osName: osName
          userId: userId
          providerAccessTokenExpiry: providerAccessTokenExpiry
          osCode: osCode
          factors:
          - factors
          - factors
          clientEngine: clientEngine
          clientCode: clientCode
          expire: expire
          deviceModel: deviceModel
          countryName: countryName
          deviceBrand: deviceBrand
          $id: $id
      properties:
        total:
          description: Total number of sessions documents that matched your query.
          format: int32
          type: integer
          x-example: 5
        sessions:
          description: List of sessions.
          items:
            $ref: '#/components/schemas/session'
          type: array
          x-example: ""
      required:
      - sessions
      - total
      type: object
      x-konfig-is-used-in-successful-response: true
    identityList:
      description: Identities List
      example:
        total: 0
        identities:
        - providerAccessToken: providerAccessToken
          provider: provider
          providerRefreshToken: providerRefreshToken
          $createdAt: $createdAt
          userId: userId
          providerEmail: providerEmail
          providerAccessTokenExpiry: providerAccessTokenExpiry
          $id: $id
          $updatedAt: $updatedAt
          providerUid: providerUid
        - providerAccessToken: providerAccessToken
          provider: provider
          providerRefreshToken: providerRefreshToken
          $createdAt: $createdAt
          userId: userId
          providerEmail: providerEmail
          providerAccessTokenExpiry: providerAccessTokenExpiry
          $id: $id
          $updatedAt: $updatedAt
          providerUid: providerUid
      properties:
        total:
          description: Total number of identities documents that matched your query.
          format: int32
          type: integer
          x-example: 5
        identities:
          description: List of identities.
          items:
            $ref: '#/components/schemas/identity'
          type: array
          x-example: ""
      required:
      - identities
      - total
      type: object
      x-konfig-is-used-in-successful-response: true
    logList:
      description: Logs List
      example:
        total: 0
        logs:
        - clientName: clientName
          ip: ip
          userName: userName
          osName: osName
          clientVersion: clientVersion
          userId: userId
          deviceName: deviceName
          osCode: osCode
          clientEngineVersion: clientEngineVersion
          mode: mode
          clientType: clientType
          clientEngine: clientEngine
          osVersion: osVersion
          clientCode: clientCode
          countryCode: countryCode
          userEmail: userEmail
          deviceModel: deviceModel
          time: time
          countryName: countryName
          event: event
          deviceBrand: deviceBrand
        - clientName: clientName
          ip: ip
          userName: userName
          osName: osName
          clientVersion: clientVersion
          userId: userId
          deviceName: deviceName
          osCode: osCode
          clientEngineVersion: clientEngineVersion
          mode: mode
          clientType: clientType
          clientEngine: clientEngine
          osVersion: osVersion
          clientCode: clientCode
          countryCode: countryCode
          userEmail: userEmail
          deviceModel: deviceModel
          time: time
          countryName: countryName
          event: event
          deviceBrand: deviceBrand
      properties:
        total:
          description: Total number of logs documents that matched your query.
          format: int32
          type: integer
          x-example: 5
        logs:
          description: List of logs.
          items:
            $ref: '#/components/schemas/log'
          type: array
          x-example: ""
      required:
      - logs
      - total
      type: object
      x-konfig-is-used-in-successful-response: true
    fileList:
      description: Files List
      example:
        total: 0
        files:
        - signature: signature
          sizeOriginal: 6
          chunksTotal: 1
          name: name
          $createdAt: $createdAt
          bucketId: bucketId
          mimeType: mimeType
          $permissions:
          - $permissions
          - $permissions
          chunksUploaded: 5
          $id: $id
          $updatedAt: $updatedAt
        - signature: signature
          sizeOriginal: 6
          chunksTotal: 1
          name: name
          $createdAt: $createdAt
          bucketId: bucketId
          mimeType: mimeType
          $permissions:
          - $permissions
          - $permissions
          chunksUploaded: 5
          $id: $id
          $updatedAt: $updatedAt
      properties:
        total:
          description: Total number of files documents that matched your query.
          format: int32
          type: integer
          x-example: 5
        files:
          description: List of files.
          items:
            $ref: '#/components/schemas/file'
          type: array
          x-example: ""
      required:
      - files
      - total
      type: object
      x-konfig-is-used-in-successful-response: true
    teamList:
      description: Teams List
      example:
        total: 0
        teams:
        - total: 6
          name: name
          $createdAt: $createdAt
          $id: $id
          $updatedAt: $updatedAt
          prefs:
          - null
          - null
        - total: 6
          name: name
          $createdAt: $createdAt
          $id: $id
          $updatedAt: $updatedAt
          prefs:
          - null
          - null
      properties:
        total:
          description: Total number of teams documents that matched your query.
          format: int32
          type: integer
          x-example: 5
        teams:
          description: List of teams.
          items:
            $ref: '#/components/schemas/team'
          type: array
          x-example: ""
      required:
      - teams
      - total
      type: object
      x-konfig-is-used-in-successful-response: true
    membershipList:
      description: Memberships List
      example:
        total: 0
        memberships:
        - teamName: teamName
          joined: joined
          roles:
          - roles
          - roles
          invited: invited
          $createdAt: $createdAt
          mfa: true
          userName: userName
          userId: userId
          $updatedAt: $updatedAt
          confirm: true
          teamId: teamId
          userEmail: userEmail
          $id: $id
        - teamName: teamName
          joined: joined
          roles:
          - roles
          - roles
          invited: invited
          $createdAt: $createdAt
          mfa: true
          userName: userName
          userId: userId
          $updatedAt: $updatedAt
          confirm: true
          teamId: teamId
          userEmail: userEmail
          $id: $id
      properties:
        total:
          description: Total number of memberships documents that matched your query.
          format: int32
          type: integer
          x-example: 5
        memberships:
          description: List of memberships.
          items:
            $ref: '#/components/schemas/membership'
          type: array
          x-example: ""
      required:
      - memberships
      - total
      type: object
      x-konfig-is-used-in-successful-response: true
    executionList:
      description: Executions List
      example:
        total: 0
        executions:
        - responseBody: responseBody
          requestMethod: requestMethod
          $createdAt: $createdAt
          trigger: trigger
          $permissions:
          - $permissions
          - $permissions
          $updatedAt: $updatedAt
          duration: 1.4658129805029452
          responseStatusCode: 6
          functionId: functionId
          requestHeaders:
          - name: name
            value: value
          - name: name
            value: value
          responseHeaders:
          - name: name
            value: value
          - name: name
            value: value
          logs: logs
          requestPath: requestPath
          errors: errors
          $id: $id
          status: status
        - responseBody: responseBody
          requestMethod: requestMethod
          $createdAt: $createdAt
          trigger: trigger
          $permissions:
          - $permissions
          - $permissions
          $updatedAt: $updatedAt
          duration: 1.4658129805029452
          responseStatusCode: 6
          functionId: functionId
          requestHeaders:
          - name: name
            value: value
          - name: name
            value: value
          responseHeaders:
          - name: name
            value: value
          - name: name
            value: value
          logs: logs
          requestPath: requestPath
          errors: errors
          $id: $id
          status: status
      properties:
        total:
          description: Total number of executions documents that matched your query.
          format: int32
          type: integer
          x-example: 5
        executions:
          description: List of executions.
          items:
            $ref: '#/components/schemas/execution'
          type: array
          x-example: ""
      required:
      - executions
      - total
      type: object
      x-konfig-is-used-in-successful-response: true
    countryList:
      description: Countries List
      example:
        total: 0
        countries:
        - code: code
          name: name
        - code: code
          name: name
      properties:
        total:
          description: Total number of countries documents that matched your query.
          format: int32
          type: integer
          x-example: 5
        countries:
          description: List of countries.
          items:
            $ref: '#/components/schemas/country'
          type: array
          x-example: ""
      required:
      - countries
      - total
      type: object
      x-konfig-is-used-in-successful-response: true
    continentList:
      description: Continents List
      example:
        total: 0
        continents:
        - code: code
          name: name
        - code: code
          name: name
      properties:
        total:
          description: Total number of continents documents that matched your query.
          format: int32
          type: integer
          x-example: 5
        continents:
          description: List of continents.
          items:
            $ref: '#/components/schemas/continent'
          type: array
          x-example: ""
      required:
      - continents
      - total
      type: object
      x-konfig-is-used-in-successful-response: true
    languageList:
      description: Languages List
      example:
        total: 0
        languages:
        - nativeName: nativeName
          code: code
          name: name
        - nativeName: nativeName
          code: code
          name: name
      properties:
        total:
          description: Total number of languages documents that matched your query.
          format: int32
          type: integer
          x-example: 5
        languages:
          description: List of languages.
          items:
            $ref: '#/components/schemas/language'
          type: array
          x-example: ""
      required:
      - languages
      - total
      type: object
      x-konfig-is-used-in-successful-response: true
    currencyList:
      description: Currencies List
      example:
        total: 0
        currencies:
        - symbol: symbol
          namePlural: namePlural
          code: code
          symbolNative: symbolNative
          name: name
          rounding: 1.4658129805029452
          decimalDigits: 6
        - symbol: symbol
          namePlural: namePlural
          code: code
          symbolNative: symbolNative
          name: name
          rounding: 1.4658129805029452
          decimalDigits: 6
      properties:
        total:
          description: Total number of currencies documents that matched your query.
          format: int32
          type: integer
          x-example: 5
        currencies:
          description: List of currencies.
          items:
            $ref: '#/components/schemas/currency'
          type: array
          x-example: ""
      required:
      - currencies
      - total
      type: object
      x-konfig-is-used-in-successful-response: true
    phoneList:
      description: Phones List
      example:
        total: 0
        phones:
        - code: code
          countryCode: countryCode
          countryName: countryName
        - code: code
          countryCode: countryCode
          countryName: countryName
      properties:
        total:
          description: Total number of phones documents that matched your query.
          format: int32
          type: integer
          x-example: 5
        phones:
          description: List of phones.
          items:
            $ref: '#/components/schemas/phone'
          type: array
          x-example: ""
      required:
      - phones
      - total
      type: object
      x-konfig-is-used-in-successful-response: true
    localeCodeList:
      description: Locale codes list
      example:
        total: 0
        localeCodes:
        - code: code
          name: name
        - code: code
          name: name
      properties:
        total:
          description: Total number of localeCodes documents that matched your query.
          format: int32
          type: integer
          x-example: 5
        localeCodes:
          description: List of localeCodes.
          items:
            $ref: '#/components/schemas/localeCode'
          type: array
          x-example: ""
      required:
      - localeCodes
      - total
      type: object
      x-konfig-is-used-in-successful-response: true
    document:
      additionalProperties: true
      description: Document
      example:
        $databaseId: $databaseId
        $createdAt: $createdAt
        $collectionId: $collectionId
        $permissions:
        - $permissions
        - $permissions
        $id: $id
        $updatedAt: $updatedAt
      properties:
        $id:
          description: Document ID.
          type: string
          x-example: 5e5ea5c16897e
        $collectionId:
          description: Collection ID.
          type: string
          x-example: 5e5ea5c15117e
        $databaseId:
          description: Database ID.
          type: string
          x-example: 5e5ea5c15117e
        $createdAt:
          description: Document creation date in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        $updatedAt:
          description: Document update date in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        $permissions:
          description: "Document permissions. [Learn more about permissions](https://appwrite.io/docs/permissions)."
          items:
            type: string
          type: array
          x-example:
          - read("any")
      required:
      - $collectionId
      - $createdAt
      - $databaseId
      - $id
      - $permissions
      - $updatedAt
      type: object
      x-konfig-is-used-in-successful-response: true
    log:
      description: Log
      example:
        clientName: clientName
        ip: ip
        userName: userName
        osName: osName
        clientVersion: clientVersion
        userId: userId
        deviceName: deviceName
        osCode: osCode
        clientEngineVersion: clientEngineVersion
        mode: mode
        clientType: clientType
        clientEngine: clientEngine
        osVersion: osVersion
        clientCode: clientCode
        countryCode: countryCode
        userEmail: userEmail
        deviceModel: deviceModel
        time: time
        countryName: countryName
        event: event
        deviceBrand: deviceBrand
      properties:
        event:
          description: Event name.
          type: string
          x-example: account.sessions.create
        userId:
          description: User ID.
          type: string
          x-example: 610fc2f985ee0
        userEmail:
          description: User Email.
          type: string
          x-example: john@appwrite.io
        userName:
          description: User Name.
          type: string
          x-example: John Doe
        mode:
          description: API mode when event triggered.
          type: string
          x-example: admin
        ip:
          description: IP session in use when the session was created.
          type: string
          x-example: 127.0.0.1
        time:
          description: Log creation date in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        osCode:
          description: "Operating system code name. View list of [available options](https://github.com/appwrite/appwrite/blob/master/docs/lists/os.json)."
          type: string
          x-example: Mac
        osName:
          description: Operating system name.
          type: string
          x-example: Mac
        osVersion:
          description: Operating system version.
          type: string
          x-example: Mac
        clientType:
          description: Client type.
          type: string
          x-example: browser
        clientCode:
          description: "Client code name. View list of [available options](https://github.com/appwrite/appwrite/blob/master/docs/lists/clients.json)."
          type: string
          x-example: CM
        clientName:
          description: Client name.
          type: string
          x-example: Chrome Mobile iOS
        clientVersion:
          description: Client version.
          type: string
          x-example: "84.0"
        clientEngine:
          description: Client engine name.
          type: string
          x-example: WebKit
        clientEngineVersion:
          description: Client engine name.
          type: string
          x-example: 605.1.15
        deviceName:
          description: Device name.
          type: string
          x-example: smartphone
        deviceBrand:
          description: Device brand name.
          type: string
          x-example: Google
        deviceModel:
          description: Device model name.
          type: string
          x-example: Nexus 5
        countryCode:
          description: Country two-character ISO 3166-1 alpha code.
          type: string
          x-example: US
        countryName:
          description: Country name.
          type: string
          x-example: United States
      required:
      - clientCode
      - clientEngine
      - clientEngineVersion
      - clientName
      - clientType
      - clientVersion
      - countryCode
      - countryName
      - deviceBrand
      - deviceModel
      - deviceName
      - event
      - ip
      - mode
      - osCode
      - osName
      - osVersion
      - time
      - userEmail
      - userId
      - userName
      type: object
    user:
      description: User
      example:
        hashOptions:
        - ""
        - ""
        accessedAt: accessedAt
        passwordUpdate: passwordUpdate
        emailVerification: true
        $createdAt: $createdAt
        mfa: true
        phoneVerification: true
        targets:
        - identifier: identifier
          providerId: providerId
          name: name
          $createdAt: $createdAt
          userId: userId
          providerType: providerType
          $id: $id
          $updatedAt: $updatedAt
        - identifier: identifier
          providerId: providerId
          name: name
          $createdAt: $createdAt
          userId: userId
          providerType: providerType
          $id: $id
          $updatedAt: $updatedAt
        $updatedAt: $updatedAt
        labels:
        - labels
        - labels
        prefs:
        - null
        - null
        password: password
        phone: phone
        name: name
        registration: registration
        hash: hash
        email: email
        $id: $id
        status: true
      properties:
        $id:
          description: User ID.
          type: string
          x-example: 5e5ea5c16897e
        $createdAt:
          description: User creation date in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        $updatedAt:
          description: User update date in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        name:
          description: User name.
          type: string
          x-example: John Doe
        password:
          description: Hashed user password.
          nullable: true
          type: string
          x-example: "$argon2id$v=19$m=2048,t=4,p=3$aUZjLnliVWRINmFNTWMudg$5S+x+7uA31xFnrHFT47yFwcJeaP0w92L/4LdgrVRXxE"
        hash:
          description: Password hashing algorithm.
          nullable: true
          type: string
          x-example: argon2
        hashOptions:
          description: Password hashing algorithm configuration.
          items: {}
          nullable: true
          type: array
          x-example: {}
        registration:
          description: User registration date in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        status:
          description: User status. Pass `true` for enabled and `false` for disabled.
          type: boolean
          x-example: true
        labels:
          description: Labels for the user.
          items:
            type: string
          type: array
          x-example:
          - vip
        passwordUpdate:
          description: Password update time in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        email:
          description: User email address.
          type: string
          x-example: john@appwrite.io
        phone:
          description: User phone number in E.164 format.
          type: string
          x-example: +4930901820
        emailVerification:
          description: Email verification status.
          type: boolean
          x-example: true
        phoneVerification:
          description: Phone verification status.
          type: boolean
          x-example: true
        mfa:
          description: Multi factor authentication status.
          type: boolean
          x-example: true
        prefs:
          description: User preferences as a key-value object
          items:
            $ref: '#/components/schemas/preferences'
          type: array
          x-example:
            theme: pink
            timezone: UTC
        targets:
          description: "A user-owned message receiver. A single user may have multiple\
            \ e.g. emails, phones, and a browser. Each target is registered with a\
            \ single provider."
          items:
            $ref: '#/components/schemas/target'
          type: array
          x-example: []
        accessedAt:
          description: Most recent access date in ISO 8601 format. This attribute
            is only updated again after 24 hours.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
      required:
      - $createdAt
      - $id
      - $updatedAt
      - accessedAt
      - email
      - emailVerification
      - labels
      - mfa
      - name
      - passwordUpdate
      - phone
      - phoneVerification
      - prefs
      - registration
      - status
      - targets
      type: object
      x-konfig-is-used-in-successful-response: true
    algoMd5:
      description: AlgoMD5
      properties:
        type:
          description: Algo type.
          type: string
          x-example: md5
      required:
      - type
      type: object
    algoSha:
      description: AlgoSHA
      properties:
        type:
          description: Algo type.
          type: string
          x-example: sha
      required:
      - type
      type: object
    algoPhpass:
      description: AlgoPHPass
      properties:
        type:
          description: Algo type.
          type: string
          x-example: phpass
      required:
      - type
      type: object
    algoBcrypt:
      description: AlgoBcrypt
      properties:
        type:
          description: Algo type.
          type: string
          x-example: bcrypt
      required:
      - type
      type: object
    algoScrypt:
      description: AlgoScrypt
      properties:
        type:
          description: Algo type.
          type: string
          x-example: scrypt
        costCpu:
          description: CPU complexity of computed hash.
          format: int32
          type: integer
          x-example: 8
        costMemory:
          description: Memory complexity of computed hash.
          format: int32
          type: integer
          x-example: 14
        costParallel:
          description: Parallelization of computed hash.
          format: int32
          type: integer
          x-example: 1
        length:
          description: Length used to compute hash.
          format: int32
          type: integer
          x-example: 64
      required:
      - costCpu
      - costMemory
      - costParallel
      - length
      - type
      type: object
    algoScryptModified:
      description: AlgoScryptModified
      properties:
        type:
          description: Algo type.
          type: string
          x-example: scryptMod
        salt:
          description: Salt used to compute hash.
          type: string
          x-example: UxLMreBr6tYyjQ==
        saltSeparator:
          description: Separator used to compute hash.
          type: string
          x-example: Bw==
        signerKey:
          description: Key used to compute hash.
          type: string
          x-example: XyEKE9RcTDeLEsL/RjwPDBv/RqDl8fb3gpYEOQaPihbxf1ZAtSOHCjuAAa7Q3oHpCYhXSN9tizHgVOwn6krflQ==
      required:
      - salt
      - saltSeparator
      - signerKey
      - type
      type: object
    algoArgon2:
      description: AlgoArgon2
      properties:
        type:
          description: Algo type.
          type: string
          x-example: argon2
        memoryCost:
          description: Memory used to compute hash.
          format: int32
          type: integer
          x-example: 65536
        timeCost:
          description: Amount of time consumed to compute hash
          format: int32
          type: integer
          x-example: 4
        threads:
          description: Number of threads used to compute hash.
          format: int32
          type: integer
          x-example: 3
      required:
      - memoryCost
      - threads
      - timeCost
      - type
      type: object
    preferences:
      additionalProperties: true
      description: Preferences
      type: object
      x-konfig-is-used-in-successful-response: true
    session:
      description: Session
      example:
        clientName: clientName
        secret: secret
        clientVersion: clientVersion
        deviceName: deviceName
        providerUid: providerUid
        clientEngineVersion: clientEngineVersion
        current: true
        providerAccessToken: providerAccessToken
        clientType: clientType
        osVersion: osVersion
        provider: provider
        countryCode: countryCode
        mfaUpdatedAt: mfaUpdatedAt
        providerRefreshToken: providerRefreshToken
        ip: ip
        $createdAt: $createdAt
        osName: osName
        userId: userId
        providerAccessTokenExpiry: providerAccessTokenExpiry
        osCode: osCode
        factors:
        - factors
        - factors
        clientEngine: clientEngine
        clientCode: clientCode
        expire: expire
        deviceModel: deviceModel
        countryName: countryName
        deviceBrand: deviceBrand
        $id: $id
      properties:
        $id:
          description: Session ID.
          type: string
          x-example: 5e5ea5c16897e
        $createdAt:
          description: Session creation date in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        userId:
          description: User ID.
          type: string
          x-example: 5e5bb8c16897e
        expire:
          description: Session expiration date in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        provider:
          description: Session Provider.
          type: string
          x-example: email
        providerUid:
          description: Session Provider User ID.
          type: string
          x-example: user@example.com
        providerAccessToken:
          description: Session Provider Access Token.
          type: string
          x-example: MTQ0NjJkZmQ5OTM2NDE1ZTZjNGZmZjI3
        providerAccessTokenExpiry:
          description: The date of when the access token expires in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        providerRefreshToken:
          description: Session Provider Refresh Token.
          type: string
          x-example: MTQ0NjJkZmQ5OTM2NDE1ZTZjNGZmZjI3
        ip:
          description: IP in use when the session was created.
          type: string
          x-example: 127.0.0.1
        osCode:
          description: "Operating system code name. View list of [available options](https://github.com/appwrite/appwrite/blob/master/docs/lists/os.json)."
          type: string
          x-example: Mac
        osName:
          description: Operating system name.
          type: string
          x-example: Mac
        osVersion:
          description: Operating system version.
          type: string
          x-example: Mac
        clientType:
          description: Client type.
          type: string
          x-example: browser
        clientCode:
          description: "Client code name. View list of [available options](https://github.com/appwrite/appwrite/blob/master/docs/lists/clients.json)."
          type: string
          x-example: CM
        clientName:
          description: Client name.
          type: string
          x-example: Chrome Mobile iOS
        clientVersion:
          description: Client version.
          type: string
          x-example: "84.0"
        clientEngine:
          description: Client engine name.
          type: string
          x-example: WebKit
        clientEngineVersion:
          description: Client engine name.
          type: string
          x-example: 605.1.15
        deviceName:
          description: Device name.
          type: string
          x-example: smartphone
        deviceBrand:
          description: Device brand name.
          type: string
          x-example: Google
        deviceModel:
          description: Device model name.
          type: string
          x-example: Nexus 5
        countryCode:
          description: Country two-character ISO 3166-1 alpha code.
          type: string
          x-example: US
        countryName:
          description: Country name.
          type: string
          x-example: United States
        current:
          description: Returns true if this the current user session.
          type: boolean
          x-example: true
        factors:
          description: Returns a list of active session factors.
          items:
            type: string
          type: array
          x-example:
          - email
        secret:
          description: Secret used to authenticate the user. Only included if the
            request was made with an API key
          type: string
          x-example: 5e5bb8c16897e
        mfaUpdatedAt:
          description: Most recent date in ISO 8601 format when the session successfully
            passed MFA challenge.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
      required:
      - $createdAt
      - $id
      - clientCode
      - clientEngine
      - clientEngineVersion
      - clientName
      - clientType
      - clientVersion
      - countryCode
      - countryName
      - current
      - deviceBrand
      - deviceModel
      - deviceName
      - expire
      - factors
      - ip
      - mfaUpdatedAt
      - osCode
      - osName
      - osVersion
      - provider
      - providerAccessToken
      - providerAccessTokenExpiry
      - providerRefreshToken
      - providerUid
      - secret
      - userId
      type: object
      x-konfig-is-used-in-successful-response: true
    identity:
      description: Identity
      example:
        providerAccessToken: providerAccessToken
        provider: provider
        providerRefreshToken: providerRefreshToken
        $createdAt: $createdAt
        userId: userId
        providerEmail: providerEmail
        providerAccessTokenExpiry: providerAccessTokenExpiry
        $id: $id
        $updatedAt: $updatedAt
        providerUid: providerUid
      properties:
        $id:
          description: Identity ID.
          type: string
          x-example: 5e5ea5c16897e
        $createdAt:
          description: Identity creation date in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        $updatedAt:
          description: Identity update date in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        userId:
          description: User ID.
          type: string
          x-example: 5e5bb8c16897e
        provider:
          description: Identity Provider.
          type: string
          x-example: email
        providerUid:
          description: ID of the User in the Identity Provider.
          type: string
          x-example: 5e5bb8c16897e
        providerEmail:
          description: Email of the User in the Identity Provider.
          type: string
          x-example: user@example.com
        providerAccessToken:
          description: Identity Provider Access Token.
          type: string
          x-example: MTQ0NjJkZmQ5OTM2NDE1ZTZjNGZmZjI3
        providerAccessTokenExpiry:
          description: The date of when the access token expires in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        providerRefreshToken:
          description: Identity Provider Refresh Token.
          type: string
          x-example: MTQ0NjJkZmQ5OTM2NDE1ZTZjNGZmZjI3
      required:
      - $createdAt
      - $id
      - $updatedAt
      - provider
      - providerAccessToken
      - providerAccessTokenExpiry
      - providerEmail
      - providerRefreshToken
      - providerUid
      - userId
      type: object
    token:
      description: Token
      example:
        phrase: phrase
        expire: expire
        $createdAt: $createdAt
        secret: secret
        userId: userId
        $id: $id
      properties:
        $id:
          description: Token ID.
          type: string
          x-example: bb8ea5c16897e
        $createdAt:
          description: Token creation date in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        userId:
          description: User ID.
          type: string
          x-example: 5e5ea5c168bb8
        secret:
          description: Token secret key. This will return an empty string unless the
            response is returned using an API key or as part of a webhook payload.
          type: string
          x-example: ""
        expire:
          description: Token expiration date in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        phrase:
          description: Security phrase of a token. Empty if security phrase was not
            requested when creating a token. It includes randomly generated phrase
            which is also sent in the external resource such as email.
          type: string
          x-example: Golden Fox
      required:
      - $createdAt
      - $id
      - expire
      - phrase
      - secret
      - userId
      type: object
      x-konfig-is-used-in-successful-response: true
    jwt:
      description: JWT
      example:
        jwt: jwt
      properties:
        jwt:
          description: JWT encoded string.
          type: string
          x-example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      required:
      - jwt
      type: object
      x-konfig-is-used-in-successful-response: true
    locale:
      description: Locale
      example:
        continent: continent
        eu: true
        country: country
        countryCode: countryCode
        ip: ip
        currency: currency
        continentCode: continentCode
      properties:
        ip:
          description: User IP address.
          type: string
          x-example: 127.0.0.1
        countryCode:
          description: "Country code in [ISO 3166-1](http://en.wikipedia.org/wiki/ISO_3166-1)\
            \ two-character format"
          type: string
          x-example: US
        country:
          description: Country name. This field support localization.
          type: string
          x-example: United States
        continentCode:
          description: "Continent code. A two character continent code \"AF\" for\
            \ Africa, \"AN\" for Antarctica, \"AS\" for Asia, \"EU\" for Europe, \"\
            NA\" for North America, \"OC\" for Oceania, and \"SA\" for South America."
          type: string
          x-example: NA
        continent:
          description: Continent name. This field support localization.
          type: string
          x-example: North America
        eu:
          description: True if country is part of the European Union.
          type: boolean
          x-example: false
        currency:
          description: "Currency code in [ISO 4217-1](http://en.wikipedia.org/wiki/ISO_4217)\
            \ three-character format"
          type: string
          x-example: USD
      required:
      - continent
      - continentCode
      - country
      - countryCode
      - currency
      - eu
      - ip
      type: object
      x-konfig-is-used-in-successful-response: true
    localeCode:
      description: LocaleCode
      example:
        code: code
        name: name
      properties:
        code:
          description: "Locale codes in [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)"
          type: string
          x-example: en-us
        name:
          description: Locale name
          type: string
          x-example: US
      required:
      - code
      - name
      type: object
    file:
      description: File
      example:
        signature: signature
        sizeOriginal: 6
        chunksTotal: 1
        name: name
        $createdAt: $createdAt
        bucketId: bucketId
        mimeType: mimeType
        $permissions:
        - $permissions
        - $permissions
        chunksUploaded: 5
        $id: $id
        $updatedAt: $updatedAt
      properties:
        $id:
          description: File ID.
          type: string
          x-example: 5e5ea5c16897e
        bucketId:
          description: Bucket ID.
          type: string
          x-example: 5e5ea5c16897e
        $createdAt:
          description: File creation date in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        $updatedAt:
          description: File update date in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        $permissions:
          description: "File permissions. [Learn more about permissions](https://appwrite.io/docs/permissions)."
          items:
            type: string
          type: array
          x-example:
          - read("any")
        name:
          description: File name.
          type: string
          x-example: Pink.png
        signature:
          description: File MD5 signature.
          type: string
          x-example: 5d529fd02b544198ae075bd57c1762bb
        mimeType:
          description: File mime type.
          type: string
          x-example: image/png
        sizeOriginal:
          description: File original size in bytes.
          format: int32
          type: integer
          x-example: 17890
        chunksTotal:
          description: Total number of chunks available
          format: int32
          type: integer
          x-example: 17890
        chunksUploaded:
          description: Total number of chunks uploaded
          format: int32
          type: integer
          x-example: 17890
      required:
      - $createdAt
      - $id
      - $permissions
      - $updatedAt
      - bucketId
      - chunksTotal
      - chunksUploaded
      - mimeType
      - name
      - signature
      - sizeOriginal
      type: object
      x-konfig-is-used-in-successful-response: true
    team:
      description: Team
      example:
        total: 6
        name: name
        $createdAt: $createdAt
        $id: $id
        $updatedAt: $updatedAt
        prefs:
        - null
        - null
      properties:
        $id:
          description: Team ID.
          type: string
          x-example: 5e5ea5c16897e
        $createdAt:
          description: Team creation date in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        $updatedAt:
          description: Team update date in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        name:
          description: Team name.
          type: string
          x-example: VIP
        total:
          description: Total number of team members.
          format: int32
          type: integer
          x-example: 7
        prefs:
          description: Team preferences as a key-value object
          items:
            $ref: '#/components/schemas/preferences'
          type: array
          x-example:
            theme: pink
            timezone: UTC
      required:
      - $createdAt
      - $id
      - $updatedAt
      - name
      - prefs
      - total
      type: object
      x-konfig-is-used-in-successful-response: true
    membership:
      description: Membership
      example:
        teamName: teamName
        joined: joined
        roles:
        - roles
        - roles
        invited: invited
        $createdAt: $createdAt
        mfa: true
        userName: userName
        userId: userId
        $updatedAt: $updatedAt
        confirm: true
        teamId: teamId
        userEmail: userEmail
        $id: $id
      properties:
        $id:
          description: Membership ID.
          type: string
          x-example: 5e5ea5c16897e
        $createdAt:
          description: Membership creation date in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        $updatedAt:
          description: Membership update date in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        userId:
          description: User ID.
          type: string
          x-example: 5e5ea5c16897e
        userName:
          description: User name.
          type: string
          x-example: John Doe
        userEmail:
          description: User email address.
          type: string
          x-example: john@appwrite.io
        teamId:
          description: Team ID.
          type: string
          x-example: 5e5ea5c16897e
        teamName:
          description: Team name.
          type: string
          x-example: VIP
        invited:
          description: "Date, the user has been invited to join the team in ISO 8601\
            \ format."
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        joined:
          description: "Date, the user has accepted the invitation to join the team\
            \ in ISO 8601 format."
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        confirm:
          description: "User confirmation status, true if the user has joined the\
            \ team or false otherwise."
          type: boolean
          x-example: false
        mfa:
          description: "Multi factor authentication status, true if the user has MFA\
            \ enabled or false otherwise."
          type: boolean
          x-example: false
        roles:
          description: User list of roles
          items:
            type: string
          type: array
          x-example:
          - owner
      required:
      - $createdAt
      - $id
      - $updatedAt
      - confirm
      - invited
      - joined
      - mfa
      - roles
      - teamId
      - teamName
      - userEmail
      - userId
      - userName
      type: object
      x-konfig-is-used-in-successful-response: true
    execution:
      description: Execution
      example:
        responseBody: responseBody
        requestMethod: requestMethod
        $createdAt: $createdAt
        trigger: trigger
        $permissions:
        - $permissions
        - $permissions
        $updatedAt: $updatedAt
        duration: 1.4658129805029452
        responseStatusCode: 6
        functionId: functionId
        requestHeaders:
        - name: name
          value: value
        - name: name
          value: value
        responseHeaders:
        - name: name
          value: value
        - name: name
          value: value
        logs: logs
        requestPath: requestPath
        errors: errors
        $id: $id
        status: status
      properties:
        $id:
          description: Execution ID.
          type: string
          x-example: 5e5ea5c16897e
        $createdAt:
          description: Execution creation date in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        $updatedAt:
          description: Execution upate date in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        $permissions:
          description: Execution roles.
          items:
            type: string
          type: array
          x-example:
          - any
        functionId:
          description: Function ID.
          type: string
          x-example: 5e5ea6g16897e
        trigger:
          description: "The trigger that caused the function to execute. Possible\
            \ values can be: `http`, `schedule`, or `event`."
          type: string
          x-example: http
        status:
          description: "The status of the function execution. Possible values can\
            \ be: `waiting`, `processing`, `completed`, or `failed`."
          type: string
          x-example: processing
        requestMethod:
          description: HTTP request method type.
          type: string
          x-example: GET
        requestPath:
          description: HTTP request path and query.
          type: string
          x-example: /articles?id=5
        requestHeaders:
          description: HTTP response headers as a key-value object. This will return
            only whitelisted headers. All headers are returned if execution is created
            as synchronous.
          items:
            $ref: '#/components/schemas/headers'
          type: array
          x-example:
          - Content-Type: application/json
        responseStatusCode:
          description: HTTP response status code.
          format: int32
          type: integer
          x-example: 200
        responseBody:
          description: HTTP response body. This will return empty unless execution
            is created as synchronous.
          type: string
          x-example: Developers are awesome.
        responseHeaders:
          description: HTTP response headers as a key-value object. This will return
            only whitelisted headers. All headers are returned if execution is created
            as synchronous.
          items:
            $ref: '#/components/schemas/headers'
          type: array
          x-example:
          - Content-Type: application/json
        logs:
          description: "Function logs. Includes the last 4,000 characters. This will\
            \ return an empty string unless the response is returned using an API\
            \ key or as part of a webhook payload."
          type: string
          x-example: ""
        errors:
          description: "Function errors. Includes the last 4,000 characters. This\
            \ will return an empty string unless the response is returned using an\
            \ API key or as part of a webhook payload."
          type: string
          x-example: ""
        duration:
          description: Function execution duration in seconds.
          format: double
          type: number
          x-example: 0.4
      required:
      - $createdAt
      - $id
      - $permissions
      - $updatedAt
      - duration
      - errors
      - functionId
      - logs
      - requestHeaders
      - requestMethod
      - requestPath
      - responseBody
      - responseHeaders
      - responseStatusCode
      - status
      - trigger
      type: object
      x-konfig-is-used-in-successful-response: true
    country:
      description: Country
      example:
        code: code
        name: name
      properties:
        name:
          description: Country name.
          type: string
          x-example: United States
        code:
          description: Country two-character ISO 3166-1 alpha code.
          type: string
          x-example: US
      required:
      - code
      - name
      type: object
    continent:
      description: Continent
      example:
        code: code
        name: name
      properties:
        name:
          description: Continent name.
          type: string
          x-example: Europe
        code:
          description: Continent two letter code.
          type: string
          x-example: EU
      required:
      - code
      - name
      type: object
    language:
      description: Language
      example:
        nativeName: nativeName
        code: code
        name: name
      properties:
        name:
          description: Language name.
          type: string
          x-example: Italian
        code:
          description: Language two-character ISO 639-1 codes.
          type: string
          x-example: it
        nativeName:
          description: Language native name.
          type: string
          x-example: Italiano
      required:
      - code
      - name
      - nativeName
      type: object
    currency:
      description: Currency
      example:
        symbol: symbol
        namePlural: namePlural
        code: code
        symbolNative: symbolNative
        name: name
        rounding: 1.4658129805029452
        decimalDigits: 6
      properties:
        symbol:
          description: Currency symbol.
          type: string
          x-example: $
        name:
          description: Currency name.
          type: string
          x-example: US dollar
        symbolNative:
          description: Currency native symbol.
          type: string
          x-example: $
        decimalDigits:
          description: Number of decimal digits.
          format: int32
          type: integer
          x-example: 2
        rounding:
          description: Currency digit rounding.
          format: double
          type: number
          x-example: 0
        code:
          description: "Currency code in [ISO 4217-1](http://en.wikipedia.org/wiki/ISO_4217)\
            \ three-character format."
          type: string
          x-example: USD
        namePlural:
          description: Currency plural name
          type: string
          x-example: US dollars
      required:
      - code
      - decimalDigits
      - name
      - namePlural
      - rounding
      - symbol
      - symbolNative
      type: object
    phone:
      description: Phone
      example:
        code: code
        countryCode: countryCode
        countryName: countryName
      properties:
        code:
          description: Phone code.
          type: string
          x-example: +1
        countryCode:
          description: Country two-character ISO 3166-1 alpha code.
          type: string
          x-example: US
        countryName:
          description: Country name.
          type: string
          x-example: United States
      required:
      - code
      - countryCode
      - countryName
      type: object
    headers:
      description: Headers
      example:
        name: name
        value: value
      properties:
        name:
          description: Header name.
          type: string
          x-example: Content-Type
        value:
          description: Header value.
          type: string
          x-example: application/json
      required:
      - name
      - value
      type: object
    mfaChallenge:
      description: MFA Challenge
      example:
        expire: expire
        $createdAt: $createdAt
        userId: userId
        $id: $id
      properties:
        $id:
          description: Token ID.
          type: string
          x-example: bb8ea5c16897e
        $createdAt:
          description: Token creation date in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        userId:
          description: User ID.
          type: string
          x-example: 5e5ea5c168bb8
        expire:
          description: Token expiration date in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
      required:
      - $createdAt
      - $id
      - expire
      - userId
      type: object
      x-konfig-is-used-in-successful-response: true
    mfaRecoveryCodes:
      description: MFA Recovery Codes
      example:
        recoveryCodes:
        - recoveryCodes
        - recoveryCodes
      properties:
        recoveryCodes:
          description: Recovery codes.
          items:
            type: string
          type: array
          x-example:
          - a3kf0-s0cl2
          - s0co1-as98s
      required:
      - recoveryCodes
      type: object
      x-konfig-is-used-in-successful-response: true
    mfaType:
      description: MFAType
      example:
        secret: secret
        uri: uri
      properties:
        secret:
          description: Secret token used for TOTP factor.
          type: string
          x-example: true
        uri:
          description: URI for authenticator apps.
          type: string
          x-example: true
      required:
      - secret
      - uri
      type: object
      x-konfig-is-used-in-successful-response: true
    mfaFactors:
      description: MFAFactors
      example:
        totp: true
        phone: true
        email: true
      properties:
        totp:
          description: TOTP
          type: boolean
          x-example: true
        phone:
          description: Phone
          type: boolean
          x-example: true
        email:
          description: Email
          type: boolean
          x-example: true
      required:
      - email
      - phone
      - totp
      type: object
      x-konfig-is-used-in-successful-response: true
    subscriber:
      description: Subscriber
      example:
        topicId: topicId
        targetId: targetId
        $createdAt: $createdAt
        userName: userName
        userId: userId
        providerType: providerType
        $id: $id
        $updatedAt: $updatedAt
        target:
        - identifier: identifier
          providerId: providerId
          name: name
          $createdAt: $createdAt
          userId: userId
          providerType: providerType
          $id: $id
          $updatedAt: $updatedAt
        - identifier: identifier
          providerId: providerId
          name: name
          $createdAt: $createdAt
          userId: userId
          providerType: providerType
          $id: $id
          $updatedAt: $updatedAt
      properties:
        $id:
          description: Subscriber ID.
          type: string
          x-example: "259125845563242502"
        $createdAt:
          description: Subscriber creation time in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        $updatedAt:
          description: Subscriber update date in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        targetId:
          description: Target ID.
          type: string
          x-example: "259125845563242502"
        target:
          description: Target.
          items:
            $ref: '#/components/schemas/target'
          type: array
          x-example:
            $id: "259125845563242502"
            $createdAt: 2020-10-15T06:38:00.000+00:00
            $updatedAt: 2020-10-15T06:38:00.000+00:00
            providerType: email
            providerId: "259125845563242502"
            name: ageon-app-email
            identifier: random-mail@email.org
            userId: 5e5ea5c16897e
        userId:
          description: Topic ID.
          type: string
          x-example: 5e5ea5c16897e
        userName:
          description: User Name.
          type: string
          x-example: Aegon Targaryen
        topicId:
          description: Topic ID.
          type: string
          x-example: "259125845563242502"
        providerType:
          description: "The target provider type. Can be one of the following: `email`,\
            \ `sms` or `push`."
          type: string
          x-example: email
      required:
      - $createdAt
      - $id
      - $updatedAt
      - providerType
      - target
      - targetId
      - topicId
      - userId
      - userName
      type: object
      x-konfig-is-used-in-successful-response: true
    target:
      description: Target
      example:
        identifier: identifier
        providerId: providerId
        name: name
        $createdAt: $createdAt
        userId: userId
        providerType: providerType
        $id: $id
        $updatedAt: $updatedAt
      properties:
        $id:
          description: Target ID.
          type: string
          x-example: "259125845563242502"
        $createdAt:
          description: Target creation time in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        $updatedAt:
          description: Target update date in ISO 8601 format.
          type: string
          x-example: 2020-10-15T06:38:00.000+00:00
        name:
          description: Target Name.
          type: string
          x-example: Aegon apple token
        userId:
          description: User ID.
          type: string
          x-example: "259125845563242502"
        providerId:
          description: Provider ID.
          nullable: true
          type: string
          x-example: "259125845563242502"
        providerType:
          description: "The target provider type. Can be one of the following: `email`,\
            \ `sms` or `push`."
          type: string
          x-example: email
        identifier:
          description: The target identifier.
          type: string
          x-example: token
      required:
      - $createdAt
      - $id
      - $updatedAt
      - identifier
      - name
      - providerType
      - userId
      type: object
      x-konfig-is-used-in-successful-response: true
    AccountRegisterUserRequest:
      example:
        password: password
        name: name
        userId: userId
        email: email
      properties:
        userId:
          description: "User ID. Choose a custom ID or generate a random ID with `ID.unique()`.\
            \ Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore. Can't\
            \ start with a special char. Max length is 36 chars."
          type: string
          x-example: <USER_ID>
        email:
          description: User email.
          type: string
          x-example: email@example.com
        password:
          description: New user password. Must be between 8 and 256 chars.
          type: string
        name:
          description: "User name. Max length: 128 chars."
          type: string
          x-example: <NAME>
      required:
      - email
      - password
      - userId
      type: object
    AccountUpdateUserEmailRequest:
      example:
        password: password
        email: email
      properties:
        email:
          description: User email.
          type: string
          x-example: email@example.com
        password:
          description: User password. Must be at least 8 chars.
          type: string
          x-example: password
      required:
      - email
      - password
      type: object
    AccountUpdateMfaStatusRequest:
      example:
        mfa: true
      properties:
        mfa:
          description: Enable or disable MFA.
          type: boolean
          x-example: false
      required:
      - mfa
      type: object
    AccountDeleteAuthenticatorRequest:
      example:
        otp: otp
      properties:
        otp:
          description: Valid verification token.
          type: string
          x-example: <OTP>
      required:
      - otp
      type: object
    AccountVerifyAuthenticatorRequest:
      example:
        otp: otp
      properties:
        otp:
          description: Valid verification token.
          type: string
          x-example: <OTP>
      required:
      - otp
      type: object
    AccountCreateMfaChallengeRequest:
      example:
        factor: email
      properties:
        factor:
          description: "Factor used for verification. Must be one of following: `email`,\
            \ `phone`, `totp`, `recoveryCode`."
          enum:
          - email
          - phone
          - totp
          - recoverycode
          type: string
          x-example: email
          x-enum-name: AuthenticationFactor
          x-enum-keys: []
      required:
      - factor
      type: object
    AccountCompleteMfaChallengeRequest:
      example:
        challengeId: challengeId
        otp: otp
      properties:
        challengeId:
          description: ID of the challenge.
          type: string
          x-example: <CHALLENGE_ID>
        otp:
          description: Valid verification token.
          type: string
          x-example: <OTP>
      required:
      - challengeId
      - otp
      type: object
    AccountUpdateNameOperationRequest:
      example:
        name: name
      properties:
        name:
          description: "User name. Max length: 128 chars."
          type: string
          x-example: <NAME>
      required:
      - name
      type: object
    AccountUpdatePasswordRequest:
      example:
        password: password
        oldPassword: oldPassword
      properties:
        password:
          description: New user password. Must be at least 8 chars.
          type: string
        oldPassword:
          description: Current user password. Must be at least 8 chars.
          type: string
          x-example: password
      required:
      - password
      type: object
    AccountUpdatePhoneRequest:
      example:
        password: password
        phone: phone
      properties:
        phone:
          description: "Phone number. Format this number with a leading '+' and a\
            \ country code, e.g., +16175551212."
          type: string
          x-example: +12065550100
        password:
          description: User password. Must be at least 8 chars.
          type: string
          x-example: password
      required:
      - password
      - phone
      type: object
    AccountUpdatePreferencesRequest:
      example:
        prefs: "{}"
      properties:
        prefs:
          description: Prefs key-value JSON object.
          type: object
          x-example: "{}"
      required:
      - prefs
      type: object
    AccountCreatePasswordRecoveryRequest:
      example:
        email: email
        url: url
      properties:
        email:
          description: User email.
          type: string
          x-example: email@example.com
        url:
          description: "URL to redirect the user back to your app from the recovery\
            \ email. Only URLs from hostnames in your project platform list are allowed.\
            \ This requirement helps to prevent an [open redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html)\
            \ attack against your project API."
          type: string
          x-example: https://example.com
      required:
      - email
      - url
      type: object
    AccountCompletePasswordRecoveryRequest:
      example:
        password: password
        secret: secret
        userId: userId
      properties:
        userId:
          description: User ID.
          type: string
          x-example: <USER_ID>
        secret:
          description: Valid reset token.
          type: string
          x-example: <SECRET>
        password:
          description: New user password. Must be between 8 and 256 chars.
          type: string
      required:
      - password
      - secret
      - userId
      type: object
    AccountCreateEmailPasswordSessionRequest:
      example:
        password: password
        email: email
      properties:
        email:
          description: User email.
          type: string
          x-example: email@example.com
        password:
          description: User password. Must be at least 8 chars.
          type: string
          x-example: password
      required:
      - email
      - password
      type: object
    AccountUpdateMagicUrlSessionRequest:
      example:
        secret: secret
        userId: userId
      properties:
        userId:
          description: "User ID. Choose a custom ID or generate a random ID with `ID.unique()`.\
            \ Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore. Can't\
            \ start with a special char. Max length is 36 chars."
          type: string
          x-example: <USER_ID>
        secret:
          description: Valid verification token.
          type: string
          x-example: <SECRET>
      required:
      - secret
      - userId
      type: object
    AccountUpdatePhoneSessionRequest:
      example:
        secret: secret
        userId: userId
      properties:
        userId:
          description: "User ID. Choose a custom ID or generate a random ID with `ID.unique()`.\
            \ Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore. Can't\
            \ start with a special char. Max length is 36 chars."
          type: string
          x-example: <USER_ID>
        secret:
          description: Valid verification token.
          type: string
          x-example: <SECRET>
      required:
      - secret
      - userId
      type: object
    AccountCreateSessionFromTokenRequest:
      example:
        secret: secret
        userId: userId
      properties:
        userId:
          description: "User ID. Choose a custom ID or generate a random ID with `ID.unique()`.\
            \ Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore. Can't\
            \ start with a special char. Max length is 36 chars."
          type: string
          x-example: <USER_ID>
        secret:
          description: "Secret of a token generated by login methods. For example,\
            \ the `createMagicURLToken` or `createPhoneToken` methods."
          type: string
          x-example: <SECRET>
      required:
      - secret
      - userId
      type: object
    AccountCreatePushTargetRequest:
      example:
        identifier: identifier
        targetId: targetId
        providerId: providerId
      properties:
        targetId:
          description: "Target ID. Choose a custom ID or generate a random ID with\
            \ `ID.unique()`. Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore.\
            \ Can't start with a special char. Max length is 36 chars."
          type: string
          x-example: <TARGET_ID>
        identifier:
          description: "The target identifier (token, email, phone etc.)"
          type: string
          x-example: <IDENTIFIER>
        providerId:
          description: Provider ID. Message will be sent to this target from the specified
            provider ID. If no provider ID is set the first setup provider will be
            used.
          type: string
          x-example: <PROVIDER_ID>
      required:
      - identifier
      - targetId
      type: object
    AccountUpdatePushTargetRequest:
      example:
        identifier: identifier
      properties:
        identifier:
          description: "The target identifier (token, email, phone etc.)"
          type: string
          x-example: <IDENTIFIER>
      required:
      - identifier
      type: object
    AccountCreateEmailTokenRequest:
      example:
        phrase: true
        userId: userId
        email: email
      properties:
        userId:
          description: "User ID. Choose a custom ID or generate a random ID with `ID.unique()`.\
            \ Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore. Can't\
            \ start with a special char. Max length is 36 chars."
          type: string
          x-example: <USER_ID>
        email:
          description: User email.
          type: string
          x-example: email@example.com
        phrase:
          description: "Toggle for security phrase. If enabled, email will be send\
            \ with a randomly generated phrase and the phrase will also be included\
            \ in the response. Confirming phrases match increases the security of\
            \ your authentication flow."
          type: boolean
          x-example: false
      required:
      - email
      - userId
      type: object
    AccountCreateMagicUrlTokenRequest:
      example:
        phrase: true
        userId: userId
        email: email
        url: url
      properties:
        userId:
          description: "Unique Id. Choose a custom ID or generate a random ID with\
            \ `ID.unique()`. Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore.\
            \ Can't start with a special char. Max length is 36 chars."
          type: string
          x-example: <USER_ID>
        email:
          description: User email.
          type: string
          x-example: email@example.com
        url:
          description: "URL to redirect the user back to your app from the magic URL\
            \ login. Only URLs from hostnames in your project platform list are allowed.\
            \ This requirement helps to prevent an [open redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html)\
            \ attack against your project API."
          type: string
          x-example: https://example.com
        phrase:
          description: "Toggle for security phrase. If enabled, email will be send\
            \ with a randomly generated phrase and the phrase will also be included\
            \ in the response. Confirming phrases match increases the security of\
            \ your authentication flow."
          type: boolean
          x-example: false
      required:
      - email
      - userId
      type: object
    AccountCreatePhoneTokenRequest:
      example:
        phone: phone
        userId: userId
      properties:
        userId:
          description: "Unique Id. Choose a custom ID or generate a random ID with\
            \ `ID.unique()`. Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore.\
            \ Can't start with a special char. Max length is 36 chars."
          type: string
          x-example: <USER_ID>
        phone:
          description: "Phone number. Format this number with a leading '+' and a\
            \ country code, e.g., +16175551212."
          type: string
          x-example: +12065550100
      required:
      - phone
      - userId
      type: object
    AccountCreateEmailVerificationRequest:
      example:
        url: url
      properties:
        url:
          description: "URL to redirect the user back to your app from the verification\
            \ email. Only URLs from hostnames in your project platform list are allowed.\
            \ This requirement helps to prevent an [open redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html)\
            \ attack against your project API."
          type: string
          x-example: https://example.com
      required:
      - url
      type: object
    AccountCreateEmailVerificationRequest1:
      example:
        secret: secret
        userId: userId
      properties:
        userId:
          description: User ID.
          type: string
          x-example: <USER_ID>
        secret:
          description: Valid verification token.
          type: string
          x-example: <SECRET>
      required:
      - secret
      - userId
      type: object
    AccountConfirmPhoneVerificationRequest:
      example:
        secret: secret
        userId: userId
      properties:
        userId:
          description: User ID.
          type: string
          x-example: <USER_ID>
        secret:
          description: Valid verification token.
          type: string
          x-example: <SECRET>
      required:
      - secret
      - userId
      type: object
    DatabasesCreateDocumentRequest:
      example:
        data: "{}"
        permissions:
        - permissions
        - permissions
        documentId: documentId
      properties:
        documentId:
          description: "Document ID. Choose a custom ID or generate a random ID with\
            \ `ID.unique()`. Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore.\
            \ Can't start with a special char. Max length is 36 chars."
          type: string
          x-example: <DOCUMENT_ID>
        data:
          description: Document data as JSON object.
          type: object
          x-example: "{}"
        permissions:
          description: "An array of permissions strings. By default, only the current\
            \ user is granted all permissions. [Learn more about permissions](https://appwrite.io/docs/permissions)."
          items:
            type: string
          type: array
          x-example: "[\"read(\"any\")\"]"
      required:
      - data
      - documentId
      type: object
    DatabasesUpdateDocumentByIdRequest:
      example:
        data: "{}"
        permissions:
        - permissions
        - permissions
      properties:
        data:
          description: Document data as JSON object. Include only attribute and value
            pairs to be updated.
          type: object
          x-example: "{}"
        permissions:
          description: "An array of permissions strings. By default, the current permissions\
            \ are inherited. [Learn more about permissions](https://appwrite.io/docs/permissions)."
          items:
            type: string
          type: array
          x-example: "[\"read(\"any\")\"]"
      type: object
    FunctionsTriggerFunctionExecutionRequest:
      example:
        async: true
        path: path
        headers: "{}"
        method: GET
        body: body
      properties:
        body:
          description: HTTP body of execution. Default value is empty string.
          type: string
          x-example: <BODY>
        async:
          description: Execute code in the background. Default value is false.
          type: boolean
          x-example: false
        path:
          description: HTTP path of execution. Path can include query params. Default
            value is /
          type: string
          x-example: <PATH>
        method:
          description: HTTP method of execution. Default value is GET.
          enum:
          - GET
          - POST
          - PUT
          - PATCH
          - DELETE
          - OPTIONS
          type: string
          x-example: GET
          x-enum-name: ExecutionMethod
          x-enum-keys: []
        headers:
          description: HTTP headers of execution. Defaults to empty.
          type: object
          x-example: "{}"
      type: object
    MessagingAddNewSubscriberRequest:
      example:
        targetId: targetId
        subscriberId: subscriberId
      properties:
        subscriberId:
          description: Subscriber ID. Choose a custom Subscriber ID or a new Subscriber
            ID.
          type: string
          x-example: <SUBSCRIBER_ID>
        targetId:
          description: Target ID. The target ID to link to the specified Topic ID.
          type: string
          x-example: <TARGET_ID>
      required:
      - subscriberId
      - targetId
      type: object
    StorageCreateFileRequest:
      properties:
        fileId:
          description: "File ID. Choose a custom ID or generate a random ID with `ID.unique()`.\
            \ Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore. Can't\
            \ start with a special char. Max length is 36 chars."
          type: string
          x-example: <FILE_ID>
          x-upload-id: true
        file:
          description: "Binary file. Appwrite SDKs provide helpers to handle file\
            \ input. [Learn about file input](https://appwrite.io/docs/storage#file-input)."
          type: string
        permissions:
          description: "An array of permission strings. By default, only the current\
            \ user is granted all permissions. [Learn more about permissions](https://appwrite.io/docs/permissions)."
          items:
            type: string
          type: array
          x-example: "[\"read(\"any\")\"]"
      required:
      - file
      - fileId
      type: object
    StorageUpdateFileByIdRequest:
      example:
        permissions:
        - permissions
        - permissions
        name: name
      properties:
        name:
          description: Name of the file
          type: string
          x-example: <NAME>
        permissions:
          description: "An array of permission string. By default, the current permissions\
            \ are inherited. [Learn more about permissions](https://appwrite.io/docs/permissions)."
          items:
            type: string
          type: array
          x-example: "[\"read(\"any\")\"]"
      type: object
    TeamsCreateNewTeamRequest:
      example:
        teamId: teamId
        roles:
        - roles
        - roles
        name: name
      properties:
        teamId:
          description: "Team ID. Choose a custom ID or generate a random ID with `ID.unique()`.\
            \ Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore. Can't\
            \ start with a special char. Max length is 36 chars."
          type: string
          x-example: <TEAM_ID>
        name:
          description: "Team name. Max length: 128 chars."
          type: string
          x-example: <NAME>
        roles:
          description: "Array of strings. Use this param to set the roles in the team\
            \ for the user who created it. The default role is **owner**. A role can\
            \ be any string. Learn more about [roles and permissions](https://appwrite.io/docs/permissions).\
            \ Maximum of 100 roles are allowed, each 32 characters long."
          items:
            type: string
          type: array
      required:
      - name
      - teamId
      type: object
    TeamsUpdateNameByIdRequest:
      example:
        name: name
      properties:
        name:
          description: "New team name. Max length: 128 chars."
          type: string
          x-example: <NAME>
      required:
      - name
      type: object
    TeamsCreateMembershipRequest:
      example:
        phone: phone
        roles:
        - roles
        - roles
        name: name
        userId: userId
        email: email
        url: url
      properties:
        email:
          description: Email of the new team member.
          type: string
          x-example: email@example.com
        userId:
          description: ID of the user to be added to a team.
          type: string
          x-example: <USER_ID>
        phone:
          description: "Phone number. Format this number with a leading '+' and a\
            \ country code, e.g., +16175551212."
          type: string
          x-example: +12065550100
        roles:
          description: "Array of strings. Use this param to set the user roles in\
            \ the team. A role can be any string. Learn more about [roles and permissions](https://appwrite.io/docs/permissions).\
            \ Maximum of 100 roles are allowed, each 32 characters long."
          items:
            type: string
          type: array
        url:
          description: "URL to redirect the user back to your app from the invitation\
            \ email.  Only URLs from hostnames in your project platform list are allowed.\
            \ This requirement helps to prevent an [open redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html)\
            \ attack against your project API."
          type: string
          x-example: https://example.com
        name:
          description: "Name of the new team member. Max length: 128 chars."
          type: string
          x-example: <NAME>
      required:
      - roles
      type: object
    TeamsUpdateMembershipRolesRequest:
      example:
        roles:
        - roles
        - roles
      properties:
        roles:
          description: "An array of strings. Use this param to set the user's roles\
            \ in the team. A role can be any string. Learn more about [roles and permissions](https://appwrite.io/docs/permissions).\
            \ Maximum of 100 roles are allowed, each 32 characters long."
          items:
            type: string
          type: array
      required:
      - roles
      type: object
    TeamsUpdateMembershipStatusRequest:
      example:
        secret: secret
        userId: userId
      properties:
        userId:
          description: User ID.
          type: string
          x-example: <USER_ID>
        secret:
          description: Secret key.
          type: string
          x-example: <SECRET>
      required:
      - secret
      - userId
      type: object
    TeamsUpdatePrefsByIdRequest:
      example:
        prefs: "{}"
      properties:
        prefs:
          description: Prefs key-value JSON object.
          type: object
          x-example: "{}"
      required:
      - prefs
      type: object
    konfig-generated-schema-paths--account-identities-get-parameters-0-schema:
      items:
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-paths--account-logs-get-parameters-0-schema:
      items:
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-paths--account-sessions-oauth2-provider-get-parameters-1-schema:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--account-sessions-oauth2-provider-get-parameters-2-schema:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--account-sessions-oauth2-provider-get-parameters-3-schema:
      items:
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-paths--account-tokens-oauth2-provider-get-parameters-1-schema:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--account-tokens-oauth2-provider-get-parameters-2-schema:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--account-tokens-oauth2-provider-get-parameters-3-schema:
      items:
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-paths--avatars-browsers-code-get-parameters-1-schema:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--avatars-browsers-code-get-parameters-2-schema:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--avatars-browsers-code-get-parameters-3-schema:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--avatars-credit-cards-code-get-parameters-1-schema:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--avatars-credit-cards-code-get-parameters-2-schema:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--avatars-credit-cards-code-get-parameters-3-schema:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--avatars-flags-code-get-parameters-1-schema:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--avatars-flags-code-get-parameters-2-schema:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--avatars-flags-code-get-parameters-3-schema:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--avatars-image-get-parameters-1-schema:
      example: 400
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--avatars-image-get-parameters-2-schema:
      example: 400
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--avatars-initials-get-parameters-0-schema:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--avatars-initials-get-parameters-1-schema:
      example: 500
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--avatars-initials-get-parameters-2-schema:
      example: 500
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--avatars-initials-get-parameters-3-schema:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--avatars-qr-get-parameters-1-schema:
      example: 400
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--avatars-qr-get-parameters-2-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--avatars-qr-get-parameters-3-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--databases-databaseId-collections-collectionId-documents-get-parameters-2-schema:
      items:
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-paths--databases-databaseId-collections-collectionId-documents-documentId-get-parameters-3-schema:
      items:
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-paths--functions-functionId-executions-get-parameters-1-schema:
      items:
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-paths--functions-functionId-executions-get-parameters-2-schema:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--storage-buckets-bucketId-files-get-parameters-1-schema:
      items:
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-paths--storage-buckets-bucketId-files-get-parameters-2-schema:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-2-schema:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-3-schema:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-4-schema:
      example: center
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-5-schema:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-6-schema:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-7-schema:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-8-schema:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-9-schema:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-10-schema:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-11-schema:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-12-schema:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--teams-get-parameters-0-schema:
      items:
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-paths--teams-get-parameters-1-schema:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--teams-teamId-memberships-get-parameters-1-schema:
      items:
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-paths--teams-teamId-memberships-get-parameters-2-schema:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-single-parameter-schema-get--account:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--account:
      properties:
        userId:
          description: "User ID. Choose a custom ID or generate a random ID with `ID.unique()`.\
            \ Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore. Can't\
            \ start with a special char. Max length is 36 chars."
          type: string
          x-example: <USER_ID>
        email:
          description: User email.
          type: string
          x-example: email@example.com
        password:
          description: New user password. Must be between 8 and 256 chars.
          type: string
        name:
          description: "User name. Max length: 128 chars."
          type: string
          x-example: <NAME>
      required:
      - email
      - password
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-patch--account-email:
      properties:
        email:
          description: User email.
          type: string
          x-example: email@example.com
        password:
          description: User password. Must be at least 8 chars.
          type: string
          x-example: password
      required:
      - email
      - password
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--account-identities:
      properties:
        queries:
          default: []
          example: []
          items:
            type: string
          type: array
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-paths--account-identities-get-parameters-0-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - queries
    konfig-generated-schema-single-parameter-schema-delete--account-identities-identityId:
      properties:
        identityId:
          type: string
          x-example: <IDENTITY_ID>
      required:
      - identityId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - identityId
    konfig-generated-schema-single-parameter-schema-post--account-jwt:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--account-logs:
      properties:
        queries:
          default: []
          example: []
          items:
            type: string
          type: array
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-paths--account-logs-get-parameters-0-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - queries
    konfig-generated-schema-single-parameter-schema-patch--account-mfa:
      properties:
        mfa:
          description: Enable or disable MFA.
          type: boolean
          x-example: false
      required:
      - mfa
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--account-mfa-authenticators-type:
      properties:
        type:
          enum:
          - totp
          type: string
          x-example: totp
          x-enum-name: AuthenticatorType
          x-enum-keys: []
        otp:
          description: Valid verification token.
          type: string
          x-example: <OTP>
      required:
      - otp
      - type
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - type
    konfig-generated-schema-single-parameter-schema-post--account-mfa-authenticators-type:
      properties:
        type:
          enum:
          - totp
          type: string
          x-example: totp
          x-enum-name: AuthenticatorType
          x-enum-keys: []
      required:
      - type
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - type
    konfig-generated-schema-single-parameter-schema-put--account-mfa-authenticators-type:
      properties:
        type:
          enum:
          - totp
          type: string
          x-example: totp
          x-enum-name: AuthenticatorType
          x-enum-keys: []
        otp:
          description: Valid verification token.
          type: string
          x-example: <OTP>
      required:
      - otp
      - type
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - type
    konfig-generated-schema-single-parameter-schema-post--account-mfa-challenge:
      properties:
        factor:
          description: "Factor used for verification. Must be one of following: `email`,\
            \ `phone`, `totp`, `recoveryCode`."
          enum:
          - email
          - phone
          - totp
          - recoverycode
          type: string
          x-example: email
          x-enum-name: AuthenticationFactor
          x-enum-keys: []
      required:
      - factor
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--account-mfa-challenge:
      properties:
        challengeId:
          description: ID of the challenge.
          type: string
          x-example: <CHALLENGE_ID>
        otp:
          description: Valid verification token.
          type: string
          x-example: <OTP>
      required:
      - challengeId
      - otp
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--account-mfa-factors:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--account-mfa-recovery-codes:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-patch--account-mfa-recovery-codes:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--account-mfa-recovery-codes:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-patch--account-name:
      properties:
        name:
          description: "User name. Max length: 128 chars."
          type: string
          x-example: <NAME>
      required:
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-patch--account-password:
      properties:
        password:
          description: New user password. Must be at least 8 chars.
          type: string
        oldPassword:
          description: Current user password. Must be at least 8 chars.
          type: string
          x-example: password
      required:
      - password
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-patch--account-phone:
      properties:
        phone:
          description: "Phone number. Format this number with a leading '+' and a\
            \ country code, e.g., +16175551212."
          type: string
          x-example: +12065550100
        password:
          description: User password. Must be at least 8 chars.
          type: string
          x-example: password
      required:
      - password
      - phone
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--account-prefs:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-patch--account-prefs:
      properties:
        prefs:
          description: Prefs key-value JSON object.
          type: object
          x-example: "{}"
      required:
      - prefs
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--account-recovery:
      properties:
        email:
          description: User email.
          type: string
          x-example: email@example.com
        url:
          description: "URL to redirect the user back to your app from the recovery\
            \ email. Only URLs from hostnames in your project platform list are allowed.\
            \ This requirement helps to prevent an [open redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html)\
            \ attack against your project API."
          type: string
          x-example: https://example.com
      required:
      - email
      - url
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--account-recovery:
      properties:
        userId:
          description: User ID.
          type: string
          x-example: <USER_ID>
        secret:
          description: Valid reset token.
          type: string
          x-example: <SECRET>
        password:
          description: New user password. Must be between 8 and 256 chars.
          type: string
      required:
      - password
      - secret
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--account-sessions:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--account-sessions:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--account-sessions-anonymous:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--account-sessions-email:
      properties:
        email:
          description: User email.
          type: string
          x-example: email@example.com
        password:
          description: User password. Must be at least 8 chars.
          type: string
          x-example: password
      required:
      - email
      - password
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--account-sessions-magic-url:
      properties:
        userId:
          description: "User ID. Choose a custom ID or generate a random ID with `ID.unique()`.\
            \ Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore. Can't\
            \ start with a special char. Max length is 36 chars."
          type: string
          x-example: <USER_ID>
        secret:
          description: Valid verification token.
          type: string
          x-example: <SECRET>
      required:
      - secret
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--account-sessions-oauth2-provider:
      properties:
        provider:
          enum:
          - amazon
          - apple
          - auth0
          - authentik
          - autodesk
          - bitbucket
          - bitly
          - box
          - dailymotion
          - discord
          - disqus
          - dropbox
          - etsy
          - facebook
          - github
          - gitlab
          - google
          - linkedin
          - microsoft
          - notion
          - oidc
          - okta
          - paypal
          - paypalSandbox
          - podio
          - salesforce
          - slack
          - spotify
          - stripe
          - tradeshift
          - tradeshiftBox
          - twitch
          - wordpress
          - yahoo
          - yammer
          - yandex
          - zoho
          - zoom
          - mock
          type: string
          x-example: amazon
          x-enum-name: OAuthProvider
          x-enum-keys: []
        success:
          default: ""
          example: ""
          format: url
          type: string
          x-example: https://example.com
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--account-sessions-oauth2-provider-get-parameters-1-schema
        failure:
          default: ""
          example: ""
          format: url
          type: string
          x-example: https://example.com
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--account-sessions-oauth2-provider-get-parameters-2-schema
        scopes:
          default: []
          example: []
          items:
            type: string
          type: array
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-paths--account-sessions-oauth2-provider-get-parameters-3-schema
      required:
      - provider
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - provider
      - success
      - failure
      - scopes
    konfig-generated-schema-single-parameter-schema-put--account-sessions-phone:
      properties:
        userId:
          description: "User ID. Choose a custom ID or generate a random ID with `ID.unique()`.\
            \ Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore. Can't\
            \ start with a special char. Max length is 36 chars."
          type: string
          x-example: <USER_ID>
        secret:
          description: Valid verification token.
          type: string
          x-example: <SECRET>
      required:
      - secret
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--account-sessions-token:
      properties:
        userId:
          description: "User ID. Choose a custom ID or generate a random ID with `ID.unique()`.\
            \ Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore. Can't\
            \ start with a special char. Max length is 36 chars."
          type: string
          x-example: <USER_ID>
        secret:
          description: "Secret of a token generated by login methods. For example,\
            \ the `createMagicURLToken` or `createPhoneToken` methods."
          type: string
          x-example: <SECRET>
      required:
      - secret
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--account-sessions-sessionId:
      properties:
        sessionId:
          type: string
          x-example: <SESSION_ID>
      required:
      - sessionId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - sessionId
    konfig-generated-schema-single-parameter-schema-get--account-sessions-sessionId:
      properties:
        sessionId:
          type: string
          x-example: <SESSION_ID>
      required:
      - sessionId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - sessionId
    konfig-generated-schema-single-parameter-schema-patch--account-sessions-sessionId:
      properties:
        sessionId:
          type: string
          x-example: <SESSION_ID>
      required:
      - sessionId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - sessionId
    konfig-generated-schema-single-parameter-schema-patch--account-status:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--account-targets-push:
      properties:
        targetId:
          description: "Target ID. Choose a custom ID or generate a random ID with\
            \ `ID.unique()`. Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore.\
            \ Can't start with a special char. Max length is 36 chars."
          type: string
          x-example: <TARGET_ID>
        identifier:
          description: "The target identifier (token, email, phone etc.)"
          type: string
          x-example: <IDENTIFIER>
        providerId:
          description: Provider ID. Message will be sent to this target from the specified
            provider ID. If no provider ID is set the first setup provider will be
            used.
          type: string
          x-example: <PROVIDER_ID>
      required:
      - identifier
      - targetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--account-targets-targetId-push:
      properties:
        targetId:
          type: string
          x-example: <TARGET_ID>
      required:
      - targetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - targetId
    konfig-generated-schema-single-parameter-schema-put--account-targets-targetId-push:
      properties:
        targetId:
          type: string
          x-example: <TARGET_ID>
        identifier:
          description: "The target identifier (token, email, phone etc.)"
          type: string
          x-example: <IDENTIFIER>
      required:
      - identifier
      - targetId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - targetId
    konfig-generated-schema-single-parameter-schema-post--account-tokens-email:
      properties:
        userId:
          description: "User ID. Choose a custom ID or generate a random ID with `ID.unique()`.\
            \ Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore. Can't\
            \ start with a special char. Max length is 36 chars."
          type: string
          x-example: <USER_ID>
        email:
          description: User email.
          type: string
          x-example: email@example.com
        phrase:
          description: "Toggle for security phrase. If enabled, email will be send\
            \ with a randomly generated phrase and the phrase will also be included\
            \ in the response. Confirming phrases match increases the security of\
            \ your authentication flow."
          type: boolean
          x-example: false
      required:
      - email
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--account-tokens-magic-url:
      properties:
        userId:
          description: "Unique Id. Choose a custom ID or generate a random ID with\
            \ `ID.unique()`. Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore.\
            \ Can't start with a special char. Max length is 36 chars."
          type: string
          x-example: <USER_ID>
        email:
          description: User email.
          type: string
          x-example: email@example.com
        url:
          description: "URL to redirect the user back to your app from the magic URL\
            \ login. Only URLs from hostnames in your project platform list are allowed.\
            \ This requirement helps to prevent an [open redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html)\
            \ attack against your project API."
          type: string
          x-example: https://example.com
        phrase:
          description: "Toggle for security phrase. If enabled, email will be send\
            \ with a randomly generated phrase and the phrase will also be included\
            \ in the response. Confirming phrases match increases the security of\
            \ your authentication flow."
          type: boolean
          x-example: false
      required:
      - email
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--account-tokens-oauth2-provider:
      properties:
        provider:
          enum:
          - amazon
          - apple
          - auth0
          - authentik
          - autodesk
          - bitbucket
          - bitly
          - box
          - dailymotion
          - discord
          - disqus
          - dropbox
          - etsy
          - facebook
          - github
          - gitlab
          - google
          - linkedin
          - microsoft
          - notion
          - oidc
          - okta
          - paypal
          - paypalSandbox
          - podio
          - salesforce
          - slack
          - spotify
          - stripe
          - tradeshift
          - tradeshiftBox
          - twitch
          - wordpress
          - yahoo
          - yammer
          - yandex
          - zoho
          - zoom
          - mock
          type: string
          x-example: amazon
          x-enum-name: OAuthProvider
          x-enum-keys: []
        success:
          default: ""
          example: ""
          format: url
          type: string
          x-example: https://example.com
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--account-tokens-oauth2-provider-get-parameters-1-schema
        failure:
          default: ""
          example: ""
          format: url
          type: string
          x-example: https://example.com
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--account-tokens-oauth2-provider-get-parameters-2-schema
        scopes:
          default: []
          example: []
          items:
            type: string
          type: array
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-paths--account-tokens-oauth2-provider-get-parameters-3-schema
      required:
      - provider
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - provider
      - success
      - failure
      - scopes
    konfig-generated-schema-single-parameter-schema-post--account-tokens-phone:
      properties:
        userId:
          description: "Unique Id. Choose a custom ID or generate a random ID with\
            \ `ID.unique()`. Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore.\
            \ Can't start with a special char. Max length is 36 chars."
          type: string
          x-example: <USER_ID>
        phone:
          description: "Phone number. Format this number with a leading '+' and a\
            \ country code, e.g., +16175551212."
          type: string
          x-example: +12065550100
      required:
      - phone
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--account-verification:
      properties:
        url:
          description: "URL to redirect the user back to your app from the verification\
            \ email. Only URLs from hostnames in your project platform list are allowed.\
            \ This requirement helps to prevent an [open redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html)\
            \ attack against your project API."
          type: string
          x-example: https://example.com
      required:
      - url
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--account-verification:
      properties:
        userId:
          description: User ID.
          type: string
          x-example: <USER_ID>
        secret:
          description: Valid verification token.
          type: string
          x-example: <SECRET>
      required:
      - secret
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--account-verification-phone:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--account-verification-phone:
      properties:
        userId:
          description: User ID.
          type: string
          x-example: <USER_ID>
        secret:
          description: Valid verification token.
          type: string
          x-example: <SECRET>
      required:
      - secret
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--avatars-browsers-code:
      properties:
        code:
          enum:
          - aa
          - an
          - ch
          - ci
          - cm
          - cr
          - ff
          - sf
          - mf
          - ps
          - oi
          - om
          - op
          - "true"
          type: string
          x-example: aa
          x-enum-name: Browser
          x-enum-keys:
          - Avant Browser
          - Android WebView Beta
          - Google Chrome
          - Google Chrome (iOS)
          - Google Chrome (Mobile)
          - Chromium
          - Mozilla Firefox
          - Safari
          - Mobile Safari
          - Microsoft Edge
          - Microsoft Edge (iOS)
          - Opera Mini
          - Opera
          - Opera (Next)
        width:
          default: 100
          example: 100
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-browsers-code-get-parameters-1-schema
        height:
          default: 100
          example: 100
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-browsers-code-get-parameters-2-schema
        quality:
          default: 100
          example: 100
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-browsers-code-get-parameters-3-schema
      required:
      - code
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - code
      - width
      - height
      - quality
    konfig-generated-schema-single-parameter-schema-get--avatars-credit-cards-code:
      properties:
        code:
          enum:
          - amex
          - argencard
          - cabal
          - censosud
          - diners
          - discover
          - elo
          - hipercard
          - jcb
          - mastercard
          - naranja
          - targeta-shopping
          - union-china-pay
          - visa
          - mir
          - maestro
          type: string
          x-example: amex
          x-enum-name: CreditCard
          x-enum-keys:
          - American Express
          - Argencard
          - Cabal
          - Consosud
          - Diners Club
          - Discover
          - Elo
          - Hipercard
          - JCB
          - Mastercard
          - Naranja
          - Tarjeta Shopping
          - Union China Pay
          - Visa
          - MIR
          - Maestro
        width:
          default: 100
          example: 100
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-credit-cards-code-get-parameters-1-schema
        height:
          default: 100
          example: 100
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-credit-cards-code-get-parameters-2-schema
        quality:
          default: 100
          example: 100
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-credit-cards-code-get-parameters-3-schema
      required:
      - code
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - code
      - width
      - height
      - quality
    konfig-generated-schema-single-parameter-schema-get--avatars-favicon:
      properties:
        url:
          format: url
          type: string
          x-example: https://example.com
      required:
      - url
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - url
    konfig-generated-schema-single-parameter-schema-get--avatars-flags-code:
      properties:
        code:
          enum:
          - af
          - ao
          - al
          - ad
          - ae
          - ar
          - am
          - ag
          - au
          - at
          - az
          - bi
          - be
          - bj
          - bf
          - bd
          - bg
          - bh
          - bs
          - ba
          - by
          - bz
          - bo
          - br
          - bb
          - bn
          - bt
          - bw
          - cf
          - ca
          - ch
          - cl
          - cn
          - ci
          - cm
          - cd
          - cg
          - co
          - km
          - cv
          - cr
          - cu
          - cy
          - cz
          - de
          - dj
          - dm
          - dk
          - do
          - dz
          - ec
          - eg
          - er
          - es
          - ee
          - et
          - fi
          - fj
          - fr
          - fm
          - ga
          - gb
          - ge
          - gh
          - gn
          - gm
          - gw
          - gq
          - gr
          - gd
          - gt
          - gy
          - hn
          - hr
          - ht
          - hu
          - id
          - in
          - ie
          - ir
          - iq
          - is
          - il
          - it
          - jm
          - jo
          - jp
          - kz
          - ke
          - kg
          - kh
          - ki
          - kn
          - kr
          - kw
          - la
          - lb
          - lr
          - ly
          - lc
          - li
          - lk
          - ls
          - lt
          - lu
          - lv
          - ma
          - mc
          - md
          - mg
          - mv
          - mx
          - mh
          - mk
          - ml
          - mt
          - mm
          - me
          - mn
          - mz
          - mr
          - mu
          - mw
          - my
          - na
          - ne
          - ng
          - ni
          - nl
          - "false"
          - np
          - nr
          - nz
          - om
          - pk
          - pa
          - pe
          - ph
          - pw
          - pg
          - pl
          - kp
          - pt
          - py
          - qa
          - ro
          - ru
          - rw
          - sa
          - sd
          - sn
          - sg
          - sb
          - sl
          - sv
          - sm
          - so
          - rs
          - ss
          - st
          - sr
          - sk
          - si
          - se
          - sz
          - sc
          - sy
          - td
          - tg
          - th
          - tj
          - tm
          - tl
          - to
          - tt
          - tn
          - tr
          - tv
          - tz
          - ug
          - ua
          - uy
          - us
          - uz
          - va
          - vc
          - ve
          - vn
          - vu
          - ws
          - ye
          - za
          - zm
          - zw
          type: string
          x-example: af
          x-enum-name: Flag
          x-enum-keys:
          - Afghanistan
          - Angola
          - Albania
          - Andorra
          - United Arab Emirates
          - Argentina
          - Armenia
          - Antigua and Barbuda
          - Australia
          - Austria
          - Azerbaijan
          - Burundi
          - Belgium
          - Benin
          - Burkina Faso
          - Bangladesh
          - Bulgaria
          - Bahrain
          - Bahamas
          - Bosnia and Herzegovina
          - Belarus
          - Belize
          - Bolivia
          - Brazil
          - Barbados
          - Brunei Darussalam
          - Bhutan
          - Botswana
          - Central African Republic
          - Canada
          - Switzerland
          - Chile
          - China
          - Côte d'Ivoire
          - Cameroon
          - Democratic Republic of the Congo
          - Republic of the Congo
          - Colombia
          - Comoros
          - Cape Verde
          - Costa Rica
          - Cuba
          - Cyprus
          - Czech Republic
          - Germany
          - Djibouti
          - Dominica
          - Denmark
          - Dominican Republic
          - Algeria
          - Ecuador
          - Egypt
          - Eritrea
          - Spain
          - Estonia
          - Ethiopia
          - Finland
          - Fiji
          - France
          - Micronesia (Federated States of)
          - Gabon
          - United Kingdom
          - Georgia
          - Ghana
          - Guinea
          - Gambia
          - Guinea-Bissau
          - Equatorial Guinea
          - Greece
          - Grenada
          - Guatemala
          - Guyana
          - Honduras
          - Croatia
          - Haiti
          - Hungary
          - Indonesia
          - India
          - Ireland
          - Iran (Islamic Republic of)
          - Iraq
          - Iceland
          - Israel
          - Italy
          - Jamaica
          - Jordan
          - Japan
          - Kazakhstan
          - Kenya
          - Kyrgyzstan
          - Cambodia
          - Kiribati
          - Saint Kitts and Nevis
          - South Korea
          - Kuwait
          - Lao People's Democratic Republic
          - Lebanon
          - Liberia
          - Libya
          - Saint Lucia
          - Liechtenstein
          - Sri Lanka
          - Lesotho
          - Lithuania
          - Luxembourg
          - Latvia
          - Morocco
          - Monaco
          - Moldova
          - Madagascar
          - Maldives
          - Mexico
          - Marshall Islands
          - North Macedonia
          - Mali
          - Malta
          - Myanmar
          - Montenegro
          - Mongolia
          - Mozambique
          - Mauritania
          - Mauritius
          - Malawi
          - Malaysia
          - Namibia
          - Niger
          - Nigeria
          - Nicaragua
          - Netherlands
          - Norway
          - Nepal
          - Nauru
          - New Zealand
          - Oman
          - Pakistan
          - Panama
          - Peru
          - Philippines
          - Palau
          - Papua New Guinea
          - Poland
          - North Korea
          - Portugal
          - Paraguay
          - Qatar
          - Romania
          - Russia
          - Rwanda
          - Saudi Arabia
          - Sudan
          - Senegal
          - Singapore
          - Solomon Islands
          - Sierra Leone
          - El Salvador
          - San Marino
          - Somalia
          - Serbia
          - South Sudan
          - Sao Tome and Principe
          - Suriname
          - Slovakia
          - Slovenia
          - Sweden
          - Eswatini
          - Seychelles
          - Syria
          - Chad
          - Togo
          - Thailand
          - Tajikistan
          - Turkmenistan
          - Timor-Leste
          - Tonga
          - Trinidad and Tobago
          - Tunisia
          - Turkey
          - Tuvalu
          - Tanzania
          - Uganda
          - Ukraine
          - Uruguay
          - United States
          - Uzbekistan
          - Vatican City
          - Saint Vincent and the Grenadines
          - Venezuela
          - Vietnam
          - Vanuatu
          - Samoa
          - Yemen
          - South Africa
          - Zambia
          - Zimbabwe
        width:
          default: 100
          example: 100
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-flags-code-get-parameters-1-schema
        height:
          default: 100
          example: 100
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-flags-code-get-parameters-2-schema
        quality:
          default: 100
          example: 100
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-flags-code-get-parameters-3-schema
      required:
      - code
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - code
      - width
      - height
      - quality
    konfig-generated-schema-single-parameter-schema-get--avatars-image:
      properties:
        url:
          format: url
          type: string
          x-example: https://example.com
        width:
          default: 400
          example: 400
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 400
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-image-get-parameters-1-schema
        height:
          default: 400
          example: 400
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 400
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-image-get-parameters-2-schema
      required:
      - url
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - url
      - width
      - height
    konfig-generated-schema-single-parameter-schema-get--avatars-initials:
      properties:
        name:
          default: ""
          example: ""
          type: string
          x-example: <NAME>
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-initials-get-parameters-0-schema
        width:
          default: 500
          example: 500
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 500
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-initials-get-parameters-1-schema
        height:
          default: 500
          example: 500
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 500
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-initials-get-parameters-2-schema
        background:
          default: ""
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-initials-get-parameters-3-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - name
      - width
      - height
      - background
    konfig-generated-schema-single-parameter-schema-get--avatars-qr:
      properties:
        text:
          type: string
          x-example: <TEXT>
        size:
          default: 400
          example: 400
          format: int32
          type: integer
          x-example: 1
          x-konfig-original-example: 400
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-qr-get-parameters-1-schema
        margin:
          default: 1
          example: 1
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-qr-get-parameters-2-schema
        download:
          default: false
          example: false
          type: boolean
          x-example: false
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--avatars-qr-get-parameters-3-schema
      required:
      - text
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - text
      - size
      - margin
      - download
    konfig-generated-schema-single-parameter-schema-get--databases-databaseId-collections-collectionId-documents:
      properties:
        databaseId:
          type: string
          x-example: <DATABASE_ID>
        collectionId:
          type: string
          x-example: <COLLECTION_ID>
        queries:
          default: []
          example: []
          items:
            type: string
          type: array
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-paths--databases-databaseId-collections-collectionId-documents-get-parameters-2-schema
      required:
      - collectionId
      - databaseId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - databaseId
      - collectionId
      - queries
    konfig-generated-schema-single-parameter-schema-post--databases-databaseId-collections-collectionId-documents:
      properties:
        databaseId:
          type: string
          x-example: <DATABASE_ID>
        collectionId:
          type: string
          x-example: <COLLECTION_ID>
        documentId:
          description: "Document ID. Choose a custom ID or generate a random ID with\
            \ `ID.unique()`. Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore.\
            \ Can't start with a special char. Max length is 36 chars."
          type: string
          x-example: <DOCUMENT_ID>
        data:
          description: Document data as JSON object.
          type: object
          x-example: "{}"
        permissions:
          description: "An array of permissions strings. By default, only the current\
            \ user is granted all permissions. [Learn more about permissions](https://appwrite.io/docs/permissions)."
          items:
            type: string
          type: array
          x-example: "[\"read(\"any\")\"]"
      required:
      - collectionId
      - data
      - databaseId
      - documentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - databaseId
      - collectionId
    konfig-generated-schema-single-parameter-schema-delete--databases-databaseId-collections-collectionId-documents-documentId:
      properties:
        databaseId:
          type: string
          x-example: <DATABASE_ID>
        collectionId:
          type: string
          x-example: <COLLECTION_ID>
        documentId:
          type: string
          x-example: <DOCUMENT_ID>
      required:
      - collectionId
      - databaseId
      - documentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - databaseId
      - collectionId
      - documentId
    konfig-generated-schema-single-parameter-schema-get--databases-databaseId-collections-collectionId-documents-documentId:
      properties:
        databaseId:
          type: string
          x-example: <DATABASE_ID>
        collectionId:
          type: string
          x-example: <COLLECTION_ID>
        documentId:
          type: string
          x-example: <DOCUMENT_ID>
        queries:
          default: []
          example: []
          items:
            type: string
          type: array
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-paths--databases-databaseId-collections-collectionId-documents-documentId-get-parameters-3-schema
      required:
      - collectionId
      - databaseId
      - documentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - databaseId
      - collectionId
      - documentId
      - queries
    konfig-generated-schema-single-parameter-schema-patch--databases-databaseId-collections-collectionId-documents-documentId:
      properties:
        databaseId:
          type: string
          x-example: <DATABASE_ID>
        collectionId:
          type: string
          x-example: <COLLECTION_ID>
        documentId:
          type: string
          x-example: <DOCUMENT_ID>
        data:
          description: Document data as JSON object. Include only attribute and value
            pairs to be updated.
          type: object
          x-example: "{}"
        permissions:
          description: "An array of permissions strings. By default, the current permissions\
            \ are inherited. [Learn more about permissions](https://appwrite.io/docs/permissions)."
          items:
            type: string
          type: array
          x-example: "[\"read(\"any\")\"]"
      required:
      - collectionId
      - databaseId
      - documentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - databaseId
      - collectionId
      - documentId
    konfig-generated-schema-single-parameter-schema-get--functions-functionId-executions:
      properties:
        functionId:
          type: string
          x-example: <FUNCTION_ID>
        queries:
          default: []
          example: []
          items:
            type: string
          type: array
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-paths--functions-functionId-executions-get-parameters-1-schema
        search:
          default: ""
          example: ""
          type: string
          x-example: <SEARCH>
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--functions-functionId-executions-get-parameters-2-schema
      required:
      - functionId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - functionId
      - queries
      - search
    konfig-generated-schema-single-parameter-schema-post--functions-functionId-executions:
      properties:
        functionId:
          type: string
          x-example: <FUNCTION_ID>
        body:
          description: HTTP body of execution. Default value is empty string.
          type: string
          x-example: <BODY>
        async:
          description: Execute code in the background. Default value is false.
          type: boolean
          x-example: false
        path:
          description: HTTP path of execution. Path can include query params. Default
            value is /
          type: string
          x-example: <PATH>
        method:
          description: HTTP method of execution. Default value is GET.
          enum:
          - GET
          - POST
          - PUT
          - PATCH
          - DELETE
          - OPTIONS
          type: string
          x-example: GET
          x-enum-name: ExecutionMethod
          x-enum-keys: []
        headers:
          description: HTTP headers of execution. Defaults to empty.
          type: object
          x-example: "{}"
      required:
      - functionId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - functionId
    konfig-generated-schema-single-parameter-schema-get--functions-functionId-executions-executionId:
      properties:
        functionId:
          type: string
          x-example: <FUNCTION_ID>
        executionId:
          type: string
          x-example: <EXECUTION_ID>
      required:
      - executionId
      - functionId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - functionId
      - executionId
    konfig-generated-schema-single-parameter-schema-post--graphql:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--graphql-mutation:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--locale:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--locale-codes:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--locale-continents:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--locale-countries:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--locale-countries-eu:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--locale-countries-phones:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--locale-currencies:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--locale-languages:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--messaging-topics-topicId-subscribers:
      properties:
        topicId:
          type: string
          x-example: <TOPIC_ID>
        subscriberId:
          description: Subscriber ID. Choose a custom Subscriber ID or a new Subscriber
            ID.
          type: string
          x-example: <SUBSCRIBER_ID>
        targetId:
          description: Target ID. The target ID to link to the specified Topic ID.
          type: string
          x-example: <TARGET_ID>
      required:
      - subscriberId
      - targetId
      - topicId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - topicId
    konfig-generated-schema-single-parameter-schema-delete--messaging-topics-topicId-subscribers-subscriberId:
      properties:
        topicId:
          type: string
          x-example: <TOPIC_ID>
        subscriberId:
          type: string
          x-example: <SUBSCRIBER_ID>
      required:
      - subscriberId
      - topicId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - topicId
      - subscriberId
    konfig-generated-schema-single-parameter-schema-get--storage-buckets-bucketId-files:
      properties:
        bucketId:
          type: string
          x-example: <BUCKET_ID>
        queries:
          default: []
          example: []
          items:
            type: string
          type: array
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-get-parameters-1-schema
        search:
          default: ""
          example: ""
          type: string
          x-example: <SEARCH>
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-get-parameters-2-schema
      required:
      - bucketId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - bucketId
      - queries
      - search
    konfig-generated-schema-single-parameter-schema-post--storage-buckets-bucketId-files:
      properties:
        bucketId:
          type: string
          x-example: <BUCKET_ID>
        fileId:
          description: "File ID. Choose a custom ID or generate a random ID with `ID.unique()`.\
            \ Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore. Can't\
            \ start with a special char. Max length is 36 chars."
          type: string
          x-example: <FILE_ID>
          x-upload-id: true
        file:
          description: "Binary file. Appwrite SDKs provide helpers to handle file\
            \ input. [Learn about file input](https://appwrite.io/docs/storage#file-input)."
          type: string
        permissions:
          description: "An array of permission strings. By default, only the current\
            \ user is granted all permissions. [Learn more about permissions](https://appwrite.io/docs/permissions)."
          items:
            type: string
          type: array
          x-example: "[\"read(\"any\")\"]"
      required:
      - bucketId
      - file
      - fileId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - bucketId
    konfig-generated-schema-single-parameter-schema-delete--storage-buckets-bucketId-files-fileId:
      properties:
        bucketId:
          type: string
          x-example: <BUCKET_ID>
        fileId:
          type: string
          x-example: <FILE_ID>
      required:
      - bucketId
      - fileId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - bucketId
      - fileId
    konfig-generated-schema-single-parameter-schema-get--storage-buckets-bucketId-files-fileId:
      properties:
        bucketId:
          type: string
          x-example: <BUCKET_ID>
        fileId:
          type: string
          x-example: <FILE_ID>
      required:
      - bucketId
      - fileId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - bucketId
      - fileId
    konfig-generated-schema-single-parameter-schema-put--storage-buckets-bucketId-files-fileId:
      properties:
        bucketId:
          type: string
          x-example: <BUCKET_ID>
        fileId:
          type: string
          x-example: <FILE_ID>
        name:
          description: Name of the file
          type: string
          x-example: <NAME>
        permissions:
          description: "An array of permission string. By default, the current permissions\
            \ are inherited. [Learn more about permissions](https://appwrite.io/docs/permissions)."
          items:
            type: string
          type: array
          x-example: "[\"read(\"any\")\"]"
      required:
      - bucketId
      - fileId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - bucketId
      - fileId
    konfig-generated-schema-single-parameter-schema-get--storage-buckets-bucketId-files-fileId-download:
      properties:
        bucketId:
          type: string
          x-example: <BUCKET_ID>
        fileId:
          type: string
          x-example: <FILE_ID>
      required:
      - bucketId
      - fileId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - bucketId
      - fileId
    konfig-generated-schema-single-parameter-schema-get--storage-buckets-bucketId-files-fileId-preview:
      properties:
        bucketId:
          type: string
          x-example: <BUCKET_ID>
        fileId:
          type: string
          x-example: <FILE_ID>
        width:
          default: 0
          example: 0
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-2-schema
        height:
          default: 0
          example: 0
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-3-schema
        gravity:
          default: center
          enum:
          - center
          - top-left
          - top
          - top-right
          - left
          - right
          - bottom-left
          - bottom
          - bottom-right
          example: center
          type: string
          x-example: center
          x-enum-name: ImageGravity
          x-enum-keys: []
          x-konfig-original-example: center
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-4-schema
        quality:
          default: 100
          example: 100
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-5-schema
        borderWidth:
          default: 0
          example: 0
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-6-schema
        borderColor:
          default: ""
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-7-schema
        borderRadius:
          default: 0
          example: 0
          format: int32
          type: integer
          x-example: 0
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-8-schema
        opacity:
          default: 1
          example: 1
          format: float
          type: number
          x-example: 0
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-9-schema
        rotation:
          default: 0
          example: 0
          format: int32
          type: integer
          x-example: -360
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-10-schema
        background:
          default: ""
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-11-schema
        output:
          default: ""
          enum:
          - jpg
          - jpeg
          - gif
          - png
          - webp
          example: ""
          type: string
          x-example: jpg
          x-enum-name: ImageFormat
          x-enum-keys: []
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--storage-buckets-bucketId-files-fileId-preview-get-parameters-12-schema
      required:
      - bucketId
      - fileId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - bucketId
      - fileId
      - width
      - height
      - gravity
      - quality
      - borderWidth
      - borderColor
      - borderRadius
      - opacity
      - rotation
      - background
      - output
    konfig-generated-schema-single-parameter-schema-get--storage-buckets-bucketId-files-fileId-view:
      properties:
        bucketId:
          type: string
          x-example: <BUCKET_ID>
        fileId:
          type: string
          x-example: <FILE_ID>
      required:
      - bucketId
      - fileId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - bucketId
      - fileId
    konfig-generated-schema-single-parameter-schema-get--teams:
      properties:
        queries:
          default: []
          example: []
          items:
            type: string
          type: array
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-paths--teams-get-parameters-0-schema
        search:
          default: ""
          example: ""
          type: string
          x-example: <SEARCH>
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--teams-get-parameters-1-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - queries
      - search
    konfig-generated-schema-single-parameter-schema-post--teams:
      properties:
        teamId:
          description: "Team ID. Choose a custom ID or generate a random ID with `ID.unique()`.\
            \ Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore. Can't\
            \ start with a special char. Max length is 36 chars."
          type: string
          x-example: <TEAM_ID>
        name:
          description: "Team name. Max length: 128 chars."
          type: string
          x-example: <NAME>
        roles:
          description: "Array of strings. Use this param to set the roles in the team\
            \ for the user who created it. The default role is **owner**. A role can\
            \ be any string. Learn more about [roles and permissions](https://appwrite.io/docs/permissions).\
            \ Maximum of 100 roles are allowed, each 32 characters long."
          items:
            type: string
          type: array
      required:
      - name
      - teamId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--teams-teamId:
      properties:
        teamId:
          type: string
          x-example: <TEAM_ID>
      required:
      - teamId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - teamId
    konfig-generated-schema-single-parameter-schema-get--teams-teamId:
      properties:
        teamId:
          type: string
          x-example: <TEAM_ID>
      required:
      - teamId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - teamId
    konfig-generated-schema-single-parameter-schema-put--teams-teamId:
      properties:
        teamId:
          type: string
          x-example: <TEAM_ID>
        name:
          description: "New team name. Max length: 128 chars."
          type: string
          x-example: <NAME>
      required:
      - name
      - teamId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - teamId
    konfig-generated-schema-single-parameter-schema-get--teams-teamId-memberships:
      properties:
        teamId:
          type: string
          x-example: <TEAM_ID>
        queries:
          default: []
          example: []
          items:
            type: string
          type: array
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-paths--teams-teamId-memberships-get-parameters-1-schema
        search:
          default: ""
          example: ""
          type: string
          x-example: <SEARCH>
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-paths--teams-teamId-memberships-get-parameters-2-schema
      required:
      - teamId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - teamId
      - queries
      - search
    konfig-generated-schema-single-parameter-schema-post--teams-teamId-memberships:
      properties:
        teamId:
          type: string
          x-example: <TEAM_ID>
        email:
          description: Email of the new team member.
          type: string
          x-example: email@example.com
        userId:
          description: ID of the user to be added to a team.
          type: string
          x-example: <USER_ID>
        phone:
          description: "Phone number. Format this number with a leading '+' and a\
            \ country code, e.g., +16175551212."
          type: string
          x-example: +12065550100
        roles:
          description: "Array of strings. Use this param to set the user roles in\
            \ the team. A role can be any string. Learn more about [roles and permissions](https://appwrite.io/docs/permissions).\
            \ Maximum of 100 roles are allowed, each 32 characters long."
          items:
            type: string
          type: array
        url:
          description: "URL to redirect the user back to your app from the invitation\
            \ email.  Only URLs from hostnames in your project platform list are allowed.\
            \ This requirement helps to prevent an [open redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html)\
            \ attack against your project API."
          type: string
          x-example: https://example.com
        name:
          description: "Name of the new team member. Max length: 128 chars."
          type: string
          x-example: <NAME>
      required:
      - roles
      - teamId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - teamId
    konfig-generated-schema-single-parameter-schema-delete--teams-teamId-memberships-membershipId:
      properties:
        teamId:
          type: string
          x-example: <TEAM_ID>
        membershipId:
          type: string
          x-example: <MEMBERSHIP_ID>
      required:
      - membershipId
      - teamId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - teamId
      - membershipId
    konfig-generated-schema-single-parameter-schema-get--teams-teamId-memberships-membershipId:
      properties:
        teamId:
          type: string
          x-example: <TEAM_ID>
        membershipId:
          type: string
          x-example: <MEMBERSHIP_ID>
      required:
      - membershipId
      - teamId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - teamId
      - membershipId
    konfig-generated-schema-single-parameter-schema-patch--teams-teamId-memberships-membershipId:
      properties:
        teamId:
          type: string
          x-example: <TEAM_ID>
        membershipId:
          type: string
          x-example: <MEMBERSHIP_ID>
        roles:
          description: "An array of strings. Use this param to set the user's roles\
            \ in the team. A role can be any string. Learn more about [roles and permissions](https://appwrite.io/docs/permissions).\
            \ Maximum of 100 roles are allowed, each 32 characters long."
          items:
            type: string
          type: array
      required:
      - membershipId
      - roles
      - teamId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - teamId
      - membershipId
    konfig-generated-schema-single-parameter-schema-patch--teams-teamId-memberships-membershipId-status:
      properties:
        teamId:
          type: string
          x-example: <TEAM_ID>
        membershipId:
          type: string
          x-example: <MEMBERSHIP_ID>
        userId:
          description: User ID.
          type: string
          x-example: <USER_ID>
        secret:
          description: Secret key.
          type: string
          x-example: <SECRET>
      required:
      - membershipId
      - secret
      - teamId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - teamId
      - membershipId
    konfig-generated-schema-single-parameter-schema-get--teams-teamId-prefs:
      properties:
        teamId:
          type: string
          x-example: <TEAM_ID>
      required:
      - teamId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - teamId
    konfig-generated-schema-single-parameter-schema-put--teams-teamId-prefs:
      properties:
        teamId:
          type: string
          x-example: <TEAM_ID>
        prefs:
          description: Prefs key-value JSON object.
          type: object
          x-example: "{}"
      required:
      - prefs
      - teamId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - teamId
  securitySchemes:
    Project:
      description: Your project ID
      in: header
      name: X-Appwrite-Project
      type: apiKey
      x-appwrite:
        demo: 5df5acd0d48c2
      x-konfig-globally-required-security: true
    JWT:
      description: Your secret JSON Web Token
      in: header
      name: X-Appwrite-JWT
      type: apiKey
      x-konfig-globally-required-security: false
    Locale:
      description: ""
      in: header
      name: X-Appwrite-Locale
      type: apiKey
      x-appwrite:
        demo: en
      x-konfig-globally-required-security: false
    Session:
      description: The user session to authenticate with
      in: header
      name: X-Appwrite-Session
      type: apiKey
      x-konfig-globally-required-security: false

