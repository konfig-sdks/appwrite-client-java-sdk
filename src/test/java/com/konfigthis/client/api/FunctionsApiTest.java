/*
 * Appwrite
 * Appwrite backend as a service cuts up to 70% of the time and costs required for building a modern application. We abstract and simplify common development tasks behind a REST APIs, to help you develop your app in a fast and secure way. For full API documentation and tutorials go to [https://appwrite.io/docs](https://appwrite.io/docs)
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: team@appwrite.io
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Execution;
import com.konfigthis.client.model.ExecutionList;
import com.konfigthis.client.model.FunctionsTriggerFunctionExecutionRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FunctionsApi
 */
@Disabled
public class FunctionsApiTest {

    private static FunctionsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new FunctionsApi(apiClient);
    }

    /**
     * Get execution
     *
     * Get a function execution log by its unique ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExecutionLogTest() throws ApiException {
        String functionId = null;
        String executionId = null;
        Execution response = api.getExecutionLog(functionId, executionId)
                .execute();
        // TODO: test validations
    }

    /**
     * List executions
     *
     * Get a list of all the current user function execution logs. You can use the query params to filter your results.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listExecutionsTest() throws ApiException {
        String functionId = null;
        List<String> queries = null;
        String search = null;
        ExecutionList response = api.listExecutions(functionId)
                .queries(queries)
                .search(search)
                .execute();
        // TODO: test validations
    }

    /**
     * Create execution
     *
     * Trigger a function execution. The returned object will return you the current execution status. You can ping the &#x60;Get Execution&#x60; endpoint to get updates on the current execution status. Once this endpoint is called, your function execution process will start asynchronously.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void triggerFunctionExecutionTest() throws ApiException {
        String functionId = null;
        String body = null;
        Boolean async = null;
        String path = null;
        String method = null;
        Object headers = null;
        Execution response = api.triggerFunctionExecution(functionId)
                .body(body)
                .async(async)
                .path(path)
                .method(method)
                .headers(headers)
                .execute();
        // TODO: test validations
    }

}
